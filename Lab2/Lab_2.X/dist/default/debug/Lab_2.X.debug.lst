

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 15:54:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  000C                     _PIR1bits	set	12
   284  0006                     _PORTBbits	set	6
   285  0006                     _PORTB	set	6
   286  0008                     _PORTD	set	8
   287  0001                     _TMR0	set	1
   288  000B                     _INTCONbits	set	11
   289  0007                     _PORTC	set	7
   290  001E                     _ADRESH	set	30
   291  001F                     _ADCON0bits	set	31
   292  008C                     _PIE1bits	set	140
   293  009F                     _ADCON1	set	159
   294  0085                     _TRISAbits	set	133
   295  0085                     _TRISA	set	133
   296  0089                     _TRISE	set	137
   297  0088                     _TRISD	set	136
   298  0096                     _IOCB	set	150
   299  0086                     _TRISBbits	set	134
   300  0086                     _TRISB	set	134
   301  0087                     _TRISC	set	135
   302  0081                     _OPTION_REGbits	set	129
   303  0188                     _ANSELbits	set	392
   304  0189                     _ANSELH	set	393
   305  0188                     _ANSEL	set	392
   306                           
   307                           	psect	cinit
   308  000F                     start_initialization:	
   309                           ; #config settings
   310                           
   311  000F                     __initialization:
   312                           
   313                           ; Clear objects allocated to COMMON
   314  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   315  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   316  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   317  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   318  0013                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  0013                     __end_of__initialization:
   322  0013  0183               	clrf	3
   323  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssCOMMON
   326  0075                     __pbssCOMMON:
   327  0075                     _Debounce_counter_b1:
   328  0075                     	ds	2
   329  0077                     _ADC_value:
   330  0077                     	ds	2
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_conf_but:
   335  0070                     ?_confADC:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_ISR:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_ISR:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	3
   350  0073                     ??_conf_but:
   351  0073                     ??_confADC:	
   352                           ; 1 bytes @ 0x3
   353                           
   354  0073                     ??_main:	
   355                           ; 1 bytes @ 0x3
   356                           
   357                           
   358                           ; 1 bytes @ 0x3
   359  0073                     	ds	2
   360                           
   361                           	psect	maintext
   362  0017                     __pmaintext:	
   363 ;;
   364 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   365 ;;
   366 ;; *************** function _main *****************
   367 ;; Defined at:
   368 ;;		line 50 in file "main.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, pclath, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : B00/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0
   384 ;;      Temps:          2       0       0       0       0
   385 ;;      Totals:         2       0       0       0       0
   386 ;;Total ram usage:        2 bytes
   387 ;; Hardware stack levels required when called:    2
   388 ;; This function calls:
   389 ;;		_confADC
   390 ;;		_conf_but
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           
   397                           ;psect for function _main
   398  0017                     _main:
   399  0017                     l717:	
   400                           ;incstack = 0
   401                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   402                           
   403                           
   404                           ;main.c: 52:     conf_but();
   405  0017  120A  118A  205B  120A  118A  	fcall	_conf_but
   406                           
   407                           ;main.c: 53:     confADC();
   408  001C  120A  118A  2075  120A  118A  	fcall	_confADC
   409  0021                     l719:
   410                           
   411                           ;main.c: 55:         _delay((unsigned long)((10)*((8000000)/4000.0)));
   412  0021  301A               	movlw	26
   413  0022  00F4               	movwf	??_main+1
   414  0023  30F8               	movlw	248
   415  0024  00F3               	movwf	??_main
   416  0025                     u57:
   417  0025  0BF3               	decfsz	??_main,f
   418  0026  2825               	goto	u57
   419  0027  0BF4               	decfsz	??_main+1,f
   420  0028  2825               	goto	u57
   421  0029  0000               	nop
   422  002A                     l721:
   423                           
   424                           ;main.c: 56:         ADCON0bits.GO = 1;
   425  002A  1283               	bcf	3,5	;RP0=0, select bank0
   426  002B  1303               	bcf	3,6	;RP1=0, select bank0
   427  002C  149F               	bsf	31,1	;volatile
   428  002D                     l56:	
   429                           ;main.c: 58:         }
   430                           
   431                           
   432                           ;main.c: 57:         while (ADCON0bits.GO_nDONE){
   433  002D  189F               	btfsc	31,1	;volatile
   434  002E  2830               	goto	u11
   435  002F  2831               	goto	u10
   436  0030                     u11:
   437  0030  282D               	goto	l56
   438  0031                     u10:
   439  0031                     l723:
   440                           
   441                           ;main.c: 59:         ADC_value = ADRESH;
   442  0031  081E               	movf	30,w	;volatile
   443  0032  00F3               	movwf	??_main
   444  0033  01F4               	clrf	??_main+1
   445  0034  0873               	movf	??_main,w
   446  0035  00F7               	movwf	_ADC_value
   447  0036  0874               	movf	??_main+1,w
   448  0037  00F8               	movwf	_ADC_value+1
   449                           
   450                           ;main.c: 60:         PORTC = ADC_value;
   451  0038  0877               	movf	_ADC_value,w
   452  0039  0087               	movwf	7	;volatile
   453  003A  2821               	goto	l719
   454  003B  120A  118A  280C   	ljmp	start
   455  003E                     __end_of_main:
   456                           
   457                           	psect	text1
   458  005B                     __ptext1:	
   459 ;; *************** function _conf_but *****************
   460 ;; Defined at:
   461 ;;		line 83 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   475 ;;      Params:         0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           
   490                           ;psect for function _conf_but
   491  005B                     _conf_but:
   492  005B                     l679:	
   493                           ;incstack = 0
   494                           ; Regs used in _conf_but: [wreg+status,2]
   495                           
   496                           
   497                           ;main.c: 85:     INTCONbits.GIE = 1;
   498  005B  178B               	bsf	11,7	;volatile
   499                           
   500                           ;main.c: 86:     INTCONbits.PEIE = 1;
   501  005C  170B               	bsf	11,6	;volatile
   502                           
   503                           ;main.c: 87:     INTCONbits.RBIE = 1;
   504  005D  158B               	bsf	11,3	;volatile
   505  005E                     l681:
   506                           
   507                           ;main.c: 88:     ANSEL = 0;
   508  005E  1683               	bsf	3,5	;RP0=1, select bank3
   509  005F  1703               	bsf	3,6	;RP1=1, select bank3
   510  0060  0188               	clrf	8	;volatile
   511                           
   512                           ;main.c: 89:     ANSELH = 0;
   513  0061  0189               	clrf	9	;volatile
   514  0062                     l683:
   515                           
   516                           ;main.c: 90:     ANSELbits.ANS0 = 1;
   517  0062  1408               	bsf	8,0	;volatile
   518                           
   519                           ;main.c: 91:     TRISC=0x00;
   520  0063  1683               	bsf	3,5	;RP0=1, select bank1
   521  0064  1303               	bcf	3,6	;RP1=0, select bank1
   522  0065  0187               	clrf	7	;volatile
   523                           
   524                           ;main.c: 92:     TRISB=0x00;
   525  0066  0186               	clrf	6	;volatile
   526  0067                     l685:
   527                           
   528                           ;main.c: 93:     TRISBbits.TRISB0 = 1;
   529  0067  1406               	bsf	6,0	;volatile
   530  0068                     l687:
   531                           
   532                           ;main.c: 94:     TRISBbits.TRISB1 = 1;
   533  0068  1486               	bsf	6,1	;volatile
   534  0069                     l689:
   535                           
   536                           ;main.c: 95:     IOCB = 0b00000011;
   537  0069  3003               	movlw	3
   538  006A  0096               	movwf	22	;volatile
   539  006B                     l691:
   540                           
   541                           ;main.c: 96:     TRISD=0x00;
   542  006B  0188               	clrf	8	;volatile
   543  006C                     l693:
   544                           
   545                           ;main.c: 97:     TRISE=0x00;
   546  006C  0189               	clrf	9	;volatile
   547  006D                     l695:
   548                           
   549                           ;main.c: 98:     TRISA=0;
   550  006D  0185               	clrf	5	;volatile
   551  006E                     l697:
   552                           
   553                           ;main.c: 99:     TRISAbits.TRISA0 = 1;
   554  006E  1405               	bsf	5,0	;volatile
   555  006F                     l699:
   556                           
   557                           ;main.c: 100:     PORTD = 0;
   558  006F  1283               	bcf	3,5	;RP0=0, select bank0
   559  0070  1303               	bcf	3,6	;RP1=0, select bank0
   560  0071  0188               	clrf	8	;volatile
   561  0072                     l701:
   562                           
   563                           ;main.c: 101:     PORTB = 0;
   564  0072  0186               	clrf	6	;volatile
   565  0073                     l703:
   566                           
   567                           ;main.c: 102:     PORTC = 0;
   568  0073  0187               	clrf	7	;volatile
   569  0074                     l67:
   570  0074  0008               	return
   571  0075                     __end_of_conf_but:
   572                           
   573                           	psect	text2
   574  0075                     __ptext2:	
   575 ;; *************** function _confADC *****************
   576 ;; Defined at:
   577 ;;		line 3 in file "Adc_int_.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           
   606                           ;psect for function _confADC
   607  0075                     _confADC:
   608  0075                     l705:	
   609                           ;incstack = 0
   610                           ; Regs used in _confADC: [wreg+status,2+status,0]
   611                           
   612                           
   613                           ;Adc_int_.c: 6:     ADCON0bits.ADCS0 = 1;
   614  0075  1283               	bcf	3,5	;RP0=0, select bank0
   615  0076  1303               	bcf	3,6	;RP1=0, select bank0
   616  0077  171F               	bsf	31,6	;volatile
   617                           
   618                           ;Adc_int_.c: 7:     ADCON0bits.ADCS1 = 0;
   619  0078  139F               	bcf	31,7	;volatile
   620  0079                     l707:
   621                           
   622                           ;Adc_int_.c: 8:     ADCON1 = 0;
   623  0079  1683               	bsf	3,5	;RP0=1, select bank1
   624  007A  1303               	bcf	3,6	;RP1=0, select bank1
   625  007B  019F               	clrf	31	;volatile
   626  007C                     l709:
   627                           
   628                           ;Adc_int_.c: 10:     ADCON0bits.CHS = 0b0000;
   629  007C  30C3               	movlw	-61
   630  007D  1283               	bcf	3,5	;RP0=0, select bank0
   631  007E  1303               	bcf	3,6	;RP1=0, select bank0
   632  007F  059F               	andwf	31,f	;volatile
   633  0080                     l711:
   634                           
   635                           ;Adc_int_.c: 12:     ADCON0bits.ADON = 1;
   636  0080  141F               	bsf	31,0	;volatile
   637  0081                     l713:
   638                           
   639                           ;Adc_int_.c: 13:     PIE1bits.ADIE = 1;
   640  0081  1683               	bsf	3,5	;RP0=1, select bank1
   641  0082  1303               	bcf	3,6	;RP1=0, select bank1
   642  0083  170C               	bsf	12,6	;volatile
   643  0084                     l715:
   644                           
   645                           ;Adc_int_.c: 14:     PIR1bits.ADIF = 0;
   646  0084  1283               	bcf	3,5	;RP0=0, select bank0
   647  0085  1303               	bcf	3,6	;RP1=0, select bank0
   648  0086  130C               	bcf	12,6	;volatile
   649  0087                     l87:
   650  0087  0008               	return
   651  0088                     __end_of_confADC:
   652                           
   653                           	psect	text3
   654  003E                     __ptext3:	
   655 ;; *************** function _ISR *****************
   656 ;; Defined at:
   657 ;;		line 110 in file "main.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0
   673 ;;      Temps:          3       0       0       0       0
   674 ;;      Totals:         3       0       0       0       0
   675 ;;Total ram usage:        3 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		Interrupt level 1
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           
   685                           ;psect for function _ISR
   686  003E                     _ISR:
   687  003E                     i1l729:
   688                           
   689                           ;main.c: 111:     if(INTCONbits.RBIF == 1){
   690  003E  1C0B               	btfss	11,0	;volatile
   691  003F  2841               	goto	u2_21
   692  0040  2842               	goto	u2_20
   693  0041                     u2_21:
   694  0041  2854               	goto	i1l76
   695  0042                     u2_20:
   696  0042                     i1l731:
   697                           
   698                           ;main.c: 112:         if(PORTBbits.RB1 == 1){
   699  0042  1283               	bcf	3,5	;RP0=0, select bank0
   700  0043  1303               	bcf	3,6	;RP1=0, select bank0
   701  0044  1C86               	btfss	6,1	;volatile
   702  0045  2847               	goto	u3_21
   703  0046  2848               	goto	u3_20
   704  0047                     u3_21:
   705  0047  284D               	goto	i1l73
   706  0048                     u3_20:
   707  0048                     i1l733:
   708                           
   709                           ;main.c: 113:             PORTD++;
   710  0048  3001               	movlw	1
   711  0049  00F0               	movwf	??_ISR
   712  004A  0870               	movf	??_ISR,w
   713  004B  0788               	addwf	8,f	;volatile
   714                           
   715                           ;main.c: 114:         }
   716  004C  2853               	goto	i1l737
   717  004D                     i1l73:	
   718                           ;main.c: 115:         else if (PORTBbits.RB0 == 1){
   719                           
   720  004D  1C06               	btfss	6,0	;volatile
   721  004E  2850               	goto	u4_21
   722  004F  2851               	goto	u4_20
   723  0050                     u4_21:
   724  0050  2853               	goto	i1l737
   725  0051                     u4_20:
   726  0051                     i1l735:
   727                           
   728                           ;main.c: 116:             PORTD--;
   729  0051  3001               	movlw	1
   730  0052  0288               	subwf	8,f	;volatile
   731  0053                     i1l737:
   732                           
   733                           ;main.c: 118:         INTCONbits.RBIF = 0;
   734  0053  100B               	bcf	11,0	;volatile
   735  0054                     i1l76:
   736  0054  0872               	movf	??_ISR+2,w
   737  0055  008A               	movwf	10
   738  0056  0E71               	swapf	??_ISR+1,w
   739  0057  0083               	movwf	3
   740  0058  0EFE               	swapf	btemp,f
   741  0059  0E7E               	swapf	btemp,w
   742  005A  0009               	retfie
   743  005B                     __end_of_ISR:
   744  007E                     btemp	set	126	;btemp
   745  007E                     wtemp0	set	126
   746                           
   747                           	psect	intentry
   748  0004                     __pintentry:	
   749                           ;incstack = 0
   750                           ; Regs used in _ISR: [wreg+status,2+status,0]
   751                           
   752  0004                     interrupt_function:
   753  007E                     saved_w	set	btemp
   754  0004  00FE               	movwf	btemp
   755  0005  0E03               	swapf	3,w
   756  0006  00F1               	movwf	??_ISR+1
   757  0007  080A               	movf	10,w
   758  0008  00F2               	movwf	??_ISR+2
   759  0009  120A  118A  283E   	ljmp	_ISR
   760                           
   761                           	psect	config
   762                           
   763                           ;Config register CONFIG1 @ 0x2007
   764                           ;	Oscillator Selection bits
   765                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   766                           ;	Watchdog Timer Enable bit
   767                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   768                           ;	Power-up Timer Enable bit
   769                           ;	PWRTE = OFF, PWRT disabled
   770                           ;	RE3/MCLR pin function select bit
   771                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   772                           ;	Code Protection bit
   773                           ;	CP = OFF, Program memory code protection is disabled
   774                           ;	Data Code Protection bit
   775                           ;	CPD = OFF, Data memory code protection is disabled
   776                           ;	Brown Out Reset Selection bits
   777                           ;	BOREN = ON, BOR enabled
   778                           ;	Internal External Switchover bit
   779                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   780                           ;	Fail-Safe Clock Monitor Enabled bit
   781                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   782                           ;	Low Voltage Programming Enable bit
   783                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   784                           ;	In-Circuit Debugger Mode bit
   785                           ;	DEBUG = 0x1, unprogrammed default
   786  2007                     	org	8199
   787  2007  23D2               	dw	9170
   788                           
   789                           ;Config register CONFIG2 @ 0x2008
   790                           ;	Brown-out Reset Selection bit
   791                           ;	BOR4V = 0x1, unprogrammed default
   792                           ;	Flash Program Memory Self Write Enable bits
   793                           ;	WRT = OFF, Write protection off
   794  2008                     	org	8200
   795  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                            _confADC
                           _conf_but
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _confADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _confADC
   _conf_but

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 15:54:32 2021

                     l56 002D                       l67 0074                       l87 0087  
                     u10 0031                       u11 0030                       u57 0025  
                    l701 0072                      l711 0080                      l703 0073  
                    l713 0081                      l705 0075                      l721 002A  
                    l715 0084                      l707 0079                      l723 0031  
                    l709 007C                      l717 0017                      l719 0021  
                    l681 005E                      l691 006B                      l683 0062  
                    l693 006C                      l685 0067                      l695 006D  
                    l687 0068                      l679 005B                      l697 006E  
                    l689 0069                      l699 006F                      _ISR 003E  
                   ?_ISR 0070                     _IOCB 0096                     i1l73 004D  
                   i1l76 0054                     _TMR0 0001                     u2_20 0042  
                   u2_21 0041                     u3_20 0048                     u3_21 0047  
                   u4_20 0051                     u4_21 0050                     _main 0017  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l731 0042  
                  i1l733 0048                    i1l735 0051                    i1l737 0053  
                  i1l729 003E                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
        __end_of_confADC 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 003E  
                 ??_main 0073                   _ADCON1 009F                   _ADRESH 001E  
                 _ANSELH 0189         __end_of_conf_but 0075                ??_confADC 0073  
                 saved_w 007E  __end_of__initialization 0013           __pcstackCOMMON 0070  
    _Debounce_counter_b1 0075           _OPTION_REGbits 0081               __pmaintext 0017  
             __pintentry 0004                ?_conf_but 0070                _ADC_value 0077  
              _ANSELbits 0188                  _confADC 0075                  __ptext1 005B  
                __ptext2 0075                  __ptext3 003E             __size_of_ISR 001D  
             ??_conf_but 0073     end_of_initialization 0013                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086      start_initialization 000F  
            __end_of_ISR 005B              __pbssCOMMON 0075                ___latbits 0002  
      __size_of_conf_but 001A                 ?_confADC 0070        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
       __size_of_confADC 0013                 _conf_but 005B            __size_of_main 0027  
             _INTCONbits 000B                 intlevel1 0000  
