

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 09:48:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370                           
   371                           	psect	idataBANK0
   372  01D5                     __pidataBANK0:
   373                           
   374                           ;initializer for _Num
   375  01D5  343F               	retlw	63
   376  01D6  3406               	retlw	6
   377  01D7  345B               	retlw	91
   378  01D8  344F               	retlw	79
   379  01D9  3466               	retlw	102
   380  01DA  346D               	retlw	109
   381  01DB  347D               	retlw	125
   382  01DC  3407               	retlw	7
   383  01DD  347F               	retlw	127
   384  01DE  346F               	retlw	111
   385                           
   386                           ;initializer for _Pos
   387  01DF  3405               	retlw	5
   388  01E0  3403               	retlw	3
   389  0001                     _TMR0	set	1
   390  001E                     _ADRESH	set	30
   391  000C                     _PIR1bits	set	12
   392  0006                     _PORTBbits	set	6
   393  0009                     _PORTE	set	9
   394  0007                     _PORTC	set	7
   395  0006                     _PORTB	set	6
   396  0008                     _PORTD	set	8
   397  000B                     _INTCONbits	set	11
   398  001F                     _ADCON0bits	set	31
   399  005A                     _T0IF	set	90
   400  0049                     _RE1	set	73
   401  0048                     _RE0	set	72
   402  0081                     _OPTION_REGbits	set	129
   403  008C                     _PIE1bits	set	140
   404  009F                     _ADCON1	set	159
   405  0085                     _TRISAbits	set	133
   406  0085                     _TRISA	set	133
   407  0089                     _TRISE	set	137
   408  0088                     _TRISD	set	136
   409  0096                     _IOCB	set	150
   410  0086                     _TRISBbits	set	134
   411  0086                     _TRISB	set	134
   412  0087                     _TRISC	set	135
   413  0188                     _ANSELbits	set	392
   414  0189                     _ANSELH	set	393
   415  0188                     _ANSEL	set	392
   416                           
   417                           	psect	cinit
   418  0011                     start_initialization:	
   419                           ; #config settings
   420                           
   421  0011                     __initialization:
   422                           
   423                           ; Initialize objects allocated to BANK0
   424  0011  1383               	bcf	3,7	;select IRP bank0
   425  0012  302C               	movlw	low (__pdataBANK0+12)
   426  0013  00FD               	movwf	btemp+-1
   427  0014  3001               	movlw	high __pidataBANK0
   428  0015  00FE               	movwf	btemp
   429  0016  30D5               	movlw	low __pidataBANK0
   430  0017  00FF               	movwf	btemp+1
   431  0018  3020               	movlw	low __pdataBANK0
   432  0019  0084               	movwf	4
   433  001A  120A  118A  21A6  120A  118A  	fcall	init_ram0
   434                           
   435                           ; Clear objects allocated to BANK0
   436  001F  01B6               	clrf	__pbssBANK0& (0+127)
   437  0020  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   438                           
   439                           ; Clear objects allocated to COMMON
   440  0021  01F9               	clrf	__pbssCOMMON& (0+127)
   441  0022                     end_of_initialization:	
   442                           ;End of C runtime variable initialization code
   443                           
   444  0022                     __end_of__initialization:
   445  0022  0183               	clrf	3
   446  0023  120A  118A  287D   	ljmp	_main	;jump to C main() function
   447                           
   448                           	psect	bssCOMMON
   449  0079                     __pbssCOMMON:
   450  0079                     _Actual:
   451  0079                     	ds	1
   452                           
   453                           	psect	bssBANK0
   454  0036                     __pbssBANK0:
   455  0036                     _adc_fin:
   456  0036                     	ds	2
   457                           
   458                           	psect	dataBANK0
   459  0020                     __pdataBANK0:
   460  0020                     _Num:
   461  0020                     	ds	10
   462  002A                     _Pos:
   463  002A                     	ds	2
   464                           
   465                           	psect	inittext
   466  01A2                     init_fetch0:	
   467                           ;	Called with low address in FSR and high address in W
   468                           
   469  01A2  087E               	movf	btemp,w
   470  01A3  008A               	movwf	10
   471  01A4  087F               	movf	btemp+1,w
   472  01A5  0082               	movwf	2
   473  01A6                     init_ram0:	
   474                           ;Called with:
   475                           ;	high address of idata address in btemp 
   476                           ;	low address of idata address in btemp+1 
   477                           ;	low address of data in FSR
   478                           ;	high address + 1 of data in btemp-1
   479                           
   480  01A6  120A  118A  21A2  120A  118A  	fcall	init_fetch0
   481  01AB  0080               	movwf	0
   482  01AC  0A84               	incf	4,f
   483  01AD  0804               	movf	4,w
   484  01AE  067D               	xorwf	btemp+-1,w
   485  01AF  1903               	btfsc	3,2
   486  01B0  3400               	retlw	0
   487  01B1  0AFF               	incf	btemp+1,f
   488  01B2  1903               	btfsc	3,2
   489  01B3  0AFE               	incf	btemp,f
   490  01B4  29A6               	goto	init_ram0
   491                           
   492                           	psect	cstackCOMMON
   493  0070                     __pcstackCOMMON:
   494  0070                     ?_conf_but:
   495  0070                     ?_confADC:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_conf_timer0:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_main:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_ISR:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ??_ISR:	
   508                           ; 1 bytes @ 0x0
   509                           
   510                           
   511                           ; 1 bytes @ 0x0
   512  0070                     	ds	4
   513  0074                     ??_conf_but:
   514  0074                     ??_confADC:	
   515                           ; 1 bytes @ 0x4
   516                           
   517  0074                     ??_conf_timer0:	
   518                           ; 1 bytes @ 0x4
   519                           
   520  0074                     ?___lwdiv:	
   521                           ; 1 bytes @ 0x4
   522                           
   523  0074                     ?___lwmod:	
   524                           ; 2 bytes @ 0x4
   525                           
   526  0074                     ___lwdiv@divisor:	
   527                           ; 2 bytes @ 0x4
   528                           
   529  0074                     ___lwmod@divisor:	
   530                           ; 2 bytes @ 0x4
   531                           
   532                           
   533                           ; 2 bytes @ 0x4
   534  0074                     	ds	2
   535  0076                     ___lwdiv@dividend:
   536  0076                     ___lwmod@dividend:	
   537                           ; 2 bytes @ 0x6
   538                           
   539                           
   540                           ; 2 bytes @ 0x6
   541  0076                     	ds	2
   542  0078                     ??___lwdiv:
   543  0078                     ??___lwmod:	
   544                           ; 1 bytes @ 0x8
   545                           
   546                           
   547                           ; 1 bytes @ 0x8
   548  0078                     	ds	1
   549                           
   550                           	psect	cstackBANK0
   551  002C                     __pcstackBANK0:
   552  002C                     ___lwmod@counter:
   553  002C                     ___lwdiv@quotient:	
   554                           ; 1 bytes @ 0x0
   555                           
   556                           
   557                           ; 2 bytes @ 0x0
   558  002C                     	ds	2
   559  002E                     ___lwdiv@counter:
   560                           
   561                           ; 1 bytes @ 0x2
   562  002E                     	ds	1
   563  002F                     ?_change:
   564  002F                     change@nu:	
   565                           ; 1 bytes @ 0x3
   566                           
   567                           
   568                           ; 2 bytes @ 0x3
   569  002F                     	ds	2
   570  0031                     ??_change:
   571                           
   572                           ; 1 bytes @ 0x5
   573  0031                     	ds	1
   574  0032                     ??_main:
   575                           
   576                           ; 1 bytes @ 0x6
   577  0032                     	ds	2
   578  0034                     main@x:
   579                           
   580                           ; 2 bytes @ 0x8
   581  0034                     	ds	2
   582                           
   583                           	psect	maintext
   584  007D                     __pmaintext:	
   585 ;;
   586 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   587 ;;
   588 ;; *************** function _main *****************
   589 ;; Defined at:
   590 ;;		line 52 in file "main.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  x               2    8[BANK0 ] unsigned int 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : B00/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         0       2       0       0       0
   606 ;;      Temps:          0       2       0       0       0
   607 ;;      Totals:         0       4       0       0       0
   608 ;;Total ram usage:        4 bytes
   609 ;; Hardware stack levels required when called:    3
   610 ;; This function calls:
   611 ;;		_change
   612 ;;		_confADC
   613 ;;		_conf_but
   614 ;;		_conf_timer0
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _main
   622  007D                     _main:
   623  007D                     l1070:	
   624                           ;incstack = 0
   625                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   626                           
   627                           
   628                           ;main.c: 54:     conf_but();
   629  007D  120A  118A  2187  120A  118A  	fcall	_conf_but
   630                           
   631                           ;main.c: 55:     confADC();
   632  0082  120A  118A  21B5  120A  118A  	fcall	_confADC
   633  0087                     l1072:
   634                           
   635                           ;main.c: 56:     adc_fin = 0;
   636  0087  1283               	bcf	3,5	;RP0=0, select bank0
   637  0088  1303               	bcf	3,6	;RP1=0, select bank0
   638  0089  01B6               	clrf	_adc_fin
   639  008A  01B7               	clrf	_adc_fin+1
   640  008B                     l1074:
   641                           
   642                           ;main.c: 57:     RE0 = RE1 = 0;
   643  008B  1089               	bcf	9,1	;volatile
   644  008C  1009               	bcf	9,0	;volatile
   645  008D                     l1076:
   646                           
   647                           ;main.c: 58:     conf_timer0();
   648  008D  120A  118A  21C8  120A  118A  	fcall	_conf_timer0
   649  0092                     l1078:
   650                           
   651                           ;main.c: 59:     unsigned int x=0;
   652  0092  1283               	bcf	3,5	;RP0=0, select bank0
   653  0093  1303               	bcf	3,6	;RP1=0, select bank0
   654  0094  01B4               	clrf	main@x
   655  0095  01B5               	clrf	main@x+1
   656  0096                     l1080:
   657                           
   658                           ;main.c: 61:         if (adc_fin == 0){
   659  0096  0836               	movf	_adc_fin,w
   660  0097  0437               	iorwf	_adc_fin+1,w
   661  0098  1D03               	btfss	3,2
   662  0099  289B               	goto	u541
   663  009A  289C               	goto	u540
   664  009B                     u541:
   665  009B  28AE               	goto	l72
   666  009C                     u540:
   667  009C                     l1082:
   668                           
   669                           ;main.c: 62:         _delay((unsigned long)((10)*((8000000)/4000.0)));
   670  009C  301A               	movlw	26
   671  009D  1283               	bcf	3,5	;RP0=0, select bank0
   672  009E  1303               	bcf	3,6	;RP1=0, select bank0
   673  009F  00B3               	movwf	??_main+1
   674  00A0  30F7               	movlw	247
   675  00A1  00B2               	movwf	??_main
   676  00A2                     u557:
   677  00A2  0BB2               	decfsz	??_main,f
   678  00A3  28A2               	goto	u557
   679  00A4  0BB3               	decfsz	??_main+1,f
   680  00A5  28A2               	goto	u557
   681  00A6  28A7               	nop2
   682  00A7                     l1084:
   683                           
   684                           ;main.c: 63:         ADCON0bits.GO = 1;
   685  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   686  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   687  00A9  149F               	bsf	31,1	;volatile
   688                           
   689                           ;main.c: 64:         adc_fin = 1;
   690  00AA  3001               	movlw	1
   691  00AB  00B6               	movwf	_adc_fin
   692  00AC  3000               	movlw	0
   693  00AD  00B7               	movwf	_adc_fin+1
   694  00AE                     l72:	
   695                           ;main.c: 65:         }
   696                           
   697                           
   698                           ;main.c: 66:         _delay((unsigned long)((20)*((8000000)/4000.0)));
   699  00AE  3034               	movlw	52
   700  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   701  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   702  00B1  00B3               	movwf	??_main+1
   703  00B2  30F1               	movlw	241
   704  00B3  00B2               	movwf	??_main
   705  00B4                     u567:
   706  00B4  0BB2               	decfsz	??_main,f
   707  00B5  28B4               	goto	u567
   708  00B6  0BB3               	decfsz	??_main+1,f
   709  00B7  28B4               	goto	u567
   710  00B8                     l1086:
   711                           
   712                           ;main.c: 67:         change(x++);
   713  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   714  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   715  00BA  0835               	movf	main@x+1,w
   716  00BB  00B0               	movwf	change@nu+1
   717  00BC  0834               	movf	main@x,w
   718  00BD  00AF               	movwf	change@nu
   719  00BE  120A  118A  2151  120A  118A  	fcall	_change
   720  00C3                     l1088:
   721  00C3  3001               	movlw	1
   722  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   723  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   724  00C6  07B4               	addwf	main@x,f
   725  00C7  1803               	skipnc
   726  00C8  0AB5               	incf	main@x+1,f
   727  00C9  3000               	movlw	0
   728  00CA  07B5               	addwf	main@x+1,f
   729  00CB  2896               	goto	l1080
   730  00CC  120A  118A  280E   	ljmp	start
   731  00CF                     __end_of_main:
   732                           
   733                           	psect	text1
   734  01C8                     __ptext1:	
   735 ;; *************** function _conf_timer0 *****************
   736 ;; Defined at:
   737 ;;		line 3 in file "7_Segments.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		status,2
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    1
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _conf_timer0
   767  01C8                     _conf_timer0:
   768  01C8                     l964:	
   769                           ;incstack = 0
   770                           ; Regs used in _conf_timer0: [status,2]
   771                           
   772  01C8  168B               	bsf	11,5	;volatile
   773  01C9  1683               	bsf	3,5	;RP0=1, select bank1
   774  01CA  1303               	bcf	3,6	;RP1=0, select bank1
   775  01CB  1181               	bcf	1,3	;volatile
   776  01CC  1281               	bcf	1,5	;volatile
   777  01CD  1701               	bsf	1,6	;volatile
   778  01CE  1001               	bcf	1,0	;volatile
   779  01CF  1081               	bcf	1,1	;volatile
   780  01D0  1501               	bsf	1,2	;volatile
   781  01D1                     l966:
   782  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   783  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   784  01D3  0181               	clrf	1	;volatile
   785  01D4                     l114:
   786  01D4  0008               	return
   787  01D5                     __end_of_conf_timer0:
   788                           
   789                           	psect	text2
   790  0187                     __ptext2:	
   791 ;; *************** function _conf_but *****************
   792 ;; Defined at:
   793 ;;		line 78 in file "main.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0
   810 ;;      Totals:         0       0       0       0       0
   811 ;;Total ram usage:        0 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; Hardware stack levels required when called:    1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           
   822                           ;psect for function _conf_but
   823  0187                     _conf_but:
   824  0187                     l924:	
   825                           ;incstack = 0
   826                           ; Regs used in _conf_but: [wreg+status,2]
   827                           
   828                           
   829                           ;main.c: 80:     INTCONbits.GIE = 1;
   830  0187  178B               	bsf	11,7	;volatile
   831                           
   832                           ;main.c: 81:     INTCONbits.PEIE = 1;
   833  0188  170B               	bsf	11,6	;volatile
   834                           
   835                           ;main.c: 82:     INTCONbits.RBIE = 1;
   836  0189  158B               	bsf	11,3	;volatile
   837  018A                     l926:
   838                           
   839                           ;main.c: 83:     ANSEL = 0;
   840  018A  1683               	bsf	3,5	;RP0=1, select bank3
   841  018B  1703               	bsf	3,6	;RP1=1, select bank3
   842  018C  0188               	clrf	8	;volatile
   843                           
   844                           ;main.c: 84:     ANSELH = 0;
   845  018D  0189               	clrf	9	;volatile
   846  018E                     l928:
   847                           
   848                           ;main.c: 85:     ANSELbits.ANS0 = 1;
   849  018E  1408               	bsf	8,0	;volatile
   850                           
   851                           ;main.c: 86:     TRISC=0x00;
   852  018F  1683               	bsf	3,5	;RP0=1, select bank1
   853  0190  1303               	bcf	3,6	;RP1=0, select bank1
   854  0191  0187               	clrf	7	;volatile
   855                           
   856                           ;main.c: 87:     TRISB=0x00;
   857  0192  0186               	clrf	6	;volatile
   858  0193                     l930:
   859                           
   860                           ;main.c: 88:     TRISBbits.TRISB0 = 1;
   861  0193  1406               	bsf	6,0	;volatile
   862  0194                     l932:
   863                           
   864                           ;main.c: 89:     TRISBbits.TRISB1 = 1;
   865  0194  1486               	bsf	6,1	;volatile
   866  0195                     l934:
   867                           
   868                           ;main.c: 90:     IOCB = 0b00000011;
   869  0195  3003               	movlw	3
   870  0196  0096               	movwf	22	;volatile
   871  0197                     l936:
   872                           
   873                           ;main.c: 91:     TRISD=0x00;
   874  0197  0188               	clrf	8	;volatile
   875  0198                     l938:
   876                           
   877                           ;main.c: 92:     TRISE=0x00;
   878  0198  0189               	clrf	9	;volatile
   879  0199                     l940:
   880                           
   881                           ;main.c: 93:     TRISA=0;
   882  0199  0185               	clrf	5	;volatile
   883  019A                     l942:
   884                           
   885                           ;main.c: 94:     TRISAbits.TRISA0 = 1;
   886  019A  1405               	bsf	5,0	;volatile
   887  019B                     l944:
   888                           
   889                           ;main.c: 95:     PORTD = 0;
   890  019B  1283               	bcf	3,5	;RP0=0, select bank0
   891  019C  1303               	bcf	3,6	;RP1=0, select bank0
   892  019D  0188               	clrf	8	;volatile
   893  019E                     l946:
   894                           
   895                           ;main.c: 96:     PORTB = 0;
   896  019E  0186               	clrf	6	;volatile
   897  019F                     l948:
   898                           
   899                           ;main.c: 97:     PORTC = 0;
   900  019F  0187               	clrf	7	;volatile
   901  01A0                     l950:
   902                           
   903                           ;main.c: 98:     PORTE = 0;
   904  01A0  0189               	clrf	9	;volatile
   905  01A1                     l78:
   906  01A1  0008               	return
   907  01A2                     __end_of_conf_but:
   908                           
   909                           	psect	text3
   910  01B5                     __ptext3:	
   911 ;; *************** function _confADC *****************
   912 ;; Defined at:
   913 ;;		line 3 in file "Adc_int_.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   927 ;;      Params:         0       0       0       0       0
   928 ;;      Locals:         0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0
   930 ;;      Totals:         0       0       0       0       0
   931 ;;Total ram usage:        0 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           
   942                           ;psect for function _confADC
   943  01B5                     _confADC:
   944  01B5                     l952:	
   945                           ;incstack = 0
   946                           ; Regs used in _confADC: [wreg+status,2+status,0]
   947                           
   948                           
   949                           ;Adc_int_.c: 6:     ADCON0bits.ADCS0 = 1;
   950  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   951  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   952  01B7  171F               	bsf	31,6	;volatile
   953                           
   954                           ;Adc_int_.c: 7:     ADCON0bits.ADCS1 = 0;
   955  01B8  139F               	bcf	31,7	;volatile
   956  01B9                     l954:
   957                           
   958                           ;Adc_int_.c: 8:     ADCON1 = 0;
   959  01B9  1683               	bsf	3,5	;RP0=1, select bank1
   960  01BA  1303               	bcf	3,6	;RP1=0, select bank1
   961  01BB  019F               	clrf	31	;volatile
   962  01BC                     l956:
   963                           
   964                           ;Adc_int_.c: 10:     ADCON0bits.CHS = 0b0000;
   965  01BC  30C3               	movlw	-61
   966  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   967  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   968  01BF  059F               	andwf	31,f	;volatile
   969  01C0                     l958:
   970                           
   971                           ;Adc_int_.c: 12:     ADCON0bits.ADON = 1;
   972  01C0  141F               	bsf	31,0	;volatile
   973  01C1                     l960:
   974                           
   975                           ;Adc_int_.c: 13:     PIE1bits.ADIE = 1;
   976  01C1  1683               	bsf	3,5	;RP0=1, select bank1
   977  01C2  1303               	bcf	3,6	;RP1=0, select bank1
   978  01C3  170C               	bsf	12,6	;volatile
   979  01C4                     l962:
   980                           
   981                           ;Adc_int_.c: 14:     PIR1bits.ADIF = 0;
   982  01C4  1283               	bcf	3,5	;RP0=0, select bank0
   983  01C5  1303               	bcf	3,6	;RP1=0, select bank0
   984  01C6  130C               	bcf	12,6	;volatile
   985  01C7                     l103:
   986  01C7  0008               	return
   987  01C8                     __end_of_confADC:
   988                           
   989                           	psect	text4
   990  0151                     __ptext4:	
   991 ;; *************** function _change *****************
   992 ;; Defined at:
   993 ;;		line 16 in file "7_Segments.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  nu              2    3[BANK0 ] unsigned int 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1007 ;;      Params:         0       2       0       0       0
  1008 ;;      Locals:         0       0       0       0       0
  1009 ;;      Temps:          0       1       0       0       0
  1010 ;;      Totals:         0       3       0       0       0
  1011 ;;Total ram usage:        3 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    2
  1014 ;; This function calls:
  1015 ;;		___lwdiv
  1016 ;;		___lwmod
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _change
  1024  0151                     _change:
  1025  0151                     l1064:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _change: [wreg+status,2+status,0+pclath+cstack]
  1028                           
  1029  0151  3000               	movlw	0
  1030  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1031  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1032  0154  0230               	subwf	change@nu+1,w
  1033  0155  3064               	movlw	100
  1034  0156  1903               	skipnz
  1035  0157  022F               	subwf	change@nu,w
  1036  0158  1803               	skipnc
  1037  0159  295B               	goto	u531
  1038  015A  295C               	goto	u530
  1039  015B                     u531:
  1040  015B  2986               	goto	l118
  1041  015C                     u530:
  1042  015C                     l1066:
  1043  015C  300A               	movlw	10
  1044  015D  00F4               	movwf	___lwdiv@divisor
  1045  015E  3000               	movlw	0
  1046  015F  00F5               	movwf	___lwdiv@divisor+1
  1047  0160  0830               	movf	change@nu+1,w
  1048  0161  00F7               	movwf	___lwdiv@dividend+1
  1049  0162  082F               	movf	change@nu,w
  1050  0163  00F6               	movwf	___lwdiv@dividend
  1051  0164  120A  118A  20CF  120A  118A  	fcall	___lwdiv
  1052  0169  0874               	movf	?___lwdiv,w
  1053  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1054  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1055  016C  00B1               	movwf	??_change
  1056  016D  0831               	movf	??_change,w
  1057  016E  00AA               	movwf	_Pos
  1058  016F  300A               	movlw	10
  1059  0170  00F4               	movwf	___lwmod@divisor
  1060  0171  3000               	movlw	0
  1061  0172  00F5               	movwf	___lwmod@divisor+1
  1062  0173  0830               	movf	change@nu+1,w
  1063  0174  00F7               	movwf	___lwmod@dividend+1
  1064  0175  082F               	movf	change@nu,w
  1065  0176  00F6               	movwf	___lwmod@dividend
  1066  0177  120A  118A  2115  120A  118A  	fcall	___lwmod
  1067  017C  0875               	movf	?___lwmod+1,w
  1068  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1069  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1070  017F  00B0               	movwf	change@nu+1
  1071  0180  0874               	movf	?___lwmod,w
  1072  0181  00AF               	movwf	change@nu
  1073  0182                     l1068:
  1074  0182  082F               	movf	change@nu,w
  1075  0183  00B1               	movwf	??_change
  1076  0184  0831               	movf	??_change,w
  1077  0185  00AB               	movwf	_Pos+1
  1078  0186                     l118:
  1079  0186  0008               	return
  1080  0187                     __end_of_change:
  1081                           
  1082                           	psect	text5
  1083  0115                     __ptext5:	
  1084 ;; *************** function ___lwmod *****************
  1085 ;; Defined at:
  1086 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  divisor         2    4[COMMON] unsigned int 
  1089 ;;  dividend        2    6[COMMON] unsigned int 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  counter         1    0[BANK0 ] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  2    4[COMMON] unsigned int 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1101 ;;      Params:         4       0       0       0       0
  1102 ;;      Locals:         0       1       0       0       0
  1103 ;;      Temps:          1       0       0       0       0
  1104 ;;      Totals:         5       1       0       0       0
  1105 ;;Total ram usage:        6 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    1
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_change
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           
  1116                           ;psect for function ___lwmod
  1117  0115                     ___lwmod:
  1118  0115                     l1042:	
  1119                           ;incstack = 0
  1120                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1121                           
  1122  0115  0874               	movf	___lwmod@divisor,w
  1123  0116  0475               	iorwf	___lwmod@divisor+1,w
  1124  0117  1903               	btfsc	3,2
  1125  0118  291A               	goto	u471
  1126  0119  291B               	goto	u470
  1127  011A                     u471:
  1128  011A  294C               	goto	l1060
  1129  011B                     u470:
  1130  011B                     l1044:
  1131  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1132  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1133  011D  01AC               	clrf	___lwmod@counter
  1134  011E  0AAC               	incf	___lwmod@counter,f
  1135  011F  292B               	goto	l1050
  1136  0120                     l1046:
  1137  0120  3001               	movlw	1
  1138  0121                     u485:
  1139  0121  1003               	clrc
  1140  0122  0DF4               	rlf	___lwmod@divisor,f
  1141  0123  0DF5               	rlf	___lwmod@divisor+1,f
  1142  0124  3EFF               	addlw	-1
  1143  0125  1D03               	skipz
  1144  0126  2921               	goto	u485
  1145  0127                     l1048:
  1146  0127  3001               	movlw	1
  1147  0128  00F8               	movwf	??___lwmod
  1148  0129  0878               	movf	??___lwmod,w
  1149  012A  07AC               	addwf	___lwmod@counter,f
  1150  012B                     l1050:
  1151  012B  1FF5               	btfss	___lwmod@divisor+1,7
  1152  012C  292E               	goto	u491
  1153  012D  292F               	goto	u490
  1154  012E                     u491:
  1155  012E  2920               	goto	l1046
  1156  012F                     u490:
  1157  012F                     l1052:
  1158  012F  0875               	movf	___lwmod@divisor+1,w
  1159  0130  0277               	subwf	___lwmod@dividend+1,w
  1160  0131  1D03               	skipz
  1161  0132  2935               	goto	u505
  1162  0133  0874               	movf	___lwmod@divisor,w
  1163  0134  0276               	subwf	___lwmod@dividend,w
  1164  0135                     u505:
  1165  0135  1C03               	skipc
  1166  0136  2938               	goto	u501
  1167  0137  2939               	goto	u500
  1168  0138                     u501:
  1169  0138  293F               	goto	l1056
  1170  0139                     u500:
  1171  0139                     l1054:
  1172  0139  0874               	movf	___lwmod@divisor,w
  1173  013A  02F6               	subwf	___lwmod@dividend,f
  1174  013B  0875               	movf	___lwmod@divisor+1,w
  1175  013C  1C03               	skipc
  1176  013D  03F7               	decf	___lwmod@dividend+1,f
  1177  013E  02F7               	subwf	___lwmod@dividend+1,f
  1178  013F                     l1056:
  1179  013F  3001               	movlw	1
  1180  0140                     u515:
  1181  0140  1003               	clrc
  1182  0141  0CF5               	rrf	___lwmod@divisor+1,f
  1183  0142  0CF4               	rrf	___lwmod@divisor,f
  1184  0143  3EFF               	addlw	-1
  1185  0144  1D03               	skipz
  1186  0145  2940               	goto	u515
  1187  0146                     l1058:
  1188  0146  3001               	movlw	1
  1189  0147  02AC               	subwf	___lwmod@counter,f
  1190  0148  1D03               	btfss	3,2
  1191  0149  294B               	goto	u521
  1192  014A  294C               	goto	u520
  1193  014B                     u521:
  1194  014B  292F               	goto	l1052
  1195  014C                     u520:
  1196  014C                     l1060:
  1197  014C  0877               	movf	___lwmod@dividend+1,w
  1198  014D  00F5               	movwf	?___lwmod+1
  1199  014E  0876               	movf	___lwmod@dividend,w
  1200  014F  00F4               	movwf	?___lwmod
  1201  0150                     l486:
  1202  0150  0008               	return
  1203  0151                     __end_of___lwmod:
  1204                           
  1205                           	psect	text6
  1206  00CF                     __ptext6:	
  1207 ;; *************** function ___lwdiv *****************
  1208 ;; Defined at:
  1209 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  divisor         2    4[COMMON] unsigned int 
  1212 ;;  dividend        2    6[COMMON] unsigned int 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  quotient        2    0[BANK0 ] unsigned int 
  1215 ;;  counter         1    2[BANK0 ] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  2    4[COMMON] unsigned int 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         4       0       0       0       0
  1226 ;;      Locals:         0       3       0       0       0
  1227 ;;      Temps:          1       0       0       0       0
  1228 ;;      Totals:         5       3       0       0       0
  1229 ;;Total ram usage:        8 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_change
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function ___lwdiv
  1241  00CF                     ___lwdiv:
  1242  00CF                     l876:	
  1243                           ;incstack = 0
  1244                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1245                           
  1246  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1247  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1248  00D1  01AC               	clrf	___lwdiv@quotient
  1249  00D2  01AD               	clrf	___lwdiv@quotient+1
  1250  00D3                     l878:
  1251  00D3  0874               	movf	___lwdiv@divisor,w
  1252  00D4  0475               	iorwf	___lwdiv@divisor+1,w
  1253  00D5  1903               	btfsc	3,2
  1254  00D6  28D8               	goto	u241
  1255  00D7  28D9               	goto	u240
  1256  00D8                     u241:
  1257  00D8  2910               	goto	l898
  1258  00D9                     u240:
  1259  00D9                     l880:
  1260  00D9  01AE               	clrf	___lwdiv@counter
  1261  00DA  0AAE               	incf	___lwdiv@counter,f
  1262  00DB  28E7               	goto	l886
  1263  00DC                     l882:
  1264  00DC  3001               	movlw	1
  1265  00DD                     u255:
  1266  00DD  1003               	clrc
  1267  00DE  0DF4               	rlf	___lwdiv@divisor,f
  1268  00DF  0DF5               	rlf	___lwdiv@divisor+1,f
  1269  00E0  3EFF               	addlw	-1
  1270  00E1  1D03               	skipz
  1271  00E2  28DD               	goto	u255
  1272  00E3                     l884:
  1273  00E3  3001               	movlw	1
  1274  00E4  00F8               	movwf	??___lwdiv
  1275  00E5  0878               	movf	??___lwdiv,w
  1276  00E6  07AE               	addwf	___lwdiv@counter,f
  1277  00E7                     l886:
  1278  00E7  1FF5               	btfss	___lwdiv@divisor+1,7
  1279  00E8  28EA               	goto	u261
  1280  00E9  28EB               	goto	u260
  1281  00EA                     u261:
  1282  00EA  28DC               	goto	l882
  1283  00EB                     u260:
  1284  00EB                     l888:
  1285  00EB  3001               	movlw	1
  1286  00EC                     u275:
  1287  00EC  1003               	clrc
  1288  00ED  0DAC               	rlf	___lwdiv@quotient,f
  1289  00EE  0DAD               	rlf	___lwdiv@quotient+1,f
  1290  00EF  3EFF               	addlw	-1
  1291  00F0  1D03               	skipz
  1292  00F1  28EC               	goto	u275
  1293  00F2  0875               	movf	___lwdiv@divisor+1,w
  1294  00F3  0277               	subwf	___lwdiv@dividend+1,w
  1295  00F4  1D03               	skipz
  1296  00F5  28F8               	goto	u285
  1297  00F6  0874               	movf	___lwdiv@divisor,w
  1298  00F7  0276               	subwf	___lwdiv@dividend,w
  1299  00F8                     u285:
  1300  00F8  1C03               	skipc
  1301  00F9  28FB               	goto	u281
  1302  00FA  28FC               	goto	u280
  1303  00FB                     u281:
  1304  00FB  2903               	goto	l894
  1305  00FC                     u280:
  1306  00FC                     l890:
  1307  00FC  0874               	movf	___lwdiv@divisor,w
  1308  00FD  02F6               	subwf	___lwdiv@dividend,f
  1309  00FE  0875               	movf	___lwdiv@divisor+1,w
  1310  00FF  1C03               	skipc
  1311  0100  03F7               	decf	___lwdiv@dividend+1,f
  1312  0101  02F7               	subwf	___lwdiv@dividend+1,f
  1313  0102                     l892:
  1314  0102  142C               	bsf	___lwdiv@quotient,0
  1315  0103                     l894:
  1316  0103  3001               	movlw	1
  1317  0104                     u295:
  1318  0104  1003               	clrc
  1319  0105  0CF5               	rrf	___lwdiv@divisor+1,f
  1320  0106  0CF4               	rrf	___lwdiv@divisor,f
  1321  0107  3EFF               	addlw	-1
  1322  0108  1D03               	skipz
  1323  0109  2904               	goto	u295
  1324  010A                     l896:
  1325  010A  3001               	movlw	1
  1326  010B  02AE               	subwf	___lwdiv@counter,f
  1327  010C  1D03               	btfss	3,2
  1328  010D  290F               	goto	u301
  1329  010E  2910               	goto	u300
  1330  010F                     u301:
  1331  010F  28EB               	goto	l888
  1332  0110                     u300:
  1333  0110                     l898:
  1334  0110  082D               	movf	___lwdiv@quotient+1,w
  1335  0111  00F5               	movwf	?___lwdiv+1
  1336  0112  082C               	movf	___lwdiv@quotient,w
  1337  0113  00F4               	movwf	?___lwdiv
  1338  0114                     l476:
  1339  0114  0008               	return
  1340  0115                     __end_of___lwdiv:
  1341                           
  1342                           	psect	text7
  1343  0026                     __ptext7:	
  1344 ;; *************** function _ISR *****************
  1345 ;; Defined at:
  1346 ;;		line 106 in file "main.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1360 ;;      Params:         0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0
  1362 ;;      Temps:          4       0       0       0       0
  1363 ;;      Totals:         4       0       0       0       0
  1364 ;;Total ram usage:        4 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		Interrupt level 1
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _ISR
  1375  0026                     _ISR:
  1376  0026                     i1l994:
  1377                           
  1378                           ;main.c: 107:     if(INTCONbits.RBIF == 1){
  1379  0026  1C0B               	btfss	11,0	;volatile
  1380  0027  2829               	goto	u39_21
  1381  0028  282A               	goto	u39_20
  1382  0029                     u39_21:
  1383  0029  283C               	goto	i1l1004
  1384  002A                     u39_20:
  1385  002A                     i1l996:
  1386                           
  1387                           ;main.c: 108:         if(PORTBbits.RB1 == 1){
  1388  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1389  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1390  002C  1C86               	btfss	6,1	;volatile
  1391  002D  282F               	goto	u40_21
  1392  002E  2830               	goto	u40_20
  1393  002F                     u40_21:
  1394  002F  2835               	goto	i1l84
  1395  0030                     u40_20:
  1396  0030                     i1l998:
  1397                           
  1398                           ;main.c: 109:             PORTD++;
  1399  0030  3001               	movlw	1
  1400  0031  00F0               	movwf	??_ISR
  1401  0032  0870               	movf	??_ISR,w
  1402  0033  0788               	addwf	8,f	;volatile
  1403                           
  1404                           ;main.c: 110:         }
  1405  0034  283B               	goto	i1l1002
  1406  0035                     i1l84:	
  1407                           ;main.c: 111:         else if (PORTBbits.RB0 == 1){
  1408                           
  1409  0035  1C06               	btfss	6,0	;volatile
  1410  0036  2838               	goto	u41_21
  1411  0037  2839               	goto	u41_20
  1412  0038                     u41_21:
  1413  0038  283B               	goto	i1l1002
  1414  0039                     u41_20:
  1415  0039                     i1l1000:
  1416                           
  1417                           ;main.c: 112:             PORTD--;
  1418  0039  3001               	movlw	1
  1419  003A  0288               	subwf	8,f	;volatile
  1420  003B                     i1l1002:
  1421                           
  1422                           ;main.c: 114:         INTCONbits.RBIF = 0;
  1423  003B  100B               	bcf	11,0	;volatile
  1424  003C                     i1l1004:
  1425                           
  1426                           ;main.c: 117:     if(PIR1bits.ADIF == 1){
  1427  003C  1283               	bcf	3,5	;RP0=0, select bank0
  1428  003D  1303               	bcf	3,6	;RP1=0, select bank0
  1429  003E  1F0C               	btfss	12,6	;volatile
  1430  003F  2841               	goto	u42_21
  1431  0040  2842               	goto	u42_20
  1432  0041                     u42_21:
  1433  0041  2847               	goto	i1l1012
  1434  0042                     u42_20:
  1435  0042                     i1l1006:
  1436                           
  1437                           ;main.c: 118:         PORTC = ADRESH;
  1438  0042  081E               	movf	30,w	;volatile
  1439  0043  0087               	movwf	7	;volatile
  1440  0044                     i1l1008:
  1441                           
  1442                           ;main.c: 119:         adc_fin = 0;
  1443  0044  01B6               	clrf	_adc_fin
  1444  0045  01B7               	clrf	_adc_fin+1
  1445  0046                     i1l1010:
  1446                           
  1447                           ;main.c: 120:         PIR1bits.ADIF = 0;
  1448  0046  130C               	bcf	12,6	;volatile
  1449  0047                     i1l1012:
  1450                           
  1451                           ;main.c: 122:     if(T0IF){
  1452  0047  1D0B               	btfss	11,2	;volatile
  1453  0048  284A               	goto	u43_21
  1454  0049  284B               	goto	u43_20
  1455  004A                     u43_21:
  1456  004A  2874               	goto	i1l92
  1457  004B                     u43_20:
  1458  004B                     i1l1014:
  1459                           
  1460                           ;main.c: 123:         if(Actual==0)
  1461  004B  0879               	movf	_Actual,w
  1462  004C  1D03               	btfss	3,2
  1463  004D  284F               	goto	u44_21
  1464  004E  2850               	goto	u44_20
  1465  004F                     u44_21:
  1466  004F  2859               	goto	i1l1024
  1467  0050                     u44_20:
  1468  0050                     i1l1016:
  1469                           
  1470                           ;main.c: 124:     {;main.c: 125:       PORTC = 0x00;
  1471  0050  0187               	clrf	7	;volatile
  1472  0051                     i1l1018:
  1473                           
  1474                           ;main.c: 126:       RE0 = 1;
  1475  0051  1409               	bsf	9,0	;volatile
  1476  0052                     i1l1020:
  1477                           
  1478                           ;main.c: 127:       RE1 = 0;
  1479  0052  1089               	bcf	9,1	;volatile
  1480  0053                     i1l1022:
  1481                           
  1482                           ;main.c: 128:       PORTC = Num[Pos[0]];
  1483  0053  082A               	movf	_Pos,w
  1484  0054  3E20               	addlw	(low (_Num| 0))& (0+255)
  1485  0055  0084               	movwf	4
  1486  0056  1383               	bcf	3,7	;select IRP bank0
  1487  0057  0800               	movf	0,w
  1488  0058  0087               	movwf	7	;volatile
  1489  0059                     i1l1024:
  1490                           
  1491                           ;main.c: 130:     if(Actual==1)
  1492  0059  0379               	decf	_Actual,w
  1493  005A  1D03               	btfss	3,2
  1494  005B  285D               	goto	u45_21
  1495  005C  285E               	goto	u45_20
  1496  005D                     u45_21:
  1497  005D  2867               	goto	i1l1034
  1498  005E                     u45_20:
  1499  005E                     i1l1026:
  1500                           
  1501                           ;main.c: 131:     {;main.c: 132:       PORTC = 0x00;
  1502  005E  0187               	clrf	7	;volatile
  1503  005F                     i1l1028:
  1504                           
  1505                           ;main.c: 133:       RE1 = 1;
  1506  005F  1489               	bsf	9,1	;volatile
  1507  0060                     i1l1030:
  1508                           
  1509                           ;main.c: 134:       RE0 = 0;
  1510  0060  1009               	bcf	9,0	;volatile
  1511  0061                     i1l1032:
  1512                           
  1513                           ;main.c: 135:       PORTC = Num[Pos[1]];
  1514  0061  082B               	movf	_Pos+1,w
  1515  0062  3E20               	addlw	(low (_Num| 0))& (0+255)
  1516  0063  0084               	movwf	4
  1517  0064  1383               	bcf	3,7	;select IRP bank0
  1518  0065  0800               	movf	0,w
  1519  0066  0087               	movwf	7	;volatile
  1520  0067                     i1l1034:
  1521                           
  1522                           ;main.c: 137:     Actual++;
  1523  0067  3001               	movlw	1
  1524  0068  00F0               	movwf	??_ISR
  1525  0069  0870               	movf	??_ISR,w
  1526  006A  07F9               	addwf	_Actual,f
  1527  006B                     i1l1036:
  1528                           
  1529                           ;main.c: 138:     if(Actual==2){
  1530  006B  3002               	movlw	2
  1531  006C  0679               	xorwf	_Actual,w
  1532  006D  1D03               	btfss	3,2
  1533  006E  2870               	goto	u46_21
  1534  006F  2871               	goto	u46_20
  1535  0070                     u46_21:
  1536  0070  2874               	goto	i1l92
  1537  0071                     u46_20:
  1538  0071                     i1l1038:
  1539                           
  1540                           ;main.c: 139:     Actual=0;
  1541  0071  01F9               	clrf	_Actual
  1542  0072                     i1l1040:
  1543                           
  1544                           ;main.c: 140:     T0IF = 0;
  1545  0072  110B               	bcf	11,2	;volatile
  1546                           
  1547                           ;main.c: 141:     TMR0 = 0;
  1548  0073  0181               	clrf	1	;volatile
  1549  0074                     i1l92:
  1550  0074  0873               	movf	??_ISR+3,w
  1551  0075  008A               	movwf	10
  1552  0076  0872               	movf	??_ISR+2,w
  1553  0077  0084               	movwf	4
  1554  0078  0E71               	swapf	??_ISR+1,w
  1555  0079  0083               	movwf	3
  1556  007A  0EFE               	swapf	btemp,f
  1557  007B  0E7E               	swapf	btemp,w
  1558  007C  0009               	retfie
  1559  007D                     __end_of_ISR:
  1560  007E                     btemp	set	126	;btemp
  1561  007E                     wtemp0	set	126
  1562                           
  1563                           	psect	intentry
  1564  0004                     __pintentry:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  1567                           
  1568  0004                     interrupt_function:
  1569  007E                     saved_w	set	btemp
  1570  0004  00FE               	movwf	btemp
  1571  0005  0E03               	swapf	3,w
  1572  0006  00F1               	movwf	??_ISR+1
  1573  0007  0804               	movf	4,w
  1574  0008  00F2               	movwf	??_ISR+2
  1575  0009  080A               	movf	10,w
  1576  000A  00F3               	movwf	??_ISR+3
  1577  000B  120A  118A  2826   	ljmp	_ISR
  1578                           
  1579                           	psect	config
  1580                           
  1581                           ;Config register CONFIG1 @ 0x2007
  1582                           ;	Oscillator Selection bits
  1583                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1584                           ;	Watchdog Timer Enable bit
  1585                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1586                           ;	Power-up Timer Enable bit
  1587                           ;	PWRTE = OFF, PWRT disabled
  1588                           ;	RE3/MCLR pin function select bit
  1589                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1590                           ;	Code Protection bit
  1591                           ;	CP = OFF, Program memory code protection is disabled
  1592                           ;	Data Code Protection bit
  1593                           ;	CPD = OFF, Data memory code protection is disabled
  1594                           ;	Brown Out Reset Selection bits
  1595                           ;	BOREN = ON, BOR enabled
  1596                           ;	Internal External Switchover bit
  1597                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1598                           ;	Fail-Safe Clock Monitor Enabled bit
  1599                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1600                           ;	Low Voltage Programming Enable bit
  1601                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1602                           ;	In-Circuit Debugger Mode bit
  1603                           ;	DEBUG = 0x1, unprogrammed default
  1604  2007                     	org	8199
  1605  2007  23D2               	dw	9170
  1606                           
  1607                           ;Config register CONFIG2 @ 0x2008
  1608                           ;	Brown-out Reset Selection bit
  1609                           ;	BOR4V = 0x1, unprogrammed default
  1610                           ;	Flash Program Memory Self Write Enable bits
  1611                           ;	WRT = OFF, Write protection off
  1612  2008                     	org	8200
  1613  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     10      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _change->___lwdiv
    _change->___lwmod

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_change
    _change->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     980
                                              6 BANK0      4     4      0
                             _change
                            _confADC
                           _conf_but
                        _conf_timer0
 ---------------------------------------------------------------------------------
 (1) _conf_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _confADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _change                                               3     1      2     943
                                              3 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              4 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change
     ___lwdiv
     ___lwmod
   _confADC
   _conf_but
   _conf_timer0

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 09:48:01 2021

                      pc 0002                       l72 00AE                       l78 01A1  
                     fsr 0004                      l103 01C7                      l114 01D4  
                    l118 0186                      l476 0114                      l486 0150  
                    l930 0193                      l940 0199                      l932 0194  
                    l924 0187                      l950 01A0                      l942 019A  
                    l934 0195                      l926 018A                      l880 00D9  
                    l960 01C1                      l952 01B5                      l944 019B  
                    l936 0197                      l928 018E                      l890 00FC  
                    l882 00DC                      l962 01C4                      l954 01B9  
                    l946 019E                      l938 0198                      l892 0102  
                    l884 00E3                      l876 00CF                      l956 01BC  
                    l948 019F                      l964 01C8                      l894 0103  
                    l886 00E7                      l878 00D3                      l958 01C0  
                    l966 01D1                      l896 010A                      l888 00EB  
                    l898 0110                      _RE0 0048                      _RE1 0049  
                    u300 0110                      u301 010F                      u240 00D9  
                    u241 00D8                      u260 00EB                      u500 0139  
                    u261 00EA                      u501 0138                      u255 00DD  
                    u280 00FC                      u520 014C                      u281 00FB  
                    u521 014B                      u505 0135                      u530 015C  
                    u275 00EC                      u515 0140                      u531 015B  
                    u540 009C                      _ISR 0026                      u285 00F8  
                    u541 009B                      u470 011B                      u295 0104  
                    u471 011A                      u490 012F                      u491 012E  
                    u485 0121                      u557 00A2                      u567 00B4  
                    _Num 0020                      _Pos 002A                      fsr0 0004  
                    indf 0000                     ?_ISR 0070                     l1050 012B  
                   l1042 0115                     l1052 012F                     l1044 011B  
                   l1060 014C                     l1054 0139                     l1046 0120  
                   l1070 007D                     l1056 013F                     l1048 0127  
                   l1064 0151                     l1080 0096                     l1072 0087  
                   l1058 0146                     l1066 015C                     l1082 009C  
                   l1074 008B                     l1068 0182                     l1084 00A7  
                   l1076 008D                     l1086 00B8                     l1078 0092  
                   l1088 00C3                     _T0IF 005A                     _IOCB 0096  
                   i1l92 0074                     i1l84 0035                     _TMR0 0001  
                   _main 007D                     btemp 007E                     start 000E  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
        __end_of___lwdiv 0115          __end_of___lwmod 0151                    i1l994 0026  
                  i1l996 002A                    i1l998 0030                    u40_20 0030  
                  u40_21 002F                    u41_20 0039                    u41_21 0038  
                  u42_20 0042                    u42_21 0041                    u43_20 004B  
                  u43_21 004A                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u44_20 0050  
                  u44_21 004F                    u45_20 005E                    u45_21 005D  
                  u46_20 0071                    u46_21 0070                    u39_20 002A  
                  u39_21 0029                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
        __end_of_confADC 01C8                    main@x 0034                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 00CF                   ??_main 0032                   _ADCON1 009F  
                 _ADRESH 001E                   _ANSELH 0189                   i1l1000 0039  
                 i1l1010 0046                   i1l1002 003B                   i1l1020 0052  
                 i1l1012 0047                   i1l1004 003C                   i1l1030 0060  
                 i1l1022 0053                   i1l1014 004B                   i1l1006 0042  
                 i1l1040 0072                   i1l1032 0061                   i1l1016 0050  
                 i1l1024 0059                   i1l1008 0044                   i1l1026 005E  
                 i1l1034 0067                   i1l1018 0051                   i1l1036 006B  
                 i1l1028 005F                   i1l1038 0071                   _Actual 0079  
       __end_of_conf_but 01A2     __size_of_conf_timer0 000D                   _change 0151  
              ??___lwdiv 0078                ??___lwmod 0078                ??_confADC 0074  
                 saved_w 007E  __end_of__initialization 0022           __pcstackCOMMON 0070  
           __pidataBANK0 01D5           _OPTION_REGbits 0081               __pbssBANK0 0036  
             __pmaintext 007D                  ?_change 002F               __pintentry 0004  
              ?_conf_but 0070                  _adc_fin 0036          __size_of_change 0036  
                ___lwdiv 00CF                  ___lwmod 0115                _ANSELbits 0188  
                _confADC 01B5                  __ptext1 01C8                  __ptext2 0187  
                __ptext3 01B5                  __ptext4 0151                  __ptext5 0115  
                __ptext6 00CF                  __ptext7 0026             __size_of_ISR 0057  
             ??_conf_but 0074     end_of_initialization 0022                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086            ??_conf_timer0 0074  
         __end_of_change 0187      start_initialization 0011              __end_of_ISR 007D  
               ??_change 0031               init_fetch0 01A2              __pdataBANK0 0020  
    __end_of_conf_timer0 01D5              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 002C        __size_of_conf_but 001B         ___lwdiv@dividend 0076  
               ?___lwdiv 0074                 ?___lwmod 0074                 ?_confADC 0070  
       ___lwdiv@quotient 002C        interrupt_function 0004                 _PIE1bits 008C  
            _conf_timer0 01C8                 _PIR1bits 000C               _ADCON0bits 001F  
       __size_of___lwdiv 0046         __size_of___lwmod 003C         __size_of_confADC 0013  
        ___lwdiv@divisor 0074          ___lwdiv@counter 002E                 _conf_but 0187  
               change@nu 002F            __size_of_main 0052               _INTCONbits 000B  
               init_ram0 01A6                 intlevel1 0000         ___lwmod@dividend 0076  
        ___lwmod@divisor 0074          ___lwmod@counter 002C             ?_conf_timer0 0070  
