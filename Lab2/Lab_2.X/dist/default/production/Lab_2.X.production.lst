

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 23:07:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  001E                     _ADRESH	set	30
   284  000C                     _PIR1bits	set	12
   285  0006                     _PORTBbits	set	6
   286  0007                     _PORTC	set	7
   287  0006                     _PORTB	set	6
   288  0008                     _PORTD	set	8
   289  0001                     _TMR0	set	1
   290  000B                     _INTCONbits	set	11
   291  001F                     _ADCON0bits	set	31
   292  008C                     _PIE1bits	set	140
   293  009F                     _ADCON1	set	159
   294  0085                     _TRISAbits	set	133
   295  0085                     _TRISA	set	133
   296  0089                     _TRISE	set	137
   297  0088                     _TRISD	set	136
   298  0096                     _IOCB	set	150
   299  0086                     _TRISBbits	set	134
   300  0086                     _TRISB	set	134
   301  0087                     _TRISC	set	135
   302  0081                     _OPTION_REGbits	set	129
   303  0188                     _ANSELbits	set	392
   304  0189                     _ANSELH	set	393
   305  0188                     _ANSEL	set	392
   306                           
   307                           	psect	cinit
   308  000F                     start_initialization:	
   309                           ; #config settings
   310                           
   311  000F                     __initialization:
   312                           
   313                           ; Clear objects allocated to COMMON
   314  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   315  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   316  0011                     end_of_initialization:	
   317                           ;End of C runtime variable initialization code
   318                           
   319  0011                     __end_of__initialization:
   320  0011  0183               	clrf	3
   321  0012  120A  118A  283D   	ljmp	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMMON
   324  0075                     __pbssCOMMON:
   325  0075                     _adc_fin:
   326  0075                     	ds	2
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:
   330  0070                     ?_conf_but:
   331  0070                     ?_confADC:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_ISR:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_ISR:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 1 bytes @ 0x0
   345  0070                     	ds	3
   346  0073                     ??_conf_but:
   347  0073                     ??_confADC:	
   348                           ; 1 bytes @ 0x3
   349                           
   350  0073                     ??_main:	
   351                           ; 1 bytes @ 0x3
   352                           
   353                           
   354                           ; 1 bytes @ 0x3
   355  0073                     	ds	2
   356                           
   357                           	psect	maintext
   358  003D                     __pmaintext:	
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 48 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0, pclath, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : B00/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   378 ;;      Params:         0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0
   380 ;;      Temps:          2       0       0       0       0
   381 ;;      Totals:         2       0       0       0       0
   382 ;;Total ram usage:        2 bytes
   383 ;; Hardware stack levels required when called:    2
   384 ;; This function calls:
   385 ;;		_confADC
   386 ;;		_conf_but
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           
   393                           ;psect for function _main
   394  003D                     _main:
   395  003D                     l716:	
   396                           ;incstack = 0
   397                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   398                           
   399                           
   400                           ;main.c: 50:     conf_but();
   401  003D  120A  118A  2061  120A  118A  	fcall	_conf_but
   402                           
   403                           ;main.c: 51:     confADC();
   404  0042  120A  118A  207B  120A  118A  	fcall	_confADC
   405  0047                     l718:
   406                           
   407                           ;main.c: 53:         if (adc_fin == 0){
   408  0047  0875               	movf	_adc_fin,w
   409  0048  0476               	iorwf	_adc_fin+1,w
   410  0049  1D03               	btfss	3,2
   411  004A  284C               	goto	u11
   412  004B  284D               	goto	u10
   413  004C                     u11:
   414  004C  2847               	goto	l718
   415  004D                     u10:
   416  004D                     l720:
   417                           
   418                           ;main.c: 54:         _delay((unsigned long)((10)*((8000000)/4000.0)));
   419  004D  301A               	movlw	26
   420  004E  00F4               	movwf	??_main+1
   421  004F  30F8               	movlw	248
   422  0050  00F3               	movwf	??_main
   423  0051                     u67:
   424  0051  0BF3               	decfsz	??_main,f
   425  0052  2851               	goto	u67
   426  0053  0BF4               	decfsz	??_main+1,f
   427  0054  2851               	goto	u67
   428  0055  0000               	nop
   429  0056                     l722:
   430                           
   431                           ;main.c: 55:         ADCON0bits.GO = 1;
   432  0056  1283               	bcf	3,5	;RP0=0, select bank0
   433  0057  1303               	bcf	3,6	;RP1=0, select bank0
   434  0058  149F               	bsf	31,1	;volatile
   435                           
   436                           ;main.c: 56:         adc_fin = 1;
   437  0059  3001               	movlw	1
   438  005A  00F5               	movwf	_adc_fin
   439  005B  3000               	movlw	0
   440  005C  00F6               	movwf	_adc_fin+1
   441  005D  2847               	goto	l718
   442  005E  120A  118A  280C   	ljmp	start
   443  0061                     __end_of_main:
   444                           
   445                           	psect	text1
   446  0061                     __ptext1:	
   447 ;; *************** function _conf_but *****************
   448 ;; Defined at:
   449 ;;		line 79 in file "main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   463 ;;      Params:         0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used:    1
   469 ;; Hardware stack levels required when called:    1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           
   478                           ;psect for function _conf_but
   479  0061                     _conf_but:
   480  0061                     l678:	
   481                           ;incstack = 0
   482                           ; Regs used in _conf_but: [wreg+status,2]
   483                           
   484                           
   485                           ;main.c: 81:     INTCONbits.GIE = 1;
   486  0061  178B               	bsf	11,7	;volatile
   487                           
   488                           ;main.c: 82:     INTCONbits.PEIE = 1;
   489  0062  170B               	bsf	11,6	;volatile
   490                           
   491                           ;main.c: 83:     INTCONbits.RBIE = 1;
   492  0063  158B               	bsf	11,3	;volatile
   493  0064                     l680:
   494                           
   495                           ;main.c: 84:     ANSEL = 0;
   496  0064  1683               	bsf	3,5	;RP0=1, select bank3
   497  0065  1703               	bsf	3,6	;RP1=1, select bank3
   498  0066  0188               	clrf	8	;volatile
   499                           
   500                           ;main.c: 85:     ANSELH = 0;
   501  0067  0189               	clrf	9	;volatile
   502  0068                     l682:
   503                           
   504                           ;main.c: 86:     ANSELbits.ANS0 = 1;
   505  0068  1408               	bsf	8,0	;volatile
   506                           
   507                           ;main.c: 87:     TRISC=0x00;
   508  0069  1683               	bsf	3,5	;RP0=1, select bank1
   509  006A  1303               	bcf	3,6	;RP1=0, select bank1
   510  006B  0187               	clrf	7	;volatile
   511                           
   512                           ;main.c: 88:     TRISB=0x00;
   513  006C  0186               	clrf	6	;volatile
   514  006D                     l684:
   515                           
   516                           ;main.c: 89:     TRISBbits.TRISB0 = 1;
   517  006D  1406               	bsf	6,0	;volatile
   518  006E                     l686:
   519                           
   520                           ;main.c: 90:     TRISBbits.TRISB1 = 1;
   521  006E  1486               	bsf	6,1	;volatile
   522  006F                     l688:
   523                           
   524                           ;main.c: 91:     IOCB = 0b00000011;
   525  006F  3003               	movlw	3
   526  0070  0096               	movwf	22	;volatile
   527  0071                     l690:
   528                           
   529                           ;main.c: 92:     TRISD=0x00;
   530  0071  0188               	clrf	8	;volatile
   531  0072                     l692:
   532                           
   533                           ;main.c: 93:     TRISE=0x00;
   534  0072  0189               	clrf	9	;volatile
   535  0073                     l694:
   536                           
   537                           ;main.c: 94:     TRISA=0;
   538  0073  0185               	clrf	5	;volatile
   539  0074                     l696:
   540                           
   541                           ;main.c: 95:     TRISAbits.TRISA0 = 1;
   542  0074  1405               	bsf	5,0	;volatile
   543  0075                     l698:
   544                           
   545                           ;main.c: 96:     PORTD = 0;
   546  0075  1283               	bcf	3,5	;RP0=0, select bank0
   547  0076  1303               	bcf	3,6	;RP1=0, select bank0
   548  0077  0188               	clrf	8	;volatile
   549  0078                     l700:
   550                           
   551                           ;main.c: 97:     PORTB = 0;
   552  0078  0186               	clrf	6	;volatile
   553  0079                     l702:
   554                           
   555                           ;main.c: 98:     PORTC = 0;
   556  0079  0187               	clrf	7	;volatile
   557  007A                     l65:
   558  007A  0008               	return
   559  007B                     __end_of_conf_but:
   560                           
   561                           	psect	text2
   562  007B                     __ptext2:	
   563 ;; *************** function _confADC *****************
   564 ;; Defined at:
   565 ;;		line 3 in file "Adc_int_.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    1
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _confADC
   595  007B                     _confADC:
   596  007B                     l704:	
   597                           ;incstack = 0
   598                           ; Regs used in _confADC: [wreg+status,2+status,0]
   599                           
   600                           
   601                           ;Adc_int_.c: 6:     ADCON0bits.ADCS0 = 1;
   602  007B  1283               	bcf	3,5	;RP0=0, select bank0
   603  007C  1303               	bcf	3,6	;RP1=0, select bank0
   604  007D  171F               	bsf	31,6	;volatile
   605                           
   606                           ;Adc_int_.c: 7:     ADCON0bits.ADCS1 = 0;
   607  007E  139F               	bcf	31,7	;volatile
   608  007F                     l706:
   609                           
   610                           ;Adc_int_.c: 8:     ADCON1 = 0;
   611  007F  1683               	bsf	3,5	;RP0=1, select bank1
   612  0080  1303               	bcf	3,6	;RP1=0, select bank1
   613  0081  019F               	clrf	31	;volatile
   614  0082                     l708:
   615                           
   616                           ;Adc_int_.c: 10:     ADCON0bits.CHS = 0b0000;
   617  0082  30C3               	movlw	-61
   618  0083  1283               	bcf	3,5	;RP0=0, select bank0
   619  0084  1303               	bcf	3,6	;RP1=0, select bank0
   620  0085  059F               	andwf	31,f	;volatile
   621  0086                     l710:
   622                           
   623                           ;Adc_int_.c: 12:     ADCON0bits.ADON = 1;
   624  0086  141F               	bsf	31,0	;volatile
   625  0087                     l712:
   626                           
   627                           ;Adc_int_.c: 13:     PIE1bits.ADIE = 1;
   628  0087  1683               	bsf	3,5	;RP0=1, select bank1
   629  0088  1303               	bcf	3,6	;RP1=0, select bank1
   630  0089  170C               	bsf	12,6	;volatile
   631  008A                     l714:
   632                           
   633                           ;Adc_int_.c: 14:     PIR1bits.ADIF = 0;
   634  008A  1283               	bcf	3,5	;RP0=0, select bank0
   635  008B  1303               	bcf	3,6	;RP1=0, select bank0
   636  008C  130C               	bcf	12,6	;volatile
   637  008D                     l86:
   638  008D  0008               	return
   639  008E                     __end_of_confADC:
   640                           
   641                           	psect	text3
   642  0015                     __ptext3:	
   643 ;; *************** function _ISR *****************
   644 ;; Defined at:
   645 ;;		line 106 in file "main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0
   661 ;;      Temps:          3       0       0       0       0
   662 ;;      Totals:         3       0       0       0       0
   663 ;;Total ram usage:        3 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; This function calls:
   666 ;;		Nothing
   667 ;; This function is called by:
   668 ;;		Interrupt level 1
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           
   673                           ;psect for function _ISR
   674  0015                     _ISR:
   675  0015                     i1l728:
   676                           
   677                           ;main.c: 107:     if(INTCONbits.RBIF == 1){
   678  0015  1C0B               	btfss	11,0	;volatile
   679  0016  2818               	goto	u2_21
   680  0017  2819               	goto	u2_20
   681  0018                     u2_21:
   682  0018  282B               	goto	i1l738
   683  0019                     u2_20:
   684  0019                     i1l730:
   685                           
   686                           ;main.c: 108:         if(PORTBbits.RB1 == 1){
   687  0019  1283               	bcf	3,5	;RP0=0, select bank0
   688  001A  1303               	bcf	3,6	;RP1=0, select bank0
   689  001B  1C86               	btfss	6,1	;volatile
   690  001C  281E               	goto	u3_21
   691  001D  281F               	goto	u3_20
   692  001E                     u3_21:
   693  001E  2824               	goto	i1l71
   694  001F                     u3_20:
   695  001F                     i1l732:
   696                           
   697                           ;main.c: 109:             PORTD++;
   698  001F  3001               	movlw	1
   699  0020  00F0               	movwf	??_ISR
   700  0021  0870               	movf	??_ISR,w
   701  0022  0788               	addwf	8,f	;volatile
   702                           
   703                           ;main.c: 110:         }
   704  0023  282A               	goto	i1l736
   705  0024                     i1l71:	
   706                           ;main.c: 111:         else if (PORTBbits.RB0 == 1){
   707                           
   708  0024  1C06               	btfss	6,0	;volatile
   709  0025  2827               	goto	u4_21
   710  0026  2828               	goto	u4_20
   711  0027                     u4_21:
   712  0027  282A               	goto	i1l736
   713  0028                     u4_20:
   714  0028                     i1l734:
   715                           
   716                           ;main.c: 112:             PORTD--;
   717  0028  3001               	movlw	1
   718  0029  0288               	subwf	8,f	;volatile
   719  002A                     i1l736:
   720                           
   721                           ;main.c: 114:         INTCONbits.RBIF = 0;
   722  002A  100B               	bcf	11,0	;volatile
   723  002B                     i1l738:
   724                           
   725                           ;main.c: 117:     if(PIR1bits.ADIF == 1){
   726  002B  1283               	bcf	3,5	;RP0=0, select bank0
   727  002C  1303               	bcf	3,6	;RP1=0, select bank0
   728  002D  1F0C               	btfss	12,6	;volatile
   729  002E  2830               	goto	u5_21
   730  002F  2831               	goto	u5_20
   731  0030                     u5_21:
   732  0030  2836               	goto	i1l75
   733  0031                     u5_20:
   734  0031                     i1l740:
   735                           
   736                           ;main.c: 118:         PORTC = ADRESH;
   737  0031  081E               	movf	30,w	;volatile
   738  0032  0087               	movwf	7	;volatile
   739  0033                     i1l742:
   740                           
   741                           ;main.c: 119:         adc_fin = 0;
   742  0033  01F5               	clrf	_adc_fin
   743  0034  01F6               	clrf	_adc_fin+1
   744  0035                     i1l744:
   745                           
   746                           ;main.c: 120:         PIR1bits.ADIF = 0;
   747  0035  130C               	bcf	12,6	;volatile
   748  0036                     i1l75:
   749  0036  0872               	movf	??_ISR+2,w
   750  0037  008A               	movwf	10
   751  0038  0E71               	swapf	??_ISR+1,w
   752  0039  0083               	movwf	3
   753  003A  0EFE               	swapf	btemp,f
   754  003B  0E7E               	swapf	btemp,w
   755  003C  0009               	retfie
   756  003D                     __end_of_ISR:
   757  007E                     btemp	set	126	;btemp
   758  007E                     wtemp0	set	126
   759                           
   760                           	psect	intentry
   761  0004                     __pintentry:	
   762                           ;incstack = 0
   763                           ; Regs used in _ISR: [wreg+status,2+status,0]
   764                           
   765  0004                     interrupt_function:
   766  007E                     saved_w	set	btemp
   767  0004  00FE               	movwf	btemp
   768  0005  0E03               	swapf	3,w
   769  0006  00F1               	movwf	??_ISR+1
   770  0007  080A               	movf	10,w
   771  0008  00F2               	movwf	??_ISR+2
   772  0009  120A  118A  2815   	ljmp	_ISR
   773                           
   774                           	psect	config
   775                           
   776                           ;Config register CONFIG1 @ 0x2007
   777                           ;	Oscillator Selection bits
   778                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   779                           ;	Watchdog Timer Enable bit
   780                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   781                           ;	Power-up Timer Enable bit
   782                           ;	PWRTE = OFF, PWRT disabled
   783                           ;	RE3/MCLR pin function select bit
   784                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   785                           ;	Code Protection bit
   786                           ;	CP = OFF, Program memory code protection is disabled
   787                           ;	Data Code Protection bit
   788                           ;	CPD = OFF, Data memory code protection is disabled
   789                           ;	Brown Out Reset Selection bits
   790                           ;	BOREN = ON, BOR enabled
   791                           ;	Internal External Switchover bit
   792                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   793                           ;	Fail-Safe Clock Monitor Enabled bit
   794                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   795                           ;	Low Voltage Programming Enable bit
   796                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   797                           ;	In-Circuit Debugger Mode bit
   798                           ;	DEBUG = 0x1, unprogrammed default
   799  2007                     	org	8199
   800  2007  23D2               	dw	9170
   801                           
   802                           ;Config register CONFIG2 @ 0x2008
   803                           ;	Brown-out Reset Selection bit
   804                           ;	BOR4V = 0x1, unprogrammed default
   805                           ;	Flash Program Memory Self Write Enable bits
   806                           ;	WRT = OFF, Write protection off
   807  2008                     	org	8200
   808  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                            _confADC
                           _conf_but
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _confADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _confADC
   _conf_but

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 23:07:51 2021

                     l65 007A                       l86 008D                       u10 004D  
                     u11 004C                       u67 0051                      l700 0078  
                    l710 0086                      l702 0079                      l712 0087  
                    l704 007B                      l720 004D                      l714 008A  
                    l706 007F                      l722 0056                      l708 0082  
                    l716 003D                      l718 0047                      l680 0064  
                    l690 0071                      l682 0068                      l692 0072  
                    l684 006D                      l694 0073                      l686 006E  
                    l678 0061                      l696 0074                      l688 006F  
                    l698 0075                      _ISR 0015                     ?_ISR 0070  
                   _IOCB 0096                     i1l71 0024                     i1l75 0036  
                   _TMR0 0001                     u2_20 0019                     u2_21 0018  
                   u3_20 001F                     u3_21 001E                     u4_20 0028  
                   u4_21 0027                     u5_20 0031                     u5_21 0030  
                   _main 003D                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l730 0019                    i1l740 0031                    i1l732 001F  
                  i1l742 0033                    i1l734 0028                    i1l744 0035  
                  i1l736 002A                    i1l728 0015                    i1l738 002B  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089          __end_of_confADC 008E  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0061                   ??_main 0073  
                 _ADCON1 009F                   _ADRESH 001E                   _ANSELH 0189  
       __end_of_conf_but 007B                ??_confADC 0073                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070           _OPTION_REGbits 0081  
             __pmaintext 003D               __pintentry 0004                ?_conf_but 0070  
                _adc_fin 0075                _ANSELbits 0188                  _confADC 007B  
                __ptext1 0061                  __ptext2 007B                  __ptext3 0015  
           __size_of_ISR 0028               ??_conf_but 0073     end_of_initialization 0011  
              _PORTBbits 0006                _TRISAbits 0085                _TRISBbits 0086  
    start_initialization 000F              __end_of_ISR 003D              __pbssCOMMON 0075  
              ___latbits 0002        __size_of_conf_but 001A                 ?_confADC 0070  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_confADC 0013                 _conf_but 0061  
          __size_of_main 0024               _INTCONbits 000B                 intlevel1 0000  
