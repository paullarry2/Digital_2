

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 18:06:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0006                     _PORTBbits	set	6
   205  0007                     _PORTC	set	7
   206  0006                     _PORTB	set	6
   207  0001                     _TMR0	set	1
   208  000B                     _INTCONbits	set	11
   209  0008                     _PORTD	set	8
   210  0085                     _TRISAbits	set	133
   211  0085                     _TRISA	set	133
   212  0089                     _TRISE	set	137
   213  0088                     _TRISD	set	136
   214  0096                     _IOCB	set	150
   215  0086                     _TRISBbits	set	134
   216  0086                     _TRISB	set	134
   217  0087                     _TRISC	set	135
   218  0081                     _OPTION_REGbits	set	129
   219  0189                     _ANSELH	set	393
   220  0188                     _ANSEL	set	392
   221                           
   222                           	psect	cinit
   223  000F                     start_initialization:	
   224                           ; #config settings
   225                           
   226  000F                     __initialization:
   227                           
   228                           ; Clear objects allocated to COMMON
   229  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   230  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   231  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   232  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   233  0013                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  0013                     __end_of__initialization:
   237  0013  0183               	clrf	3
   238  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMMON
   241  0070                     __pbssCOMMON:
   242  0070                     _Debounce_counter_b1:
   243  0070                     	ds	2
   244  0072                     _Debounce_counter_b0:
   245  0072                     	ds	2
   246                           
   247                           	psect	cstackCOMMON
   248  0074                     __pcstackCOMMON:
   249  0074                     ?_conf_but:
   250  0074                     ?_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0074                     ?_ISR:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0074                     ??_ISR:	
   257                           ; 1 bytes @ 0x0
   258                           
   259                           
   260                           ; 1 bytes @ 0x0
   261  0074                     	ds	3
   262  0077                     ??_conf_but:
   263  0077                     ??_main:	
   264                           ; 1 bytes @ 0x3
   265                           
   266                           
   267                           ; 1 bytes @ 0x3
   268  0077                     	ds	1
   269                           
   270                           	psect	maintext
   271  0017                     __pmaintext:	
   272 ;;
   273 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   274 ;;
   275 ;; *************** function _main *****************
   276 ;; Defined at:
   277 ;;		line 48 in file "main.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : B00/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   291 ;;      Params:         0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0
   293 ;;      Temps:          1       0       0       0       0
   294 ;;      Totals:         1       0       0       0       0
   295 ;;Total ram usage:        1 bytes
   296 ;; Hardware stack levels required when called:    2
   297 ;; This function calls:
   298 ;;		_conf_but
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           
   305                           ;psect for function _main
   306  0017                     _main:
   307  0017                     l682:	
   308                           ;incstack = 0
   309                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   310                           
   311                           
   312                           ;main.c: 50:     conf_but();
   313  0017  120A  118A  2066  120A  118A  	fcall	_conf_but
   314  001C                     l684:
   315                           
   316                           ;main.c: 52:         if (Debounce_counter_b0 > 5){
   317  001C  0873               	movf	_Debounce_counter_b0+1,w
   318  001D  3A80               	xorlw	128
   319  001E  00FF               	movwf	btemp+1
   320  001F  3080               	movlw	128
   321  0020  027F               	subwf	btemp+1,w
   322  0021  1D03               	skipz
   323  0022  2825               	goto	u15
   324  0023  3006               	movlw	6
   325  0024  0272               	subwf	_Debounce_counter_b0,w
   326  0025                     u15:
   327  0025  1C03               	skipc
   328  0026  2828               	goto	u11
   329  0027  2829               	goto	u10
   330  0028                     u11:
   331  0028  2830               	goto	l690
   332  0029                     u10:
   333  0029                     l686:
   334                           
   335                           ;main.c: 53:             PORTD--;
   336  0029  3001               	movlw	1
   337  002A  1283               	bcf	3,5	;RP0=0, select bank0
   338  002B  1303               	bcf	3,6	;RP1=0, select bank0
   339  002C  0288               	subwf	8,f	;volatile
   340  002D                     l688:
   341                           
   342                           ;main.c: 54:             Debounce_counter_b0 = 0;
   343  002D  01F2               	clrf	_Debounce_counter_b0
   344  002E  01F3               	clrf	_Debounce_counter_b0+1
   345                           
   346                           ;main.c: 55:         }
   347  002F  281C               	goto	l684
   348  0030                     l690:
   349  0030  0871               	movf	_Debounce_counter_b1+1,w
   350  0031  3A80               	xorlw	128
   351  0032  00FF               	movwf	btemp+1
   352  0033  3080               	movlw	128
   353  0034  027F               	subwf	btemp+1,w
   354  0035  1D03               	skipz
   355  0036  2839               	goto	u25
   356  0037  3006               	movlw	6
   357  0038  0270               	subwf	_Debounce_counter_b1,w
   358  0039                     u25:
   359  0039  1C03               	skipc
   360  003A  283C               	goto	u21
   361  003B  283D               	goto	u20
   362  003C                     u21:
   363  003C  281C               	goto	l684
   364  003D                     u20:
   365  003D                     l692:
   366                           
   367                           ;main.c: 57:             PORTD++;
   368  003D  3001               	movlw	1
   369  003E  00F7               	movwf	??_main
   370  003F  0877               	movf	??_main,w
   371  0040  1283               	bcf	3,5	;RP0=0, select bank0
   372  0041  1303               	bcf	3,6	;RP1=0, select bank0
   373  0042  0788               	addwf	8,f	;volatile
   374  0043                     l694:
   375                           
   376                           ;main.c: 58:             Debounce_counter_b1 = 0;
   377  0043  01F0               	clrf	_Debounce_counter_b1
   378  0044  01F1               	clrf	_Debounce_counter_b1+1
   379  0045  281C               	goto	l684
   380  0046  120A  118A  280C   	ljmp	start
   381  0049                     __end_of_main:
   382                           
   383                           	psect	text1
   384  0066                     __ptext1:	
   385 ;; *************** function _conf_but *****************
   386 ;; Defined at:
   387 ;;		line 80 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0
   404 ;;      Totals:         0       0       0       0       0
   405 ;;Total ram usage:        0 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; Hardware stack levels required when called:    1
   408 ;; This function calls:
   409 ;;		Nothing
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           
   416                           ;psect for function _conf_but
   417  0066                     _conf_but:
   418  0066                     l658:	
   419                           ;incstack = 0
   420                           ; Regs used in _conf_but: [wreg+status,2]
   421                           
   422                           
   423                           ;main.c: 82:     INTCONbits.GIE = 1;
   424  0066  178B               	bsf	11,7	;volatile
   425                           
   426                           ;main.c: 83:     INTCONbits.PEIE = 1;
   427  0067  170B               	bsf	11,6	;volatile
   428                           
   429                           ;main.c: 84:     INTCONbits.RBIE = 1;
   430  0068  158B               	bsf	11,3	;volatile
   431  0069                     l660:
   432                           
   433                           ;main.c: 85:     ANSEL = 0;
   434  0069  1683               	bsf	3,5	;RP0=1, select bank3
   435  006A  1703               	bsf	3,6	;RP1=1, select bank3
   436  006B  0188               	clrf	8	;volatile
   437                           
   438                           ;main.c: 86:     ANSELH = 0;
   439  006C  0189               	clrf	9	;volatile
   440                           
   441                           ;main.c: 87:     TRISC=0x00;
   442  006D  1683               	bsf	3,5	;RP0=1, select bank1
   443  006E  1303               	bcf	3,6	;RP1=0, select bank1
   444  006F  0187               	clrf	7	;volatile
   445                           
   446                           ;main.c: 88:     TRISB=0x00;
   447  0070  0186               	clrf	6	;volatile
   448  0071                     l662:
   449                           
   450                           ;main.c: 89:     TRISBbits.TRISB0 = 1;
   451  0071  1406               	bsf	6,0	;volatile
   452  0072                     l664:
   453                           
   454                           ;main.c: 90:     TRISBbits.TRISB1 = 1;
   455  0072  1486               	bsf	6,1	;volatile
   456  0073                     l666:
   457                           
   458                           ;main.c: 91:     IOCB = 0b00000011;
   459  0073  3003               	movlw	3
   460  0074  0096               	movwf	22	;volatile
   461  0075                     l668:
   462                           
   463                           ;main.c: 92:     TRISD=0x00;
   464  0075  0188               	clrf	8	;volatile
   465  0076                     l670:
   466                           
   467                           ;main.c: 93:     TRISE=0x00;
   468  0076  0189               	clrf	9	;volatile
   469  0077                     l672:
   470                           
   471                           ;main.c: 94:     TRISA=0;
   472  0077  0185               	clrf	5	;volatile
   473  0078                     l674:
   474                           
   475                           ;main.c: 95:     TRISAbits.TRISA0 = 1;
   476  0078  1405               	bsf	5,0	;volatile
   477  0079                     l676:
   478                           
   479                           ;main.c: 96:     PORTD = 0;
   480  0079  1283               	bcf	3,5	;RP0=0, select bank0
   481  007A  1303               	bcf	3,6	;RP1=0, select bank0
   482  007B  0188               	clrf	8	;volatile
   483  007C                     l678:
   484                           
   485                           ;main.c: 97:     PORTB = 0;
   486  007C  0186               	clrf	6	;volatile
   487  007D                     l680:
   488                           
   489                           ;main.c: 98:     PORTC = 0;
   490  007D  0187               	clrf	7	;volatile
   491  007E                     l57:
   492  007E  0008               	return
   493  007F                     __end_of_conf_but:
   494                           
   495                           	psect	text2
   496  0049                     __ptext2:	
   497 ;; *************** function _ISR *****************
   498 ;; Defined at:
   499 ;;		line 106 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0
   515 ;;      Temps:          3       0       0       0       0
   516 ;;      Totals:         3       0       0       0       0
   517 ;;Total ram usage:        3 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; This function calls:
   520 ;;		Nothing
   521 ;; This function is called by:
   522 ;;		Interrupt level 1
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _ISR
   528  0049                     _ISR:
   529  0049                     i1l700:
   530                           
   531                           ;main.c: 107:     if(INTCONbits.RBIF == 1){
   532  0049  1C0B               	btfss	11,0	;volatile
   533  004A  284C               	goto	u3_21
   534  004B  284D               	goto	u3_20
   535  004C                     u3_21:
   536  004C  285F               	goto	i1l66
   537  004D                     u3_20:
   538  004D                     i1l702:
   539                           
   540                           ;main.c: 108:         if(PORTBbits.RB1 == 1){
   541  004D  1283               	bcf	3,5	;RP0=0, select bank0
   542  004E  1303               	bcf	3,6	;RP1=0, select bank0
   543  004F  1C86               	btfss	6,1	;volatile
   544  0050  2852               	goto	u4_21
   545  0051  2853               	goto	u4_20
   546  0052                     u4_21:
   547  0052  2858               	goto	i1l63
   548  0053                     u4_20:
   549  0053                     i1l704:
   550                           
   551                           ;main.c: 109:             PORTD++;
   552  0053  3001               	movlw	1
   553  0054  00F4               	movwf	??_ISR
   554  0055  0874               	movf	??_ISR,w
   555  0056  0788               	addwf	8,f	;volatile
   556                           
   557                           ;main.c: 110:         }
   558  0057  285E               	goto	i1l708
   559  0058                     i1l63:	
   560                           ;main.c: 111:         else if (PORTBbits.RB0 == 1){
   561                           
   562  0058  1C06               	btfss	6,0	;volatile
   563  0059  285B               	goto	u5_21
   564  005A  285C               	goto	u5_20
   565  005B                     u5_21:
   566  005B  285E               	goto	i1l708
   567  005C                     u5_20:
   568  005C                     i1l706:
   569                           
   570                           ;main.c: 112:             PORTD--;
   571  005C  3001               	movlw	1
   572  005D  0288               	subwf	8,f	;volatile
   573  005E                     i1l708:
   574                           
   575                           ;main.c: 114:         INTCONbits.RBIF = 0;
   576  005E  100B               	bcf	11,0	;volatile
   577  005F                     i1l66:
   578  005F  0876               	movf	??_ISR+2,w
   579  0060  008A               	movwf	10
   580  0061  0E75               	swapf	??_ISR+1,w
   581  0062  0083               	movwf	3
   582  0063  0EFE               	swapf	btemp,f
   583  0064  0E7E               	swapf	btemp,w
   584  0065  0009               	retfie
   585  0066                     __end_of_ISR:
   586  007E                     btemp	set	126	;btemp
   587  007E                     wtemp0	set	126
   588                           
   589                           	psect	intentry
   590  0004                     __pintentry:	
   591                           ;incstack = 0
   592                           ; Regs used in _ISR: [wreg+status,2+status,0]
   593                           
   594  0004                     interrupt_function:
   595  007E                     saved_w	set	btemp
   596  0004  00FE               	movwf	btemp
   597  0005  0E03               	swapf	3,w
   598  0006  00F5               	movwf	??_ISR+1
   599  0007  080A               	movf	10,w
   600  0008  00F6               	movwf	??_ISR+2
   601  0009  120A  118A  2849   	ljmp	_ISR
   602                           
   603                           	psect	config
   604                           
   605                           ;Config register CONFIG1 @ 0x2007
   606                           ;	Oscillator Selection bits
   607                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   608                           ;	Watchdog Timer Enable bit
   609                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   610                           ;	Power-up Timer Enable bit
   611                           ;	PWRTE = OFF, PWRT disabled
   612                           ;	RE3/MCLR pin function select bit
   613                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   614                           ;	Code Protection bit
   615                           ;	CP = OFF, Program memory code protection is disabled
   616                           ;	Data Code Protection bit
   617                           ;	CPD = OFF, Data memory code protection is disabled
   618                           ;	Brown Out Reset Selection bits
   619                           ;	BOREN = ON, BOR enabled
   620                           ;	Internal External Switchover bit
   621                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   622                           ;	Fail-Safe Clock Monitor Enabled bit
   623                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   624                           ;	Low Voltage Programming Enable bit
   625                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   626                           ;	In-Circuit Debugger Mode bit
   627                           ;	DEBUG = 0x1, unprogrammed default
   628  2007                     	org	8199
   629  2007  23D2               	dw	9170
   630                           
   631                           ;Config register CONFIG2 @ 0x2008
   632                           ;	Brown-out Reset Selection bit
   633                           ;	BOR4V = 0x1, unprogrammed default
   634                           ;	Flash Program Memory Self Write Enable bits
   635                           ;	WRT = OFF, Write protection off
   636  2008                     	org	8200
   637  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              3 COMMON     1     1      0
                           _conf_but
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conf_but

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 18:06:58 2021

                     l57 007E                       u10 0029                       u11 0028  
                     u20 003D                       u21 003C                       u15 0025  
                     u25 0039                      l660 0069                      l670 0076  
                    l662 0071                      l680 007D                      l672 0077  
                    l664 0072                      l674 0078                      l666 0073  
                    l658 0066                      l690 0030                      l682 0017  
                    l676 0079                      l668 0075                      l692 003D  
                    l684 001C                      l678 007C                      l694 0043  
                    l686 0029                      l688 002D                      _ISR 0049  
                   ?_ISR 0074                     _IOCB 0096                     i1l63 0058  
                   i1l66 005F                     _TMR0 0001                     u3_20 004D  
                   u3_21 004C                     u4_20 0053                     u4_21 0052  
                   u5_20 005C                     u5_21 005B                     _main 0017  
                   btemp 007E                     start 000C                    ??_ISR 0074  
                  ?_main 0074                    _ANSEL 0188                    i1l700 0049  
                  i1l702 004D                    i1l704 0053                    i1l706 005C  
                  i1l708 005E                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0049                   ??_main 0077  
                 _ANSELH 0189         __end_of_conf_but 007F                   saved_w 007E  
__end_of__initialization 0013           __pcstackCOMMON 0074      _Debounce_counter_b0 0072  
    _Debounce_counter_b1 0070           _OPTION_REGbits 0081               __pmaintext 0017  
             __pintentry 0004                ?_conf_but 0074                  __ptext1 0066  
                __ptext2 0049             __size_of_ISR 001D               ??_conf_but 0077  
   end_of_initialization 0013                _PORTBbits 0006                _TRISAbits 0085  
              _TRISBbits 0086      start_initialization 000F              __end_of_ISR 0066  
            __pbssCOMMON 0070                ___latbits 0002        __size_of_conf_but 0019  
      interrupt_function 0004                 _conf_but 0066            __size_of_main 0032  
             _INTCONbits 000B                 intlevel1 0000  
