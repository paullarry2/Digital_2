

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 14:35:25 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  000C                     _PIR1bits	set	12
   284  001F                     _ADCON0bits	set	31
   285  0006                     _PORTBbits	set	6
   286  0007                     _PORTC	set	7
   287  0006                     _PORTB	set	6
   288  0008                     _PORTD	set	8
   289  0001                     _TMR0	set	1
   290  000B                     _INTCONbits	set	11
   291  008C                     _PIE1bits	set	140
   292  009F                     _ADCON1	set	159
   293  0085                     _TRISAbits	set	133
   294  0085                     _TRISA	set	133
   295  0089                     _TRISE	set	137
   296  0088                     _TRISD	set	136
   297  0096                     _IOCB	set	150
   298  0086                     _TRISBbits	set	134
   299  0086                     _TRISB	set	134
   300  0087                     _TRISC	set	135
   301  0081                     _OPTION_REGbits	set	129
   302  0189                     _ANSELH	set	393
   303  0188                     _ANSEL	set	392
   304                           
   305                           	psect	cinit
   306  000F                     start_initialization:	
   307                           ; #config settings
   308                           
   309  000F                     __initialization:
   310                           
   311                           ; Clear objects allocated to COMMON
   312  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   313  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   314  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   315  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   316  0013                     end_of_initialization:	
   317                           ;End of C runtime variable initialization code
   318                           
   319  0013                     __end_of__initialization:
   320  0013  0183               	clrf	3
   321  0014  120A  118A  2860   	ljmp	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMMON
   324  0070                     __pbssCOMMON:
   325  0070                     _Debounce_counter_b1:
   326  0070                     	ds	2
   327  0072                     _Debounce_counter_b0:
   328  0072                     	ds	2
   329                           
   330                           	psect	cstackCOMMON
   331  0074                     __pcstackCOMMON:
   332  0074                     ?_conf_but:
   333  0074                     ?_confADC:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0074                     ?_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0074                     ?_ISR:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0074                     ??_ISR:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0074                     	ds	3
   348  0077                     ??_conf_but:
   349  0077                     ??_confADC:	
   350                           ; 1 bytes @ 0x3
   351                           
   352  0077                     ??_main:	
   353                           ; 1 bytes @ 0x3
   354                           
   355                           
   356                           	psect	maintext
   357  0060                     __pmaintext:	
   358                           ; 1 bytes @ 0x3
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 49 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0, pclath, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : B00/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   378 ;;      Params:         0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0
   381 ;;      Totals:         0       0       0       0       0
   382 ;;Total ram usage:        0 bytes
   383 ;; Hardware stack levels required when called:    2
   384 ;; This function calls:
   385 ;;		_confADC
   386 ;;		_conf_but
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           
   393                           ;psect for function _main
   394  0060                     _main:
   395  0060                     l704:	
   396                           ;incstack = 0
   397                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   398                           
   399                           
   400                           ;main.c: 51:     conf_but();
   401  0060  120A  118A  2034  120A  118A  	fcall	_conf_but
   402                           
   403                           ;main.c: 52:     confADC();
   404  0065  120A  118A  204D  120A  118A  	fcall	_confADC
   405  006A                     l47:	
   406                           ;main.c: 53:     while(1){
   407                           
   408  006A                     l48:	
   409                           ;main.c: 55: }
   410                           
   411  006A  286A               	goto	l47
   412  006B  120A  118A  280C   	ljmp	start
   413  006E                     __end_of_main:
   414                           
   415                           	psect	text1
   416  0034                     __ptext1:	
   417 ;; *************** function _conf_but *****************
   418 ;; Defined at:
   419 ;;		line 75 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0
   436 ;;      Totals:         0       0       0       0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels used:    1
   439 ;; Hardware stack levels required when called:    1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           
   448                           ;psect for function _conf_but
   449  0034                     _conf_but:
   450  0034                     l668:	
   451                           ;incstack = 0
   452                           ; Regs used in _conf_but: [wreg+status,2]
   453                           
   454                           
   455                           ;main.c: 77:     INTCONbits.GIE = 1;
   456  0034  178B               	bsf	11,7	;volatile
   457                           
   458                           ;main.c: 78:     INTCONbits.PEIE = 1;
   459  0035  170B               	bsf	11,6	;volatile
   460                           
   461                           ;main.c: 79:     INTCONbits.RBIE = 1;
   462  0036  158B               	bsf	11,3	;volatile
   463  0037                     l670:
   464                           
   465                           ;main.c: 80:     ANSEL = 0;
   466  0037  1683               	bsf	3,5	;RP0=1, select bank3
   467  0038  1703               	bsf	3,6	;RP1=1, select bank3
   468  0039  0188               	clrf	8	;volatile
   469                           
   470                           ;main.c: 81:     ANSELH = 0;
   471  003A  0189               	clrf	9	;volatile
   472                           
   473                           ;main.c: 82:     TRISC=0x00;
   474  003B  1683               	bsf	3,5	;RP0=1, select bank1
   475  003C  1303               	bcf	3,6	;RP1=0, select bank1
   476  003D  0187               	clrf	7	;volatile
   477                           
   478                           ;main.c: 83:     TRISB=0x00;
   479  003E  0186               	clrf	6	;volatile
   480  003F                     l672:
   481                           
   482                           ;main.c: 84:     TRISBbits.TRISB0 = 1;
   483  003F  1406               	bsf	6,0	;volatile
   484  0040                     l674:
   485                           
   486                           ;main.c: 85:     TRISBbits.TRISB1 = 1;
   487  0040  1486               	bsf	6,1	;volatile
   488  0041                     l676:
   489                           
   490                           ;main.c: 86:     IOCB = 0b00000011;
   491  0041  3003               	movlw	3
   492  0042  0096               	movwf	22	;volatile
   493  0043                     l678:
   494                           
   495                           ;main.c: 87:     TRISD=0x00;
   496  0043  0188               	clrf	8	;volatile
   497  0044                     l680:
   498                           
   499                           ;main.c: 88:     TRISE=0x00;
   500  0044  0189               	clrf	9	;volatile
   501  0045                     l682:
   502                           
   503                           ;main.c: 89:     TRISA=0;
   504  0045  0185               	clrf	5	;volatile
   505  0046                     l684:
   506                           
   507                           ;main.c: 90:     TRISAbits.TRISA0 = 1;
   508  0046  1405               	bsf	5,0	;volatile
   509  0047                     l686:
   510                           
   511                           ;main.c: 91:     PORTD = 0;
   512  0047  1283               	bcf	3,5	;RP0=0, select bank0
   513  0048  1303               	bcf	3,6	;RP1=0, select bank0
   514  0049  0188               	clrf	8	;volatile
   515  004A                     l688:
   516                           
   517                           ;main.c: 92:     PORTB = 0;
   518  004A  0186               	clrf	6	;volatile
   519  004B                     l690:
   520                           
   521                           ;main.c: 93:     PORTC = 0;
   522  004B  0187               	clrf	7	;volatile
   523  004C                     l56:
   524  004C  0008               	return
   525  004D                     __end_of_conf_but:
   526                           
   527                           	psect	text2
   528  004D                     __ptext2:	
   529 ;; *************** function _confADC *****************
   530 ;; Defined at:
   531 ;;		line 3 in file "Adc_int_.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0
   548 ;;      Totals:         0       0       0       0       0
   549 ;;Total ram usage:        0 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           
   560                           ;psect for function _confADC
   561  004D                     _confADC:
   562  004D                     l692:	
   563                           ;incstack = 0
   564                           ; Regs used in _confADC: [wreg+status,2+status,0]
   565                           
   566                           
   567                           ;Adc_int_.c: 6:     ADCON0bits.ADCS0 = 1;
   568  004D  1283               	bcf	3,5	;RP0=0, select bank0
   569  004E  1303               	bcf	3,6	;RP1=0, select bank0
   570  004F  171F               	bsf	31,6	;volatile
   571                           
   572                           ;Adc_int_.c: 7:     ADCON0bits.ADCS1 = 0;
   573  0050  139F               	bcf	31,7	;volatile
   574  0051                     l694:
   575                           
   576                           ;Adc_int_.c: 8:     ADCON1 = 0;
   577  0051  1683               	bsf	3,5	;RP0=1, select bank1
   578  0052  1303               	bcf	3,6	;RP1=0, select bank1
   579  0053  019F               	clrf	31	;volatile
   580  0054                     l696:
   581                           
   582                           ;Adc_int_.c: 10:     ADCON0bits.CHS = 0b0000;
   583  0054  30C3               	movlw	-61
   584  0055  1283               	bcf	3,5	;RP0=0, select bank0
   585  0056  1303               	bcf	3,6	;RP1=0, select bank0
   586  0057  059F               	andwf	31,f	;volatile
   587  0058                     l698:
   588                           
   589                           ;Adc_int_.c: 12:     ADCON0bits.ADON = 1;
   590  0058  141F               	bsf	31,0	;volatile
   591  0059                     l700:
   592                           
   593                           ;Adc_int_.c: 13:     PIE1bits.ADIE = 1;
   594  0059  1683               	bsf	3,5	;RP0=1, select bank1
   595  005A  1303               	bcf	3,6	;RP1=0, select bank1
   596  005B  170C               	bsf	12,6	;volatile
   597  005C                     l702:
   598                           
   599                           ;Adc_int_.c: 14:     PIR1bits.ADIF = 0;
   600  005C  1283               	bcf	3,5	;RP0=0, select bank0
   601  005D  1303               	bcf	3,6	;RP1=0, select bank0
   602  005E  130C               	bcf	12,6	;volatile
   603  005F                     l76:
   604  005F  0008               	return
   605  0060                     __end_of_confADC:
   606                           
   607                           	psect	text3
   608  0017                     __ptext3:	
   609 ;; *************** function _ISR *****************
   610 ;; Defined at:
   611 ;;		line 101 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0
   627 ;;      Temps:          3       0       0       0       0
   628 ;;      Totals:         3       0       0       0       0
   629 ;;Total ram usage:        3 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		Interrupt level 1
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _ISR
   640  0017                     _ISR:
   641  0017                     i1l710:
   642                           
   643                           ;main.c: 102:     if(INTCONbits.RBIF == 1){
   644  0017  1C0B               	btfss	11,0	;volatile
   645  0018  281A               	goto	u1_21
   646  0019  281B               	goto	u1_20
   647  001A                     u1_21:
   648  001A  282D               	goto	i1l65
   649  001B                     u1_20:
   650  001B                     i1l712:
   651                           
   652                           ;main.c: 103:         if(PORTBbits.RB1 == 1){
   653  001B  1283               	bcf	3,5	;RP0=0, select bank0
   654  001C  1303               	bcf	3,6	;RP1=0, select bank0
   655  001D  1C86               	btfss	6,1	;volatile
   656  001E  2820               	goto	u2_21
   657  001F  2821               	goto	u2_20
   658  0020                     u2_21:
   659  0020  2826               	goto	i1l62
   660  0021                     u2_20:
   661  0021                     i1l714:
   662                           
   663                           ;main.c: 104:             PORTD++;
   664  0021  3001               	movlw	1
   665  0022  00F4               	movwf	??_ISR
   666  0023  0874               	movf	??_ISR,w
   667  0024  0788               	addwf	8,f	;volatile
   668                           
   669                           ;main.c: 105:         }
   670  0025  282C               	goto	i1l718
   671  0026                     i1l62:	
   672                           ;main.c: 106:         else if (PORTBbits.RB0 == 1){
   673                           
   674  0026  1C06               	btfss	6,0	;volatile
   675  0027  2829               	goto	u3_21
   676  0028  282A               	goto	u3_20
   677  0029                     u3_21:
   678  0029  282C               	goto	i1l718
   679  002A                     u3_20:
   680  002A                     i1l716:
   681                           
   682                           ;main.c: 107:             PORTD--;
   683  002A  3001               	movlw	1
   684  002B  0288               	subwf	8,f	;volatile
   685  002C                     i1l718:
   686                           
   687                           ;main.c: 109:         INTCONbits.RBIF = 0;
   688  002C  100B               	bcf	11,0	;volatile
   689  002D                     i1l65:
   690  002D  0876               	movf	??_ISR+2,w
   691  002E  008A               	movwf	10
   692  002F  0E75               	swapf	??_ISR+1,w
   693  0030  0083               	movwf	3
   694  0031  0EFE               	swapf	btemp,f
   695  0032  0E7E               	swapf	btemp,w
   696  0033  0009               	retfie
   697  0034                     __end_of_ISR:
   698  007E                     btemp	set	126	;btemp
   699  007E                     wtemp0	set	126
   700                           
   701                           	psect	intentry
   702  0004                     __pintentry:	
   703                           ;incstack = 0
   704                           ; Regs used in _ISR: [wreg+status,2+status,0]
   705                           
   706  0004                     interrupt_function:
   707  007E                     saved_w	set	btemp
   708  0004  00FE               	movwf	btemp
   709  0005  0E03               	swapf	3,w
   710  0006  00F5               	movwf	??_ISR+1
   711  0007  080A               	movf	10,w
   712  0008  00F6               	movwf	??_ISR+2
   713  0009  120A  118A  2817   	ljmp	_ISR
   714                           
   715                           	psect	config
   716                           
   717                           ;Config register CONFIG1 @ 0x2007
   718                           ;	Oscillator Selection bits
   719                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   720                           ;	Watchdog Timer Enable bit
   721                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   722                           ;	Power-up Timer Enable bit
   723                           ;	PWRTE = OFF, PWRT disabled
   724                           ;	RE3/MCLR pin function select bit
   725                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   726                           ;	Code Protection bit
   727                           ;	CP = OFF, Program memory code protection is disabled
   728                           ;	Data Code Protection bit
   729                           ;	CPD = OFF, Data memory code protection is disabled
   730                           ;	Brown Out Reset Selection bits
   731                           ;	BOREN = ON, BOR enabled
   732                           ;	Internal External Switchover bit
   733                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   734                           ;	Fail-Safe Clock Monitor Enabled bit
   735                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   736                           ;	Low Voltage Programming Enable bit
   737                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   738                           ;	In-Circuit Debugger Mode bit
   739                           ;	DEBUG = 0x1, unprogrammed default
   740  2007                     	org	8199
   741  2007  23D2               	dw	9170
   742                           
   743                           ;Config register CONFIG2 @ 0x2008
   744                           ;	Brown-out Reset Selection bit
   745                           ;	BOR4V = 0x1, unprogrammed default
   746                           ;	Flash Program Memory Self Write Enable bits
   747                           ;	WRT = OFF, Write protection off
   748  2008                     	org	8200
   749  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _confADC
                           _conf_but
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _confADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _confADC
   _conf_but

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 14:35:25 2021

                     l47 006A                       l56 004C                       l48 006A  
                     l76 005F                      l700 0059                      l702 005C  
                    l704 0060                      l670 0037                      l680 0044  
                    l672 003F                      l690 004B                      l682 0045  
                    l674 0040                      l692 004D                      l684 0046  
                    l676 0041                      l668 0034                      l694 0051  
                    l686 0047                      l678 0043                      l696 0054  
                    l688 004A                      l698 0058                      _ISR 0017  
                   ?_ISR 0074                     _IOCB 0096                     i1l62 0026  
                   i1l65 002D                     _TMR0 0001                     u1_20 001B  
                   u1_21 001A                     u2_20 0021                     u2_21 0020  
                   u3_20 002A                     u3_21 0029                     _main 0060  
                   btemp 007E                     start 000C                    ??_ISR 0074  
                  ?_main 0074                    _ANSEL 0188                    i1l710 0017  
                  i1l712 001B                    i1l714 0021                    i1l716 002A  
                  i1l718 002C                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
        __end_of_confADC 0060                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 006E  
                 ??_main 0077                   _ADCON1 009F                   _ANSELH 0189  
       __end_of_conf_but 004D                ??_confADC 0077                   saved_w 007E  
__end_of__initialization 0013           __pcstackCOMMON 0074      _Debounce_counter_b0 0072  
    _Debounce_counter_b1 0070           _OPTION_REGbits 0081               __pmaintext 0060  
             __pintentry 0004                ?_conf_but 0074                  _confADC 004D  
                __ptext1 0034                  __ptext2 004D                  __ptext3 0017  
           __size_of_ISR 001D               ??_conf_but 0077     end_of_initialization 0013  
              _PORTBbits 0006                _TRISAbits 0085                _TRISBbits 0086  
    start_initialization 000F              __end_of_ISR 0034              __pbssCOMMON 0070  
              ___latbits 0002        __size_of_conf_but 0019                 ?_confADC 0074  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_confADC 0013                 _conf_but 0034  
          __size_of_main 000E               _INTCONbits 000B                 intlevel1 0000  
