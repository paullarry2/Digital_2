

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 01 04:20:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0009                     _PORTE	set	9
   204  0006                     _PORTB	set	6
   205  0005                     _PORTA	set	5
   206  0008                     _PORTDbits	set	8
   207  0007                     _PORTCbits	set	7
   208  0008                     _PORTD	set	8
   209  0007                     _PORTC	set	7
   210  0009                     _PORTEbits	set	9
   211  0005                     _PORTAbits	set	5
   212  0006                     _PORTBbits	set	6
   213  0089                     _TRISE	set	137
   214  0088                     _TRISD	set	136
   215  0087                     _TRISC	set	135
   216  0086                     _TRISB	set	134
   217  0085                     _TRISA	set	133
   218  0189                     _ANSELH	set	393
   219  0188                     _ANSEL	set	392
   220                           
   221                           	psect	cinit
   222  07FA                     start_initialization:	
   223                           ; #config settings
   224                           
   225  07FA                     __initialization:
   226                           
   227                           ; Clear objects allocated to COMMON
   228  07FA  01F6               	clrf	__pbssCOMMON& (0+127)
   229  07FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   230  07FC                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233  07FC                     __end_of__initialization:
   234  07FC  0183               	clrf	3
   235  07FD  120A  118A  2F29   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMMON
   238  0076                     __pbssCOMMON:
   239  0076                     _z:
   240  0076                     	ds	2
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:
   244  0070                     ?_setup:
   245  0070                     ??_setup:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_semaforo:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ??_semaforo:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259  0070                     	ds	3
   260  0073                     ??_main:
   261                           
   262                           ; 1 bytes @ 0x3
   263  0073                     	ds	3
   264                           
   265                           	psect	maintext
   266  0729                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 57 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, pclath, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   286 ;;      Params:         0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0
   288 ;;      Temps:          3       0       0       0       0
   289 ;;      Totals:         3       0       0       0       0
   290 ;;Total ram usage:        3 bytes
   291 ;; Hardware stack levels required when called:    1
   292 ;; This function calls:
   293 ;;		_semaforo
   294 ;;		_setup
   295 ;; This function is called by:
   296 ;;		Startup code after reset
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           
   301                           ;psect for function _main
   302  0729                     _main:
   303  0729                     l689:	
   304                           ;incstack = 0
   305                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   306                           
   307                           
   308                           ;main.c: 58:     setup();
   309  0729  120A  118A  26DF  120A  118A  	fcall	_setup
   310  072E                     l691:
   311                           
   312                           ;main.c: 61:         if (PORTBbits.RB0 == 1)
   313  072E  1283               	bcf	3,5	;RP0=0, select bank0
   314  072F  1303               	bcf	3,6	;RP1=0, select bank0
   315  0730  1C06               	btfss	6,0	;volatile
   316  0731  2F33               	goto	u11
   317  0732  2F34               	goto	u10
   318  0733                     u11:
   319  0733  2F39               	goto	l695
   320  0734                     u10:
   321  0734                     l693:
   322                           
   323                           ;main.c: 62:             semaforo();
   324  0734  120A  118A  2703  120A  118A  	fcall	_semaforo
   325  0739                     l695:
   326                           
   327                           ;main.c: 63:         if ((PORTAbits.RA1 | PORTAbits.RA0) == 0 & PORTEbits.RE2 == 1) {
   328  0739  1283               	bcf	3,5	;RP0=0, select bank0
   329  073A  1303               	bcf	3,6	;RP1=0, select bank0
   330  073B  1909               	btfsc	9,2	;volatile
   331  073C  2F3E               	goto	u21
   332  073D  2F40               	goto	u20
   333  073E                     u21:
   334  073E  3001               	movlw	1
   335  073F  2F41               	goto	u22
   336  0740                     u20:
   337  0740  3000               	movlw	0
   338  0741                     u22:
   339  0741  00F3               	movwf	??_main
   340  0742  0805               	movf	5,w	;volatile
   341  0743  3901               	andlw	1
   342  0744  00F4               	movwf	??_main+1
   343  0745  0C05               	rrf	5,w	;volatile
   344  0746  3901               	andlw	1
   345  0747  0474               	iorwf	??_main+1,w
   346  0748  1903               	btfsc	3,2
   347  0749  2F4B               	goto	u31
   348  074A  2F4D               	goto	u30
   349  074B                     u31:
   350  074B  3001               	movlw	1
   351  074C  2F4E               	goto	u32
   352  074D                     u30:
   353  074D  3000               	movlw	0
   354  074E                     u32:
   355  074E  0573               	andwf	??_main,w
   356  074F  3800               	iorlw	0
   357  0750  1903               	skipnz
   358  0751  2F53               	goto	u41
   359  0752  2F54               	goto	u40
   360  0753                     u41:
   361  0753  2F2E               	goto	l691
   362  0754                     u40:
   363  0754                     l697:
   364                           
   365                           ;main.c: 64:             if (PORTC == 0 & PORTBbits.RB1 == 1) {
   366  0754  1886               	btfsc	6,1	;volatile
   367  0755  2F57               	goto	u51
   368  0756  2F59               	goto	u50
   369  0757                     u51:
   370  0757  3001               	movlw	1
   371  0758  2F5A               	goto	u52
   372  0759                     u50:
   373  0759  3000               	movlw	0
   374  075A                     u52:
   375  075A  00F3               	movwf	??_main
   376  075B  0807               	movf	7,w	;volatile
   377  075C  1903               	btfsc	3,2
   378  075D  2F5F               	goto	u61
   379  075E  2F61               	goto	u60
   380  075F                     u61:
   381  075F  3001               	movlw	1
   382  0760  2F62               	goto	u62
   383  0761                     u60:
   384  0761  3000               	movlw	0
   385  0762                     u62:
   386  0762  0573               	andwf	??_main,w
   387  0763  3800               	iorlw	0
   388  0764  1903               	skipnz
   389  0765  2F67               	goto	u71
   390  0766  2F68               	goto	u70
   391  0767                     u71:
   392  0767  2F79               	goto	l701
   393  0768                     u70:
   394  0768                     l699:
   395                           
   396                           ;main.c: 65:                 _delay((unsigned long)((400)*(8000000/4000.0)));
   397  0768  3005               	movlw	5
   398  0769  00F5               	movwf	??_main+2
   399  076A  300F               	movlw	15
   400  076B  00F4               	movwf	??_main+1
   401  076C  30F1               	movlw	241
   402  076D  00F3               	movwf	??_main
   403  076E                     u197:
   404  076E  0BF3               	decfsz	??_main,f
   405  076F  2F6E               	goto	u197
   406  0770  0BF4               	decfsz	??_main+1,f
   407  0771  2F6E               	goto	u197
   408  0772  0BF5               	decfsz	??_main+2,f
   409  0773  2F6E               	goto	u197
   410                           
   411                           ;main.c: 66:                 PORTC = 0b0000001;
   412  0774  3001               	movlw	1
   413  0775  1283               	bcf	3,5	;RP0=0, select bank0
   414  0776  1303               	bcf	3,6	;RP1=0, select bank0
   415  0777  0087               	movwf	7	;volatile
   416                           
   417                           ;main.c: 67:             } else if (PORTBbits.RB1 == 1 & PORTC != 0) {
   418  0778  2F9F               	goto	l707
   419  0779                     l701:
   420  0779  0807               	movf	7,w	;volatile
   421  077A  1D03               	btfss	3,2
   422  077B  2F7D               	goto	u81
   423  077C  2F7F               	goto	u80
   424  077D                     u81:
   425  077D  3001               	movlw	1
   426  077E  2F80               	goto	u82
   427  077F                     u80:
   428  077F  3000               	movlw	0
   429  0780                     u82:
   430  0780  00F3               	movwf	??_main
   431  0781  1886               	btfsc	6,1	;volatile
   432  0782  2F84               	goto	u91
   433  0783  2F86               	goto	u90
   434  0784                     u91:
   435  0784  3001               	movlw	1
   436  0785  2F87               	goto	u92
   437  0786                     u90:
   438  0786  3000               	movlw	0
   439  0787                     u92:
   440  0787  0573               	andwf	??_main,w
   441  0788  3800               	iorlw	0
   442  0789  1903               	skipnz
   443  078A  2F8C               	goto	u101
   444  078B  2F8D               	goto	u100
   445  078C                     u101:
   446  078C  2F9F               	goto	l707
   447  078D                     u100:
   448  078D                     l703:
   449                           
   450                           ;main.c: 68:                 _delay((unsigned long)((400)*(8000000/4000.0)));
   451  078D  3005               	movlw	5
   452  078E  00F5               	movwf	??_main+2
   453  078F  300F               	movlw	15
   454  0790  00F4               	movwf	??_main+1
   455  0791  30F1               	movlw	241
   456  0792  00F3               	movwf	??_main
   457  0793                     u207:
   458  0793  0BF3               	decfsz	??_main,f
   459  0794  2F93               	goto	u207
   460  0795  0BF4               	decfsz	??_main+1,f
   461  0796  2F93               	goto	u207
   462  0797  0BF5               	decfsz	??_main+2,f
   463  0798  2F93               	goto	u207
   464  0799                     l705:
   465                           
   466                           ;main.c: 69:                 PORTC = PORTC << 1;
   467  0799  1283               	bcf	3,5	;RP0=0, select bank0
   468  079A  1303               	bcf	3,6	;RP1=0, select bank0
   469  079B  0807               	movf	7,w	;volatile
   470  079C  00F3               	movwf	??_main
   471  079D  0773               	addwf	??_main,w
   472  079E  0087               	movwf	7	;volatile
   473  079F                     l707:
   474                           
   475                           ;main.c: 71:             if (PORTD == 0 & PORTBbits.RB2 == 1) {
   476  079F  1906               	btfsc	6,2	;volatile
   477  07A0  2FA2               	goto	u111
   478  07A1  2FA4               	goto	u110
   479  07A2                     u111:
   480  07A2  3001               	movlw	1
   481  07A3  2FA5               	goto	u112
   482  07A4                     u110:
   483  07A4  3000               	movlw	0
   484  07A5                     u112:
   485  07A5  00F3               	movwf	??_main
   486  07A6  0808               	movf	8,w	;volatile
   487  07A7  1903               	btfsc	3,2
   488  07A8  2FAA               	goto	u121
   489  07A9  2FAC               	goto	u120
   490  07AA                     u121:
   491  07AA  3001               	movlw	1
   492  07AB  2FAD               	goto	u122
   493  07AC                     u120:
   494  07AC  3000               	movlw	0
   495  07AD                     u122:
   496  07AD  0573               	andwf	??_main,w
   497  07AE  3800               	iorlw	0
   498  07AF  1903               	skipnz
   499  07B0  2FB2               	goto	u131
   500  07B1  2FB3               	goto	u130
   501  07B2                     u131:
   502  07B2  2FC4               	goto	l711
   503  07B3                     u130:
   504  07B3                     l709:
   505                           
   506                           ;main.c: 72:                 _delay((unsigned long)((400)*(8000000/4000.0)));
   507  07B3  3005               	movlw	5
   508  07B4  00F5               	movwf	??_main+2
   509  07B5  300F               	movlw	15
   510  07B6  00F4               	movwf	??_main+1
   511  07B7  30F1               	movlw	241
   512  07B8  00F3               	movwf	??_main
   513  07B9                     u217:
   514  07B9  0BF3               	decfsz	??_main,f
   515  07BA  2FB9               	goto	u217
   516  07BB  0BF4               	decfsz	??_main+1,f
   517  07BC  2FB9               	goto	u217
   518  07BD  0BF5               	decfsz	??_main+2,f
   519  07BE  2FB9               	goto	u217
   520                           
   521                           ;main.c: 73:                 PORTD = 0b0000001;
   522  07BF  3001               	movlw	1
   523  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   524  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   525  07C2  0088               	movwf	8	;volatile
   526                           
   527                           ;main.c: 74:             } else if (PORTBbits.RB2 == 1 & PORTD != 0) {
   528  07C3  2FEA               	goto	l717
   529  07C4                     l711:
   530  07C4  0808               	movf	8,w	;volatile
   531  07C5  1D03               	btfss	3,2
   532  07C6  2FC8               	goto	u141
   533  07C7  2FCA               	goto	u140
   534  07C8                     u141:
   535  07C8  3001               	movlw	1
   536  07C9  2FCB               	goto	u142
   537  07CA                     u140:
   538  07CA  3000               	movlw	0
   539  07CB                     u142:
   540  07CB  00F3               	movwf	??_main
   541  07CC  1906               	btfsc	6,2	;volatile
   542  07CD  2FCF               	goto	u151
   543  07CE  2FD1               	goto	u150
   544  07CF                     u151:
   545  07CF  3001               	movlw	1
   546  07D0  2FD2               	goto	u152
   547  07D1                     u150:
   548  07D1  3000               	movlw	0
   549  07D2                     u152:
   550  07D2  0573               	andwf	??_main,w
   551  07D3  3800               	iorlw	0
   552  07D4  1903               	skipnz
   553  07D5  2FD7               	goto	u161
   554  07D6  2FD8               	goto	u160
   555  07D7                     u161:
   556  07D7  2FEA               	goto	l717
   557  07D8                     u160:
   558  07D8                     l713:
   559                           
   560                           ;main.c: 75:                 _delay((unsigned long)((400)*(8000000/4000.0)));
   561  07D8  3005               	movlw	5
   562  07D9  00F5               	movwf	??_main+2
   563  07DA  300F               	movlw	15
   564  07DB  00F4               	movwf	??_main+1
   565  07DC  30F1               	movlw	241
   566  07DD  00F3               	movwf	??_main
   567  07DE                     u227:
   568  07DE  0BF3               	decfsz	??_main,f
   569  07DF  2FDE               	goto	u227
   570  07E0  0BF4               	decfsz	??_main+1,f
   571  07E1  2FDE               	goto	u227
   572  07E2  0BF5               	decfsz	??_main+2,f
   573  07E3  2FDE               	goto	u227
   574  07E4                     l715:
   575                           
   576                           ;main.c: 76:                 PORTD = PORTD << 1;
   577  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   578  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   579  07E6  0808               	movf	8,w	;volatile
   580  07E7  00F3               	movwf	??_main
   581  07E8  0773               	addwf	??_main,w
   582  07E9  0088               	movwf	8	;volatile
   583  07EA                     l717:
   584                           
   585                           ;main.c: 78:             if (PORTCbits.RC7==1){
   586  07EA  1F87               	btfss	7,7	;volatile
   587  07EB  2FED               	goto	u171
   588  07EC  2FEE               	goto	u170
   589  07ED                     u171:
   590  07ED  2FF0               	goto	l56
   591  07EE                     u170:
   592  07EE                     l719:
   593                           
   594                           ;main.c: 79:                 PORTAbits.RA1=1;
   595  07EE  1485               	bsf	5,1	;volatile
   596                           
   597                           ;main.c: 80:             }
   598  07EF  2F2E               	goto	l691
   599  07F0                     l56:	
   600                           ;main.c: 81:             else if (PORTDbits.RD7==1){
   601                           
   602  07F0  1F88               	btfss	8,7	;volatile
   603  07F1  2FF3               	goto	u181
   604  07F2  2FF4               	goto	u180
   605  07F3                     u181:
   606  07F3  2FF6               	goto	l49
   607  07F4                     u180:
   608  07F4                     l721:
   609                           
   610                           ;main.c: 82:                 PORTAbits.RA0=1;
   611  07F4  1405               	bsf	5,0	;volatile
   612  07F5  2F2E               	goto	l691
   613  07F6                     l49:	
   614                           ;main.c: 84:         }
   615                           
   616  07F6  2F2E               	goto	l691
   617  07F7  120A  118A  2800   	ljmp	start
   618  07FA                     __end_of_main:
   619                           
   620                           	psect	text1
   621  06DF                     __ptext1:	
   622 ;; *************** function _setup *****************
   623 ;; Defined at:
   624 ;;		line 105 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, status,2
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0
   641 ;;      Totals:         0       0       0       0       0
   642 ;;Total ram usage:        0 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           
   652                           ;psect for function _setup
   653  06DF                     _setup:
   654  06DF                     l659:	
   655                           ;incstack = 0
   656                           ; Regs used in _setup: [wreg+status,2]
   657                           
   658                           
   659                           ;main.c: 106:     ANSEL = 0;
   660  06DF  1683               	bsf	3,5	;RP0=1, select bank3
   661  06E0  1703               	bsf	3,6	;RP1=1, select bank3
   662  06E1  0188               	clrf	8	;volatile
   663                           
   664                           ;main.c: 107:     ANSELH = 0;
   665  06E2  0189               	clrf	9	;volatile
   666                           
   667                           ;main.c: 108:     TRISA = 0;
   668  06E3  1683               	bsf	3,5	;RP0=1, select bank1
   669  06E4  1303               	bcf	3,6	;RP1=0, select bank1
   670  06E5  0185               	clrf	5	;volatile
   671                           
   672                           ;main.c: 109:     PORTA = 0;
   673  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   674  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   675  06E8  0185               	clrf	5	;volatile
   676  06E9                     l661:
   677                           
   678                           ;main.c: 110:     TRISB = 0b00000111;
   679  06E9  3007               	movlw	7
   680  06EA  1683               	bsf	3,5	;RP0=1, select bank1
   681  06EB  1303               	bcf	3,6	;RP1=0, select bank1
   682  06EC  0086               	movwf	6	;volatile
   683  06ED                     l663:
   684                           
   685                           ;main.c: 111:     PORTB = 0;
   686  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   687  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   688  06EF  0186               	clrf	6	;volatile
   689  06F0                     l665:
   690                           
   691                           ;main.c: 112:     TRISC = 0;
   692  06F0  1683               	bsf	3,5	;RP0=1, select bank1
   693  06F1  1303               	bcf	3,6	;RP1=0, select bank1
   694  06F2  0187               	clrf	7	;volatile
   695  06F3                     l667:
   696                           
   697                           ;main.c: 113:     PORTC = 0;
   698  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   699  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   700  06F5  0187               	clrf	7	;volatile
   701  06F6                     l669:
   702                           
   703                           ;main.c: 114:     TRISD = 0;
   704  06F6  1683               	bsf	3,5	;RP0=1, select bank1
   705  06F7  1303               	bcf	3,6	;RP1=0, select bank1
   706  06F8  0188               	clrf	8	;volatile
   707  06F9                     l671:
   708                           
   709                           ;main.c: 115:     PORTD = 0;
   710  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   711  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   712  06FB  0188               	clrf	8	;volatile
   713  06FC                     l673:
   714                           
   715                           ;main.c: 116:     TRISE = 0;
   716  06FC  1683               	bsf	3,5	;RP0=1, select bank1
   717  06FD  1303               	bcf	3,6	;RP1=0, select bank1
   718  06FE  0189               	clrf	9	;volatile
   719  06FF                     l675:
   720                           
   721                           ;main.c: 117:     PORTE = 0;
   722  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   723  0700  1303               	bcf	3,6	;RP1=0, select bank0
   724  0701  0189               	clrf	9	;volatile
   725  0702                     l67:
   726  0702  0008               	return
   727  0703                     __end_of_setup:
   728                           
   729                           	psect	text2
   730  0703                     __ptext2:	
   731 ;; *************** function _semaforo *****************
   732 ;; Defined at:
   733 ;;		line 95 in file "main.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          3       0       0       0       0
   750 ;;      Totals:         3       0       0       0       0
   751 ;;Total ram usage:        3 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _semaforo
   762  0703                     _semaforo:
   763  0703                     l677:	
   764                           ;incstack = 0
   765                           ; Regs used in _semaforo: [wreg]
   766                           
   767                           
   768                           ;main.c: 96:     PORTEbits.RE0 = 1;
   769  0703  1283               	bcf	3,5	;RP0=0, select bank0
   770  0704  1303               	bcf	3,6	;RP1=0, select bank0
   771  0705  1409               	bsf	9,0	;volatile
   772  0706                     l679:
   773                           
   774                           ;main.c: 97:     _delay((unsigned long)((500)*(8000000/4000.0)));
   775  0706  3006               	movlw	6
   776  0707  00F2               	movwf	??_semaforo+2
   777  0708  3013               	movlw	19
   778  0709  00F1               	movwf	??_semaforo+1
   779  070A  30AD               	movlw	173
   780  070B  00F0               	movwf	??_semaforo
   781  070C                     u237:
   782  070C  0BF0               	decfsz	??_semaforo,f
   783  070D  2F0C               	goto	u237
   784  070E  0BF1               	decfsz	??_semaforo+1,f
   785  070F  2F0C               	goto	u237
   786  0710  0BF2               	decfsz	??_semaforo+2,f
   787  0711  2F0C               	goto	u237
   788  0712  2F13               	nop2
   789  0713                     l681:
   790                           
   791                           ;main.c: 98:     PORTEbits.RE0 = 0;
   792  0713  1283               	bcf	3,5	;RP0=0, select bank0
   793  0714  1303               	bcf	3,6	;RP1=0, select bank0
   794  0715  1009               	bcf	9,0	;volatile
   795  0716                     l683:
   796                           
   797                           ;main.c: 99:     PORTEbits.RE1 = 1;
   798  0716  1489               	bsf	9,1	;volatile
   799                           
   800                           ;main.c: 100:     _delay((unsigned long)((500)*(8000000/4000.0)));
   801  0717  3006               	movlw	6
   802  0718  00F2               	movwf	??_semaforo+2
   803  0719  3013               	movlw	19
   804  071A  00F1               	movwf	??_semaforo+1
   805  071B  30AD               	movlw	173
   806  071C  00F0               	movwf	??_semaforo
   807  071D                     u247:
   808  071D  0BF0               	decfsz	??_semaforo,f
   809  071E  2F1D               	goto	u247
   810  071F  0BF1               	decfsz	??_semaforo+1,f
   811  0720  2F1D               	goto	u247
   812  0721  0BF2               	decfsz	??_semaforo+2,f
   813  0722  2F1D               	goto	u247
   814  0723  2F24               	nop2
   815  0724                     l685:
   816                           
   817                           ;main.c: 101:     PORTEbits.RE1 = 0;
   818  0724  1283               	bcf	3,5	;RP0=0, select bank0
   819  0725  1303               	bcf	3,6	;RP1=0, select bank0
   820  0726  1089               	bcf	9,1	;volatile
   821  0727                     l687:
   822                           
   823                           ;main.c: 102:     PORTEbits.RE2 = 1;
   824  0727  1509               	bsf	9,2	;volatile
   825  0728                     l64:
   826  0728  0008               	return
   827  0729                     __end_of_semaforo:
   828  007E                     btemp	set	126	;btemp
   829  007E                     wtemp0	set	126
   830                           
   831                           	psect	config
   832                           
   833                           ;Config register CONFIG1 @ 0x2007
   834                           ;	Oscillator Selection bits
   835                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   836                           ;	Watchdog Timer Enable bit
   837                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   838                           ;	Power-up Timer Enable bit
   839                           ;	PWRTE = OFF, PWRT disabled
   840                           ;	RE3/MCLR pin function select bit
   841                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   842                           ;	Code Protection bit
   843                           ;	CP = OFF, Program memory code protection is disabled
   844                           ;	Data Code Protection bit
   845                           ;	CPD = OFF, Data memory code protection is disabled
   846                           ;	Brown Out Reset Selection bits
   847                           ;	BOREN = OFF, BOR disabled
   848                           ;	Internal External Switchover bit
   849                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   850                           ;	Fail-Safe Clock Monitor Enabled bit
   851                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   852                           ;	Low Voltage Programming Enable bit
   853                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   854                           ;	In-Circuit Debugger Mode bit
   855                           ;	DEBUG = 0x1, unprogrammed default
   856  2007                     	org	8199
   857  2007  20F1               	dw	8433
   858                           
   859                           ;Config register CONFIG2 @ 0x2008
   860                           ;	Brown-out Reset Selection bit
   861                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   862                           ;	Flash Program Memory Self Write Enable bits
   863                           ;	WRT = OFF, Write protection off
   864  2008                     	org	8200
   865  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                           _semaforo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _semaforo
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 01 04:20:41 2021

                      _z 0076                       l64 0728                       l56 07F0  
                     l49 07F6                       l67 0702                       u10 0734  
                     u11 0733                       u20 0740                       u21 073E  
                     u30 074D                       u22 0741                       u31 074B  
                     u40 0754                       u32 074E                       u41 0753  
                     u50 0759                       u51 0757                       u60 0761  
                     u52 075A                       u61 075F                       u70 0768  
                     u62 0762                       u71 0767                       u80 077F  
                     u81 077D                       u90 0786                       u82 0780  
                     u91 0784                       u92 0787                      l701 0779  
                    l711 07C4                      l703 078D                      l721 07F4  
                    l713 07D8                      l705 0799                      l715 07E4  
                    l707 079F                      l661 06E9                      l717 07EA  
                    l709 07B3                      l671 06F9                      l663 06ED  
                    l719 07EE                      l681 0713                      l673 06FC  
                    l665 06F0                      l683 0716                      l675 06FF  
                    l667 06F3                      l659 06DF                      l691 072E  
                    l685 0724                      l677 0703                      l669 06F6  
                    l693 0734                      l687 0727                      l679 0706  
                    l695 0739                      l697 0754                      l689 0729  
                    l699 0768                      u100 078D                      u101 078C  
                    u110 07A4                      u111 07A2                      u120 07AC  
                    u112 07A5                      u121 07AA                      u130 07B3  
                    u122 07AD                      u131 07B2                      u140 07CA  
                    u141 07C8                      u150 07D1                      u142 07CB  
                    u151 07CF                      u207 0793                      u160 07D8  
                    u152 07D2                      u161 07D7                      u217 07B9  
                    u170 07EE                      u171 07ED                      u227 07DE  
                    u180 07F4                      u237 070C                      u181 07F3  
                    u247 071D                      u197 076E                     _main 0729  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 06DF  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 07FA                   ??_main 0073                   ?_setup 0070  
                 _ANSELH 0189         __end_of_semaforo 0729  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 0703                  ??_setup 0070  
             __pmaintext 0729                ?_semaforo 0070                  __ptext1 06DF  
                __ptext2 0703     end_of_initialization 07FC               ??_semaforo 0070  
              _PORTAbits 0005                _PORTBbits 0006                _PORTCbits 0007  
              _PORTDbits 0008                _PORTEbits 0009      start_initialization 07FA  
            __pbssCOMMON 0076                ___latbits 0002        __size_of_semaforo 0026  
         __size_of_setup 0024            __size_of_main 00D1                 _semaforo 0703  
