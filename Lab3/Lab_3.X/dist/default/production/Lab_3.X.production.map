Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Lab_3.X.production.sym \
  --cmf=dist/default/production\Lab_3.X.production.cmf -z -Q16F887 \
  -oC:\Users\Universidad\AppData\Local\Temp\s1hhs.2 \
  --defsym=__MPLAB_BUILD=1 -Mdist/default/production/Lab_3.X.production.map \
  -E1 -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\Universidad\AppData\Local\Temp\s1hhs.o \
  dist/default/production\Lab_3.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Universidad\AppData\Local\Temp\s1hhs.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\Lab_3.X.production.o
                cinit                                 F        F        C        8       0
                intentry                              4        4        8        8       0
                config                             2007     2007        2        0       4
                text11                              118      118       2D        8       0
                text10                              227      227        6      434       0
                text9                               1AE      1AE       1A        8       0
                text8                               21A      21A        D      434       0
                text7                                AE       AE       6A        8       0
                text6                               16E      16E       26        8       0
                text5                               1DF      1DF       16        8       0
                text4                               145      145       29        8       0
                text3                               1F5      1F5       13        8       0
                text2                               1C8      1C8       17        8       0
                text1                               194      194       1A        8       0
                maintext                             1B       1B       93        8       0
                cstackBANK0                          20       20        5       20       1
                cstackCOMMON                         70       70        8       70       1
                bssBANK0                             25       25        3       20       1
                bssCOMMON                            78       78        3       70       1
                strings                             208      208       12      410       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F        C         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text11                              118      118       2D         0
                text10                              227      227        6         0
                text9                               1AE      1AE       1A         0
                text8                               21A      21A        D         0
                text7                                AE       AE       6A         0
                text6                               16E      16E       26         0
                text5                               1DF      1DF       16         0
                text4                               145      145       29         0
                text3                               1F5      1F5       13         0
                text2                               1C8      1C8       17         0
                text1                               194      194       1A         0
                maintext                             1B       1B       93         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             208      208       12         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        3         1

        CLASS   BANK0          
                cstackBANK0                          20       20        5         1
                bssBANK0                             25       25        3         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000204  000208         8       0  CODE        2
                cstackBANK0                    000020  000008  000028        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                strings                        000208  000012  00021A       410       0  STRING      2
                text8                          00021A  000013  00022D       434       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0028-006F             48           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         022D-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         022D-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         022D-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0028-006F             48           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         022D-1FFF           1DD3
        STRING           0003-0003              1           2
                         022D-1FFF            100

                                  Symbol Table

Lcd_Cmd@a                  cstackCOMMON 0076
Lcd_Port@a                 cstackCOMMON 0073
Lcd_Set_Cursor@a           cstackBANK0  0021
Lcd_Set_Cursor@b           cstackCOMMON 0077
Lcd_Set_Cursor@temp        cstackBANK0  0022
Lcd_Write_Char@a           cstackCOMMON 0075
Lcd_Write_String@a         cstackBANK0  0022
Lcd_Write_String@i         cstackBANK0  0020
_ADCON0bits                (abs)        001F
_ADCON1                    (abs)        009F
_ADRESH                    (abs)        001E
_ANSEL                     (abs)        0188
_ANSELH                    (abs)        0189
_ANSELbits                 (abs)        0188
_INTCONbits                (abs)        000B
_ISR                       text11       0118
_Lcd_Clear                 text8        021A
_Lcd_Cmd                   text9        01AE
_Lcd_Init                  text7        00AE
_Lcd_Port                  text10       0227
_Lcd_Set_Cursor            text6        016E
_Lcd_Write_Char            text5        01DF
_Lcd_Write_String          text4        0145
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_PORTB                     (abs)        0006
_PORTC                     (abs)        0007
_PORTD                     (abs)        0008
_PORTE                     (abs)        0009
_RE0                       (abs)        0048
_RE1                       (abs)        0049
_TRISA                     (abs)        0085
_TRISAbits                 (abs)        0085
_TRISB                     (abs)        0086
_TRISC                     (abs)        0087
_TRISD                     (abs)        0088
_TRISE                     (abs)        0089
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        001B
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     000F
__Hfunctab                 functab      0000
__Hinit                    init         000C
__Hintentry                intentry     000C
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        022D
__Hspace_1                 (abs)        007B
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hspace_4                 (abs)        4010
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        000F
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       0000
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     000C
__Lfunctab                 functab      0000
__Linit                    init         000C
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lspace_4                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        022D
__S1                       (abs)        007B
__S2                       (abs)        0000
__S3                       (abs)        0000
___int_sp                  stack        0000
___latbits                 (abs)        0002
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
__end_of_ISR               text11       0145
__end_of_Lcd_Clear         text8        0227
__end_of_Lcd_Cmd           text9        01C8
__end_of_Lcd_Init          text7        0118
__end_of_Lcd_Port          text10       022D
__end_of_Lcd_Set_Cursor    text6        0194
__end_of_Lcd_Write_Char    text5        01F5
__end_of_Lcd_Write_String  text4        016E
__end_of__initialization   cinit        0017
__end_of__stringtab        strings      020E
__end_of_confADC           text3        0208
__end_of_conf_ch           text2        01DF
__end_of_config            text1        01AE
__end_of_main              maintext     00AE
__initialization           cinit        000F
__pbssBANK0                bssBANK0     0025
__pbssCOMMON               bssCOMMON    0078
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pintentry                intentry     0004
__pmaintext                maintext     001B
__pstrings                 strings      0208
__ptext1                   text1        0194
__ptext10                  text10       0227
__ptext11                  text11       0118
__ptext2                   text2        01C8
__ptext3                   text3        01F5
__ptext4                   text4        0145
__ptext5                   text5        01DF
__ptext6                   text6        016E
__ptext7                   text7        00AE
__ptext8                   text8        021A
__ptext9                   text9        01AE
__size_of_ISR              (abs)        0000
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of_confADC          (abs)        0000
__size_of_conf_ch          (abs)        0000
__size_of_config           (abs)        0000
__size_of_main             (abs)        0000
__stringbase               strings      020D
__stringtab                strings      0208
_adc_fin                   bssBANK0     0025
_confADC                   text3        01F5
_conf_ch                   text2        01C8
_config                    text1        0194
_main                      maintext     001B
_pot                       bssCOMMON    0078
_val_pot1                  bssCOMMON    007A
_val_pot2                  bssBANK0     0027
btemp                      (abs)        007E
conf_ch@sel                cstackCOMMON 0073
end_of_initialization      cinit        0017
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
start                      init         000C
start_initialization       cinit        000F
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 51 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Clear
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_String
		_confADC
		_conf_ch
		_config
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _config *****************
 Defined at:
		line 86 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _conf_ch *****************
 Defined at:
		line 18 in file "Adc_int_.c"
 Parameters:    Size  Location     Type
  sel             2    3[COMMON] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _confADC *****************
 Defined at:
		line 3 in file "Adc_int_.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 62 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_3(4), STR_2(4), STR_1(4), 
 Auto vars:     Size  Location     Type
  a               1    2[BANK0 ] PTR unsigned char 
		 -> STR_3(4), STR_2(4), STR_1(4), 
  i               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 54 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 25 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    7[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    1[BANK0 ] unsigned char 
  temp            1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         1       3       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 36 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 20 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 12 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 8 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 113 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
Adc_int_.c
		_confADC       		CODE           	01F5	0000	19
		_conf_ch       		CODE           	01C8	0000	23

Adc_int_.c estimated size: 42

shared
		__stringtab    		STRING         	0208	0000	6
		__initialization		CODE           	000F	0000	8

shared estimated size: 14

lcd.c
		_Lcd_Write_String		CODE           	0145	0000	41
		_Lcd_Init      		CODE           	00AE	0000	106
		_Lcd_Write_Char		CODE           	01DF	0000	22
		_Lcd_Cmd       		CODE           	01AE	0000	26
		_Lcd_Set_Cursor		CODE           	016E	0000	38
		_Lcd_Clear     		CODE           	021A	0000	13
		_Lcd_Port      		CODE           	0227	0000	6

lcd.c estimated size: 252

main.c
		_ISR           		CODE           	0118	0000	45
		_main          		CODE           	001B	0000	147
		_config        		CODE           	0194	0000	26

main.c estimated size: 218

