

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 21:41:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  0081                     	;# 
   127  0085                     	;# 
   128  0086                     	;# 
   129  0087                     	;# 
   130  0088                     	;# 
   131  0089                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0185                     	;# 
   164  0187                     	;# 
   165  0188                     	;# 
   166  0189                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  0105                     	;# 
   233  0107                     	;# 
   234  0108                     	;# 
   235  0109                     	;# 
   236  010C                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0185                     	;# 
   242  0187                     	;# 
   243  0188                     	;# 
   244  0189                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001D                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0086                     	;# 
   285  0087                     	;# 
   286  0088                     	;# 
   287  0089                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  008F                     	;# 
   292  0090                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0094                     	;# 
   299  0095                     	;# 
   300  0096                     	;# 
   301  0097                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009A                     	;# 
   305  009B                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  0105                     	;# 
   311  0107                     	;# 
   312  0108                     	;# 
   313  0109                     	;# 
   314  010C                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  010F                     	;# 
   319  0185                     	;# 
   320  0187                     	;# 
   321  0188                     	;# 
   322  0189                     	;# 
   323  018C                     	;# 
   324  018D                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  0007                     	;# 
   333  0008                     	;# 
   334  0009                     	;# 
   335  000A                     	;# 
   336  000B                     	;# 
   337  000C                     	;# 
   338  000D                     	;# 
   339  000E                     	;# 
   340  000E                     	;# 
   341  000F                     	;# 
   342  0010                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0013                     	;# 
   346  0014                     	;# 
   347  0015                     	;# 
   348  0015                     	;# 
   349  0016                     	;# 
   350  0017                     	;# 
   351  0018                     	;# 
   352  0019                     	;# 
   353  001A                     	;# 
   354  001B                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001D                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  0081                     	;# 
   361  0085                     	;# 
   362  0086                     	;# 
   363  0087                     	;# 
   364  0088                     	;# 
   365  0089                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  008E                     	;# 
   369  008F                     	;# 
   370  0090                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0094                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  0105                     	;# 
   389  0107                     	;# 
   390  0108                     	;# 
   391  0109                     	;# 
   392  010C                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  010F                     	;# 
   397  0185                     	;# 
   398  0187                     	;# 
   399  0188                     	;# 
   400  0189                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403                           
   404                           	psect	strings
   405  1800                     __pstrings:
   406  1800                     stringtab:
   407  1800                     __stringtab:
   408                           
   409                           ;	String table - string pointers are 1 byte each
   410  1800  1BFF               	btfsc	btemp+1,7
   411  1801  280A               	ljmp	stringcode
   412  1802  1383               	bcf	3,7
   413  1803  187F               	btfsc	btemp+1,0
   414  1804  1783               	bsf	3,7
   415  1805  0800               	movf	0,w
   416  1806  0A84               	incf	4,f
   417  1807  1903               	skipnz
   418  1808  0AFF               	incf	btemp+1,f
   419  1809  0008               	return
   420  180A                     stringcode:
   421  180A                     stringdir:
   422  180A  3018               	movlw	high stringdir
   423  180B  008A               	movwf	10
   424  180C  0804               	movf	4,w
   425  180D  0A84               	incf	4,f
   426  180E  0782               	addwf	2,f
   427  180F                     __stringbase:
   428  180F  3400               	retlw	0
   429  1810                     __end_of__stringtab:
   430  1810                     __powers_:
   431  1810  3400               	retlw	0
   432  1811  3400               	retlw	0
   433  1812  3480               	retlw	128
   434  1813  343F               	retlw	63
   435  1814  3400               	retlw	0
   436  1815  3400               	retlw	0
   437  1816  3420               	retlw	32
   438  1817  3441               	retlw	65
   439  1818  3400               	retlw	0
   440  1819  3400               	retlw	0
   441  181A  34C8               	retlw	200
   442  181B  3442               	retlw	66
   443  181C  3400               	retlw	0
   444  181D  3400               	retlw	0
   445  181E  347A               	retlw	122
   446  181F  3444               	retlw	68
   447  1820  3400               	retlw	0
   448  1821  3440               	retlw	64
   449  1822  341C               	retlw	28
   450  1823  3446               	retlw	70
   451  1824  3400               	retlw	0
   452  1825  3450               	retlw	80
   453  1826  34C3               	retlw	195
   454  1827  3447               	retlw	71
   455  1828  3400               	retlw	0
   456  1829  3424               	retlw	36
   457  182A  3474               	retlw	116
   458  182B  3449               	retlw	73
   459  182C  3480               	retlw	128
   460  182D  3496               	retlw	150
   461  182E  3418               	retlw	24
   462  182F  344B               	retlw	75
   463  1830  3420               	retlw	32
   464  1831  34BC               	retlw	188
   465  1832  34BE               	retlw	190
   466  1833  344C               	retlw	76
   467  1834  3428               	retlw	40
   468  1835  346B               	retlw	107
   469  1836  346E               	retlw	110
   470  1837  344E               	retlw	78
   471  1838  34F9               	retlw	249
   472  1839  3402               	retlw	2
   473  183A  3415               	retlw	21
   474  183B  3450               	retlw	80
   475  183C  34EC               	retlw	236
   476  183D  3478               	retlw	120
   477  183E  34AD               	retlw	173
   478  183F  3460               	retlw	96
   479  1840  34CA               	retlw	202
   480  1841  34F2               	retlw	242
   481  1842  3449               	retlw	73
   482  1843  3471               	retlw	113
   483  1844                     __end_of__powers_:
   484  1844                     __npowers_:
   485  1844  3400               	retlw	0
   486  1845  3400               	retlw	0
   487  1846  3480               	retlw	128
   488  1847  343F               	retlw	63
   489  1848  34CD               	retlw	205
   490  1849  34CC               	retlw	204
   491  184A  34CC               	retlw	204
   492  184B  343D               	retlw	61
   493  184C  340A               	retlw	10
   494  184D  34D7               	retlw	215
   495  184E  3423               	retlw	35
   496  184F  343C               	retlw	60
   497  1850  346F               	retlw	111
   498  1851  3412               	retlw	18
   499  1852  3483               	retlw	131
   500  1853  343A               	retlw	58
   501  1854  3417               	retlw	23
   502  1855  34B7               	retlw	183
   503  1856  34D1               	retlw	209
   504  1857  3438               	retlw	56
   505  1858  34AC               	retlw	172
   506  1859  34C5               	retlw	197
   507  185A  3427               	retlw	39
   508  185B  3437               	retlw	55
   509  185C  34BD               	retlw	189
   510  185D  3437               	retlw	55
   511  185E  3486               	retlw	134
   512  185F  3435               	retlw	53
   513  1860  3495               	retlw	149
   514  1861  34BF               	retlw	191
   515  1862  34D6               	retlw	214
   516  1863  3433               	retlw	51
   517  1864  3477               	retlw	119
   518  1865  34CC               	retlw	204
   519  1866  342B               	retlw	43
   520  1867  3432               	retlw	50
   521  1868  345F               	retlw	95
   522  1869  3470               	retlw	112
   523  186A  3489               	retlw	137
   524  186B  3430               	retlw	48
   525  186C  34FF               	retlw	255
   526  186D  34E6               	retlw	230
   527  186E  34DB               	retlw	219
   528  186F  342E               	retlw	46
   529  1870  3408               	retlw	8
   530  1871  34E5               	retlw	229
   531  1872  343C               	retlw	60
   532  1873  341E               	retlw	30
   533  1874  3460               	retlw	96
   534  1875  3442               	retlw	66
   535  1876  34A2               	retlw	162
   536  1877  340D               	retlw	13
   537  1878                     __end_of__npowers_:
   538  1878                     _dpowers:
   539  1878  3401               	retlw	1
   540  1879  3400               	retlw	0
   541  187A  3400               	retlw	0
   542  187B  3400               	retlw	0
   543  187C  340A               	retlw	10
   544  187D  3400               	retlw	0
   545  187E  3400               	retlw	0
   546  187F  3400               	retlw	0
   547  1880  3464               	retlw	100
   548  1881  3400               	retlw	0
   549  1882  3400               	retlw	0
   550  1883  3400               	retlw	0
   551  1884  34E8               	retlw	232
   552  1885  3403               	retlw	3
   553  1886  3400               	retlw	0
   554  1887  3400               	retlw	0
   555  1888  3410               	retlw	16
   556  1889  3427               	retlw	39
   557  188A  3400               	retlw	0
   558  188B  3400               	retlw	0
   559  188C  34A0               	retlw	160
   560  188D  3486               	retlw	134
   561  188E  3401               	retlw	1
   562  188F  3400               	retlw	0
   563  1890  3440               	retlw	64
   564  1891  3442               	retlw	66
   565  1892  340F               	retlw	15
   566  1893  3400               	retlw	0
   567  1894  3480               	retlw	128
   568  1895  3496               	retlw	150
   569  1896  3498               	retlw	152
   570  1897  3400               	retlw	0
   571  1898  3400               	retlw	0
   572  1899  34E1               	retlw	225
   573  189A  34F5               	retlw	245
   574  189B  3405               	retlw	5
   575  189C  3400               	retlw	0
   576  189D  34CA               	retlw	202
   577  189E  349A               	retlw	154
   578  189F  343B               	retlw	59
   579  18A0                     __end_of_dpowers:
   580  001E                     _ADRESH	set	30
   581  000C                     _PIR1bits	set	12
   582  0009                     _PORTE	set	9
   583  0007                     _PORTC	set	7
   584  0006                     _PORTB	set	6
   585  0008                     _PORTD	set	8
   586  000B                     _INTCONbits	set	11
   587  001F                     _ADCON0bits	set	31
   588  0049                     _RE1	set	73
   589  0048                     _RE0	set	72
   590  008C                     _PIE1bits	set	140
   591  009F                     _ADCON1	set	159
   592  0085                     _TRISAbits	set	133
   593  0085                     _TRISA	set	133
   594  0089                     _TRISE	set	137
   595  0088                     _TRISD	set	136
   596  0086                     _TRISB	set	134
   597  0087                     _TRISC	set	135
   598  0188                     _ANSELbits	set	392
   599  0189                     _ANSELH	set	393
   600  0188                     _ANSEL	set	392
   601  18A0                     STR_4:
   602  18A0  3425               	retlw	37	;'%'
   603  18A1  342E               	retlw	46	;'.'
   604  18A2  3432               	retlw	50	;'2'
   605  18A3  3466               	retlw	102	;'f'
   606  18A4  3400               	retlw	0
   607  18A5                     STR_1:
   608  18A5  3453               	retlw	83	;'S'
   609  18A6  3431               	retlw	49	;'1'
   610  18A7  343A               	retlw	58	;':'
   611  18A8  3400               	retlw	0
   612  18A9                     STR_2:
   613  18A9  3453               	retlw	83	;'S'
   614  18AA  3432               	retlw	50	;'2'
   615  18AB  343A               	retlw	58	;':'
   616  18AC  3400               	retlw	0
   617  18AD                     STR_3:
   618  18AD  3453               	retlw	83	;'S'
   619  18AE  3433               	retlw	51	;'3'
   620  18AF  343A               	retlw	58	;':'
   621  18B0  3400               	retlw	0
   622  18A0                     
   623                           	psect	cinit
   624  0019                     start_initialization:	
   625                           ; #config settings
   626                           
   627  0019                     __initialization:
   628                           
   629                           ; Clear objects allocated to BANK1
   630  0019  1683               	bsf	3,5	;RP0=1, select bank1
   631  001A  1303               	bcf	3,6	;RP1=0, select bank1
   632  001B  01CB               	clrf	__pbssBANK1& (0+127)
   633  001C  01CC               	clrf	(__pbssBANK1+1)& (0+127)
   634  001D  01CD               	clrf	(__pbssBANK1+2)& (0+127)
   635  001E  01CE               	clrf	(__pbssBANK1+3)& (0+127)
   636  001F  01CF               	clrf	(__pbssBANK1+4)& (0+127)
   637  0020  01D0               	clrf	(__pbssBANK1+5)& (0+127)
   638                           
   639                           ; Clear objects allocated to BANK3
   640  0021  1783               	bsf	3,7	;select IRP bank2
   641  0022  3090               	movlw	low __pbssBANK3
   642  0023  0084               	movwf	4
   643  0024  30D4               	movlw	low (__pbssBANK3+68)
   644  0025  160A  158A  2218  120A  118A  	fcall	clear_ram0
   645  002A                     end_of_initialization:	
   646                           ;End of C runtime variable initialization code
   647                           
   648  002A                     __end_of__initialization:
   649  002A  0183               	clrf	3
   650  002B  160A  158A  2F5A   	ljmp	_main	;jump to C main() function
   651                           
   652                           	psect	bssBANK1
   653  00CB                     __pbssBANK1:
   654  00CB                     _voltaje:
   655  00CB                     	ds	4
   656  00CF                     _val_pot2:
   657  00CF                     	ds	1
   658  00D0                     _val_pot1:
   659  00D0                     	ds	1
   660                           
   661                           	psect	bssBANK3
   662  0190                     __pbssBANK3:
   663  0190                     _adc_fin:
   664  0190                     	ds	2
   665  0192                     _pot:
   666  0192                     	ds	2
   667  0194                     _buffer:
   668  0194                     	ds	64
   669                           
   670                           	psect	clrtext
   671  1A18                     clear_ram0:	
   672                           ;	Called with FSR containing the base address, and
   673                           ;	W with the last address+1
   674                           
   675  1A18  0064               	clrwdt	;clear the watchdog before getting into this loop
   676  1A19                     clrloop0:
   677  1A19  0180               	clrf	0	;clear RAM location pointed to by FSR
   678  1A1A  0A84               	incf	4,f	;increment pointer
   679  1A1B  0604               	xorwf	4,w	;XOR with final address
   680  1A1C  1903               	btfsc	3,2	;have we reached the end yet?
   681  1A1D  3400               	retlw	0	;all done for this memory range, return
   682  1A1E  0604               	xorwf	4,w	;XOR again to restore value
   683  1A1F  2A19               	goto	clrloop0	;do the next byte
   684                           
   685                           	psect	cstackBANK3
   686  01D4                     __pcstackBANK3:
   687  01D4                     ??_config:
   688  01D4                     ??_confADC:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  01D4                     ?_conf_ch:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  01D4                     ??_Lcd_Port:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  01D4                     Lcd_Port@a:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  01D4                     conf_ch@sel:	
   701                           ; 1 bytes @ 0x0
   702                           
   703                           
   704                           ; 2 bytes @ 0x0
   705  01D4                     	ds	1
   706  01D5                     ??_Lcd_Cmd:
   707  01D5                     ??_Lcd_Write_Char:	
   708                           ; 1 bytes @ 0x1
   709                           
   710                           
   711                           ; 1 bytes @ 0x1
   712  01D5                     	ds	1
   713  01D6                     ??_conf_ch:
   714  01D6                     Lcd_Write_Char@a:	
   715                           ; 1 bytes @ 0x2
   716                           
   717                           
   718                           ; 1 bytes @ 0x2
   719  01D6                     	ds	1
   720  01D7                     ?_Lcd_Write_String:
   721  01D7                     Lcd_Cmd@a:	
   722                           ; 1 bytes @ 0x3
   723                           
   724  01D7                     Lcd_Write_String@a:	
   725                           ; 1 bytes @ 0x3
   726                           
   727                           
   728                           ; 2 bytes @ 0x3
   729  01D7                     	ds	1
   730  01D8                     ??_Lcd_Init:
   731  01D8                     ??_Lcd_Clear:	
   732                           ; 1 bytes @ 0x4
   733                           
   734  01D8                     ?_Lcd_Set_Cursor:	
   735                           ; 1 bytes @ 0x4
   736                           
   737  01D8                     Lcd_Set_Cursor@b:	
   738                           ; 1 bytes @ 0x4
   739                           
   740                           
   741                           ; 1 bytes @ 0x4
   742  01D8                     	ds	1
   743  01D9                     ??_Lcd_Set_Cursor:
   744  01D9                     ??_Lcd_Write_String:	
   745                           ; 1 bytes @ 0x5
   746                           
   747                           
   748                           ; 1 bytes @ 0x5
   749  01D9                     	ds	1
   750  01DA                     Lcd_Set_Cursor@a:
   751                           
   752                           ; 1 bytes @ 0x6
   753  01DA                     	ds	1
   754  01DB                     Lcd_Set_Cursor@temp:
   755                           
   756                           ; 1 bytes @ 0x7
   757  01DB                     	ds	1
   758  01DC                     Lcd_Write_String@i:
   759                           
   760                           ; 2 bytes @ 0x8
   761  01DC                     	ds	2
   762  01DE                     ??_main:
   763                           
   764                           ; 1 bytes @ 0xA
   765  01DE                     	ds	2
   766                           
   767                           	psect	cstackBANK1
   768  00A0                     __pcstackBANK1:
   769  00A0                     ?_sprintf:
   770  00A0                     sprintf@f:	
   771                           ; 2 bytes @ 0x0
   772                           
   773                           
   774                           ; 1 bytes @ 0x0
   775  00A0                     	ds	5
   776  00A5                     ??_sprintf:
   777                           
   778                           ; 1 bytes @ 0x5
   779  00A5                     	ds	5
   780  00AA                     _sprintf$1046:
   781                           
   782                           ; 4 bytes @ 0xA
   783  00AA                     	ds	4
   784  00AE                     sprintf@ap:
   785                           
   786                           ; 1 bytes @ 0xE
   787  00AE                     	ds	1
   788  00AF                     sprintf@flag:
   789                           
   790                           ; 2 bytes @ 0xF
   791  00AF                     	ds	2
   792  00B1                     sprintf@val:
   793                           
   794                           ; 4 bytes @ 0x11
   795  00B1                     	ds	4
   796  00B5                     sprintf@eexp:
   797                           
   798                           ; 2 bytes @ 0x15
   799  00B5                     	ds	2
   800  00B7                     sprintf@tmpval:
   801                           
   802                           ; 4 bytes @ 0x17
   803  00B7                     	ds	4
   804  00BB                     sprintf@sp:
   805                           
   806                           ; 1 bytes @ 0x1B
   807  00BB                     	ds	1
   808  00BC                     sprintf@prec:
   809                           
   810                           ; 2 bytes @ 0x1C
   811  00BC                     	ds	2
   812  00BE                     sprintf@fval:
   813                           
   814                           ; 4 bytes @ 0x1E
   815  00BE                     	ds	4
   816  00C2                     sprintf@c:
   817                           
   818                           ; 1 bytes @ 0x22
   819  00C2                     	ds	1
   820  00C3                     ??_ISR:
   821                           
   822                           ; 1 bytes @ 0x23
   823  00C3                     	ds	8
   824                           
   825                           	psect	cstackCOMMON
   826  0070                     __pcstackCOMMON:
   827  0070                     ?_isdigit:
   828  0070                     ?___fleq:	
   829                           ; 1 bit 
   830                           
   831  0070                     ?___flge:	
   832                           ; 1 bit 
   833                           
   834  0070                     ?_config:	
   835                           ; 1 bit 
   836                           
   837  0070                     ?_confADC:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_Lcd_Init:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_Lcd_Clear:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ??_isdigit:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_main:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_ISR:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_Lcd_Port:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_Lcd_Cmd:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_Lcd_Write_Char:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?i1_Lcd_Port:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ??i1_Lcd_Port:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?i1_Lcd_Cmd:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?i1_Lcd_Write_Char:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?__Umul8_16:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?___wmul:	
   880                           ; 2 bytes @ 0x0
   881                           
   882  0070                     ?___awmod:	
   883                           ; 2 bytes @ 0x0
   884                           
   885  0070                     ?___lwmod:	
   886                           ; 2 bytes @ 0x0
   887                           
   888  0070                     ?__tdiv_to_l_:	
   889                           ; 2 bytes @ 0x0
   890                           
   891  0070                     ?__div_to_l_:	
   892                           ; 4 bytes @ 0x0
   893                           
   894  0070                     ?___lldiv:	
   895                           ; 4 bytes @ 0x0
   896                           
   897  0070                     ?___flneg:	
   898                           ; 4 bytes @ 0x0
   899                           
   900  0070                     ?___llmod:	
   901                           ; 4 bytes @ 0x0
   902                           
   903  0070                     ?___xxtofl:	
   904                           ; 4 bytes @ 0x0
   905                           
   906  0070                     __Umul8_16@multiplicand:	
   907                           ; 4 bytes @ 0x0
   908                           
   909  0070                     _isdigit$862:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     i1Lcd_Port@a:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ___wmul@multiplier:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ___awmod@divisor:	
   919                           ; 2 bytes @ 0x0
   920                           
   921  0070                     ___lwmod@divisor:	
   922                           ; 2 bytes @ 0x0
   923                           
   924  0070                     ___lldiv@divisor:	
   925                           ; 2 bytes @ 0x0
   926                           
   927  0070                     __div_to_l_@f1:	
   928                           ; 4 bytes @ 0x0
   929                           
   930  0070                     ___fleq@ff1:	
   931                           ; 4 bytes @ 0x0
   932                           
   933  0070                     ___flge@ff1:	
   934                           ; 4 bytes @ 0x0
   935                           
   936  0070                     ___flneg@f1:	
   937                           ; 4 bytes @ 0x0
   938                           
   939  0070                     __tdiv_to_l_@f1:	
   940                           ; 4 bytes @ 0x0
   941                           
   942  0070                     ___llmod@divisor:	
   943                           ; 4 bytes @ 0x0
   944                           
   945  0070                     ___xxtofl@val:	
   946                           ; 4 bytes @ 0x0
   947                           
   948                           
   949                           ; 4 bytes @ 0x0
   950  0070                     	ds	1
   951  0071                     ??i1_Lcd_Cmd:
   952  0071                     ??i1_Lcd_Write_Char:	
   953                           ; 1 bytes @ 0x1
   954                           
   955  0071                     isdigit@c:	
   956                           ; 1 bytes @ 0x1
   957                           
   958                           
   959                           ; 1 bytes @ 0x1
   960  0071                     	ds	1
   961  0072                     ??__Umul8_16:
   962  0072                     i1Lcd_Write_Char@a:	
   963                           ; 1 bytes @ 0x2
   964                           
   965  0072                     ___wmul@multiplicand:	
   966                           ; 1 bytes @ 0x2
   967                           
   968  0072                     ___awmod@dividend:	
   969                           ; 2 bytes @ 0x2
   970                           
   971  0072                     ___lwmod@dividend:	
   972                           ; 2 bytes @ 0x2
   973                           
   974                           
   975                           ; 2 bytes @ 0x2
   976  0072                     	ds	1
   977  0073                     ?i1_Lcd_Write_String:
   978  0073                     i1Lcd_Cmd@a:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  0073                     i1Lcd_Write_String@a:	
   982                           ; 1 bytes @ 0x3
   983                           
   984                           
   985                           ; 2 bytes @ 0x3
   986  0073                     	ds	1
   987  0074                     ??___wmul:
   988  0074                     ??___awmod:	
   989                           ; 1 bytes @ 0x4
   990                           
   991  0074                     ??___flneg:	
   992                           ; 1 bytes @ 0x4
   993                           
   994  0074                     ??___lwmod:	
   995                           ; 1 bytes @ 0x4
   996                           
   997  0074                     ??___xxtofl:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  0074                     ?i1_Lcd_Set_Cursor:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  0074                     i1Lcd_Set_Cursor@b:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006  0074                     ___wmul@product:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  0074                     __Umul8_16@product:	
  1010                           ; 2 bytes @ 0x4
  1011                           
  1012  0074                     ___lldiv@dividend:	
  1013                           ; 2 bytes @ 0x4
  1014                           
  1015  0074                     __div_to_l_@f2:	
  1016                           ; 4 bytes @ 0x4
  1017                           
  1018  0074                     ___fleq@ff2:	
  1019                           ; 4 bytes @ 0x4
  1020                           
  1021  0074                     ___flge@ff2:	
  1022                           ; 4 bytes @ 0x4
  1023                           
  1024  0074                     __tdiv_to_l_@f2:	
  1025                           ; 4 bytes @ 0x4
  1026                           
  1027  0074                     ___llmod@dividend:	
  1028                           ; 4 bytes @ 0x4
  1029                           
  1030                           
  1031                           ; 4 bytes @ 0x4
  1032  0074                     	ds	1
  1033  0075                     ??i1_Lcd_Set_Cursor:
  1034  0075                     ??i1_Lcd_Write_String:	
  1035                           ; 1 bytes @ 0x5
  1036                           
  1037  0075                     ___awmod@counter:	
  1038                           ; 1 bytes @ 0x5
  1039                           
  1040  0075                     ___lwmod@counter:	
  1041                           ; 1 bytes @ 0x5
  1042                           
  1043                           
  1044                           ; 1 bytes @ 0x5
  1045  0075                     	ds	1
  1046  0076                     ?___lwdiv:
  1047  0076                     ___awmod@sign:	
  1048                           ; 2 bytes @ 0x6
  1049                           
  1050  0076                     i1Lcd_Set_Cursor@a:	
  1051                           ; 1 bytes @ 0x6
  1052                           
  1053  0076                     ___lwdiv@divisor:	
  1054                           ; 1 bytes @ 0x6
  1055                           
  1056  0076                     __Umul8_16@word_mpld:	
  1057                           ; 2 bytes @ 0x6
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x6
  1061  0076                     	ds	1
  1062  0077                     ?___awdiv:
  1063  0077                     i1Lcd_Set_Cursor@temp:	
  1064                           ; 2 bytes @ 0x7
  1065                           
  1066  0077                     ___awdiv@divisor:	
  1067                           ; 1 bytes @ 0x7
  1068                           
  1069                           
  1070                           ; 2 bytes @ 0x7
  1071  0077                     	ds	1
  1072  0078                     ??__tdiv_to_l_:
  1073  0078                     ??__div_to_l_:	
  1074                           ; 1 bytes @ 0x8
  1075                           
  1076  0078                     ??___lldiv:	
  1077                           ; 1 bytes @ 0x8
  1078                           
  1079  0078                     ??___fleq:	
  1080                           ; 1 bytes @ 0x8
  1081                           
  1082  0078                     ??___flge:	
  1083                           ; 1 bytes @ 0x8
  1084                           
  1085  0078                     ??___llmod:	
  1086                           ; 1 bytes @ 0x8
  1087                           
  1088  0078                     __Umul8_16@multiplier:	
  1089                           ; 1 bytes @ 0x8
  1090                           
  1091  0078                     ___xxtofl@sign:	
  1092                           ; 1 bytes @ 0x8
  1093                           
  1094  0078                     ___lwdiv@dividend:	
  1095                           ; 1 bytes @ 0x8
  1096                           
  1097  0078                     i1Lcd_Write_String@i:	
  1098                           ; 2 bytes @ 0x8
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x8
  1102  0078                     	ds	1
  1103  0079                     ___llmod@counter:
  1104  0079                     ___xxtofl@exp:	
  1105                           ; 1 bytes @ 0x9
  1106                           
  1107  0079                     ___awdiv@dividend:	
  1108                           ; 1 bytes @ 0x9
  1109                           
  1110  0079                     ___lldiv@quotient:	
  1111                           ; 2 bytes @ 0x9
  1112                           
  1113                           
  1114                           ; 4 bytes @ 0x9
  1115  0079                     	ds	1
  1116  007A                     ??___lwdiv:
  1117  007A                     ___xxtofl@arg:	
  1118                           ; 1 bytes @ 0xA
  1119                           
  1120                           
  1121                           ; 4 bytes @ 0xA
  1122  007A                     	ds	1
  1123  007B                     ??___awdiv:
  1124  007B                     ___lwdiv@quotient:	
  1125                           ; 1 bytes @ 0xB
  1126                           
  1127                           
  1128                           ; 2 bytes @ 0xB
  1129  007B                     	ds	2
  1130  007D                     ___lldiv@counter:
  1131  007D                     ___lwdiv@counter:	
  1132                           ; 1 bytes @ 0xD
  1133                           
  1134                           
  1135                           ; 1 bytes @ 0xD
  1136  007D                     	ds	1
  1137  007E                     ??___flsub:
  1138                           
  1139                           	psect	cstackBANK0
  1140  0020                     __pcstackBANK0:	
  1141                           ; 1 bytes @ 0xE
  1142                           
  1143  0020                     ___awdiv@counter:
  1144  0020                     __div_to_l_@quot:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0020                     __tdiv_to_l_@quot:	
  1148                           ; 4 bytes @ 0x0
  1149                           
  1150                           
  1151                           ; 4 bytes @ 0x0
  1152  0020                     	ds	1
  1153  0021                     ___awdiv@sign:
  1154                           
  1155                           ; 1 bytes @ 0x1
  1156  0021                     	ds	1
  1157  0022                     ___awdiv@quotient:
  1158                           
  1159                           ; 2 bytes @ 0x2
  1160  0022                     	ds	2
  1161  0024                     ?___flmul:
  1162  0024                     __div_to_l_@cntr:	
  1163                           ; 4 bytes @ 0x4
  1164                           
  1165  0024                     __tdiv_to_l_@cntr:	
  1166                           ; 1 bytes @ 0x4
  1167                           
  1168  0024                     ___flmul@b:	
  1169                           ; 1 bytes @ 0x4
  1170                           
  1171                           
  1172                           ; 4 bytes @ 0x4
  1173  0024                     	ds	1
  1174  0025                     __div_to_l_@exp1:
  1175  0025                     __tdiv_to_l_@exp1:	
  1176                           ; 1 bytes @ 0x5
  1177                           
  1178                           
  1179                           ; 1 bytes @ 0x5
  1180  0025                     	ds	3
  1181  0028                     ___flmul@a:
  1182                           
  1183                           ; 4 bytes @ 0x8
  1184  0028                     	ds	4
  1185  002C                     ??___flmul:
  1186                           
  1187                           ; 1 bytes @ 0xC
  1188  002C                     	ds	5
  1189  0031                     ___flmul@sign:
  1190                           
  1191                           ; 1 bytes @ 0x11
  1192  0031                     	ds	1
  1193  0032                     ___flmul@grs:
  1194                           
  1195                           ; 4 bytes @ 0x12
  1196  0032                     	ds	4
  1197  0036                     ___flmul@aexp:
  1198                           
  1199                           ; 1 bytes @ 0x16
  1200  0036                     	ds	1
  1201  0037                     ___flmul@bexp:
  1202                           
  1203                           ; 1 bytes @ 0x17
  1204  0037                     	ds	1
  1205  0038                     ___flmul@prod:
  1206                           
  1207                           ; 4 bytes @ 0x18
  1208  0038                     	ds	4
  1209  003C                     ___flmul@temp:
  1210                           
  1211                           ; 2 bytes @ 0x1C
  1212  003C                     	ds	2
  1213  003E                     ?_fround:
  1214  003E                     ?_scale:	
  1215                           ; 4 bytes @ 0x1E
  1216                           
  1217  003E                     ?___fldiv:	
  1218                           ; 4 bytes @ 0x1E
  1219                           
  1220  003E                     ___fldiv@a:	
  1221                           ; 4 bytes @ 0x1E
  1222                           
  1223                           
  1224                           ; 4 bytes @ 0x1E
  1225  003E                     	ds	4
  1226  0042                     ??_fround:
  1227  0042                     ??_scale:	
  1228                           ; 1 bytes @ 0x22
  1229                           
  1230  0042                     ___fldiv@b:	
  1231                           ; 1 bytes @ 0x22
  1232                           
  1233                           
  1234                           ; 4 bytes @ 0x22
  1235  0042                     	ds	4
  1236  0046                     ??___fldiv:
  1237                           
  1238                           ; 1 bytes @ 0x26
  1239  0046                     	ds	3
  1240  0049                     _fround$1044:
  1241                           
  1242                           ; 4 bytes @ 0x29
  1243  0049                     	ds	2
  1244  004B                     ___fldiv@rem:
  1245                           
  1246                           ; 4 bytes @ 0x2B
  1247  004B                     	ds	1
  1248  004C                     _scale$1045:
  1249                           
  1250                           ; 4 bytes @ 0x2C
  1251  004C                     	ds	1
  1252  004D                     _fround$1043:
  1253                           
  1254                           ; 4 bytes @ 0x2D
  1255  004D                     	ds	2
  1256  004F                     ___fldiv@sign:
  1257                           
  1258                           ; 1 bytes @ 0x2F
  1259  004F                     	ds	1
  1260  0050                     scale@scl:
  1261  0050                     ___fldiv@new_exp:	
  1262                           ; 1 bytes @ 0x30
  1263                           
  1264                           
  1265                           ; 2 bytes @ 0x30
  1266  0050                     	ds	1
  1267  0051                     ?___fltol:
  1268  0051                     fround@prec:	
  1269                           ; 4 bytes @ 0x31
  1270                           
  1271  0051                     ___fltol@f1:	
  1272                           ; 1 bytes @ 0x31
  1273                           
  1274                           
  1275                           ; 4 bytes @ 0x31
  1276  0051                     	ds	1
  1277  0052                     ?___fladd:
  1278  0052                     ___fladd@b:	
  1279                           ; 4 bytes @ 0x32
  1280                           
  1281  0052                     ___fldiv@grs:	
  1282                           ; 4 bytes @ 0x32
  1283                           
  1284                           
  1285                           ; 4 bytes @ 0x32
  1286  0052                     	ds	3
  1287  0055                     ??___fltol:
  1288                           
  1289                           ; 1 bytes @ 0x35
  1290  0055                     	ds	1
  1291  0056                     ___fldiv@bexp:
  1292  0056                     ___fladd@a:	
  1293                           ; 1 bytes @ 0x36
  1294                           
  1295                           
  1296                           ; 4 bytes @ 0x36
  1297  0056                     	ds	1
  1298  0057                     ___fldiv@aexp:
  1299                           
  1300                           ; 1 bytes @ 0x37
  1301  0057                     	ds	3
  1302  005A                     ??___fladd:
  1303  005A                     ___fltol@sign1:	
  1304                           ; 1 bytes @ 0x3A
  1305                           
  1306                           
  1307                           ; 1 bytes @ 0x3A
  1308  005A                     	ds	1
  1309  005B                     ___fltol@exp1:
  1310                           
  1311                           ; 1 bytes @ 0x3B
  1312  005B                     	ds	7
  1313  0062                     ___fladd@signs:
  1314                           
  1315                           ; 1 bytes @ 0x42
  1316  0062                     	ds	1
  1317  0063                     ___fladd@aexp:
  1318                           
  1319                           ; 1 bytes @ 0x43
  1320  0063                     	ds	1
  1321  0064                     ___fladd@bexp:
  1322                           
  1323                           ; 1 bytes @ 0x44
  1324  0064                     	ds	1
  1325  0065                     ___fladd@grs:
  1326                           
  1327                           ; 1 bytes @ 0x45
  1328  0065                     	ds	1
  1329  0066                     ?___flsub:
  1330  0066                     ___flsub@a:	
  1331                           ; 4 bytes @ 0x46
  1332                           
  1333                           
  1334                           ; 4 bytes @ 0x46
  1335  0066                     	ds	4
  1336  006A                     ___flsub@b:
  1337                           
  1338                           ; 4 bytes @ 0x4A
  1339  006A                     	ds	4
  1340                           
  1341                           	psect	maintext
  1342  1F5A                     __pmaintext:	
  1343 ;;
  1344 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1345 ;;
  1346 ;; *************** function _main *****************
  1347 ;; Defined at:
  1348 ;;		line 56 in file "main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : B00/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0
  1364 ;;      Temps:          0       0       0       2       0
  1365 ;;      Totals:         0       0       0       2       0
  1366 ;;Total ram usage:        2 bytes
  1367 ;; Hardware stack levels required when called:    8
  1368 ;; This function calls:
  1369 ;;		_Lcd_Clear
  1370 ;;		_Lcd_Init
  1371 ;;		_Lcd_Set_Cursor
  1372 ;;		_Lcd_Write_String
  1373 ;;		_confADC
  1374 ;;		_conf_ch
  1375 ;;		_config
  1376 ;; This function is called by:
  1377 ;;		Startup code after reset
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _main
  1383  1F5A                     _main:
  1384  1F5A                     l3644:	
  1385                           ;incstack = 0
  1386                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1387                           
  1388                           
  1389                           ;main.c: 57:     config();
  1390  1F5A  160A  158A  22A1  160A  158A  	fcall	_config
  1391  1F5F                     l3646:
  1392                           
  1393                           ;main.c: 58:     confADC();
  1394  1F5F  160A  158A  223D  160A  158A  	fcall	_confADC
  1395  1F64                     l3648:
  1396                           
  1397                           ;main.c: 59:     adc_fin = 0;
  1398  1F64  1683               	bsf	3,5	;RP0=1, select bank3
  1399  1F65  1703               	bsf	3,6	;RP1=1, select bank3
  1400  1F66  0190               	clrf	_adc_fin^(0+384)
  1401  1F67  0191               	clrf	(_adc_fin+1)^(0+384)
  1402  1F68                     l3650:
  1403                           
  1404                           ;main.c: 60:     Lcd_Init();
  1405  1F68  160A  158A  264E  160A  158A  	fcall	_Lcd_Init
  1406  1F6D                     l3652:
  1407                           
  1408                           ;main.c: 61:     Lcd_Clear();
  1409  1F6D  120A  118A  27F0  160A  158A  	fcall	_Lcd_Clear
  1410  1F72                     l3654:
  1411                           
  1412                           ;main.c: 63:         Lcd_Set_Cursor(1,1);
  1413  1F72  1683               	bsf	3,5	;RP0=1, select bank3
  1414  1F73  1703               	bsf	3,6	;RP1=1, select bank3
  1415  1F74  01D8               	clrf	Lcd_Set_Cursor@b^(0+384)
  1416  1F75  0AD8               	incf	Lcd_Set_Cursor@b^(0+384),f
  1417  1F76  3001               	movlw	1
  1418  1F77  160A  158A  234A  160A  158A  	fcall	_Lcd_Set_Cursor
  1419  1F7C                     l3656:
  1420                           
  1421                           ;main.c: 64:         Lcd_Write_String("S1:");
  1422  1F7C  3096               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1423  1F7D  1683               	bsf	3,5	;RP0=1, select bank3
  1424  1F7E  1703               	bsf	3,6	;RP1=1, select bank3
  1425  1F7F  00D7               	movwf	Lcd_Write_String@a^(0+384)
  1426  1F80  3080               	movlw	128
  1427  1F81  00D8               	movwf	(Lcd_Write_String@a+1)^(0+384)
  1428  1F82  160A  158A  24D2  160A  158A  	fcall	_Lcd_Write_String
  1429  1F87                     l3658:
  1430                           
  1431                           ;main.c: 65:         Lcd_Set_Cursor(1,8);
  1432  1F87  3008               	movlw	8
  1433  1F88  1683               	bsf	3,5	;RP0=1, select bank3
  1434  1F89  1703               	bsf	3,6	;RP1=1, select bank3
  1435  1F8A  00DE               	movwf	??_main^(0+384)
  1436  1F8B  085E               	movf	??_main^(0+384),w
  1437  1F8C  00D8               	movwf	Lcd_Set_Cursor@b^(0+384)
  1438  1F8D  3001               	movlw	1
  1439  1F8E  160A  158A  234A  160A  158A  	fcall	_Lcd_Set_Cursor
  1440  1F93                     l3660:
  1441                           
  1442                           ;main.c: 66:         Lcd_Write_String("S2:");
  1443  1F93  309A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1444  1F94  1683               	bsf	3,5	;RP0=1, select bank3
  1445  1F95  1703               	bsf	3,6	;RP1=1, select bank3
  1446  1F96  00D7               	movwf	Lcd_Write_String@a^(0+384)
  1447  1F97  3080               	movlw	128
  1448  1F98  00D8               	movwf	(Lcd_Write_String@a+1)^(0+384)
  1449  1F99  160A  158A  24D2  160A  158A  	fcall	_Lcd_Write_String
  1450  1F9E                     l3662:
  1451                           
  1452                           ;main.c: 67:         Lcd_Set_Cursor(1,13);
  1453  1F9E  300D               	movlw	13
  1454  1F9F  1683               	bsf	3,5	;RP0=1, select bank3
  1455  1FA0  1703               	bsf	3,6	;RP1=1, select bank3
  1456  1FA1  00DE               	movwf	??_main^(0+384)
  1457  1FA2  085E               	movf	??_main^(0+384),w
  1458  1FA3  00D8               	movwf	Lcd_Set_Cursor@b^(0+384)
  1459  1FA4  3001               	movlw	1
  1460  1FA5  160A  158A  234A  160A  158A  	fcall	_Lcd_Set_Cursor
  1461  1FAA                     l3664:
  1462                           
  1463                           ;main.c: 68:         Lcd_Write_String("S3:");
  1464  1FAA  309E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1465  1FAB  1683               	bsf	3,5	;RP0=1, select bank3
  1466  1FAC  1703               	bsf	3,6	;RP1=1, select bank3
  1467  1FAD  00D7               	movwf	Lcd_Write_String@a^(0+384)
  1468  1FAE  3080               	movlw	128
  1469  1FAF  00D8               	movwf	(Lcd_Write_String@a+1)^(0+384)
  1470  1FB0  160A  158A  24D2  160A  158A  	fcall	_Lcd_Write_String
  1471  1FB5                     l3666:
  1472                           
  1473                           ;main.c: 70:         if (adc_fin == 0) {
  1474  1FB5  1683               	bsf	3,5	;RP0=1, select bank3
  1475  1FB6  1703               	bsf	3,6	;RP1=1, select bank3
  1476  1FB7  0810               	movf	_adc_fin^(0+384),w
  1477  1FB8  0411               	iorwf	(_adc_fin+1)^(0+384),w
  1478  1FB9  1D03               	btfss	3,2
  1479  1FBA  2FBC               	goto	u6051
  1480  1FBB  2FBD               	goto	u6050
  1481  1FBC                     u6051:
  1482  1FBC  2F72               	goto	l3654
  1483  1FBD                     u6050:
  1484  1FBD                     l3668:
  1485                           
  1486                           ;main.c: 71:             adc_fin = 1;
  1487  1FBD  3001               	movlw	1
  1488  1FBE  0090               	movwf	_adc_fin^(0+384)
  1489  1FBF  3000               	movlw	0
  1490  1FC0  0091               	movwf	(_adc_fin^(0+384)+1)
  1491  1FC1                     l3670:
  1492                           
  1493                           ;main.c: 72:             if (pot == 0) {
  1494  1FC1  0812               	movf	_pot^(0+384),w
  1495  1FC2  0413               	iorwf	(_pot+1)^(0+384),w
  1496  1FC3  1D03               	btfss	3,2
  1497  1FC4  2FC6               	goto	u6061
  1498  1FC5  2FC7               	goto	u6060
  1499  1FC6                     u6061:
  1500  1FC6  2FDD               	goto	l3678
  1501  1FC7                     u6060:
  1502  1FC7                     l3672:
  1503                           
  1504                           ;main.c: 73:                 conf_ch(0);
  1505  1FC7  3000               	movlw	0
  1506  1FC8  00D4               	movwf	conf_ch@sel^(0+384)
  1507  1FC9  00D5               	movwf	(conf_ch@sel+1)^(0+384)
  1508  1FCA  160A  158A  226A  160A  158A  	fcall	_conf_ch
  1509  1FCF                     l3674:
  1510                           
  1511                           ;main.c: 74:                 _delay((unsigned long)((10)*((8000000)/4000.0)));
  1512  1FCF  301A               	movlw	26
  1513  1FD0  1683               	bsf	3,5	;RP0=1, select bank3
  1514  1FD1  1703               	bsf	3,6	;RP1=1, select bank3
  1515  1FD2  00DF               	movwf	(??_main^(0+384)+1)
  1516  1FD3  30F7               	movlw	247
  1517  1FD4  00DE               	movwf	??_main^(0+384)
  1518  1FD5                     u6117:
  1519  1FD5  0BDE               	decfsz	??_main^(0+384),f
  1520  1FD6  2FD5               	goto	u6117
  1521  1FD7  0BDF               	decfsz	(??_main^(0+384)+1),f
  1522  1FD8  2FD5               	goto	u6117
  1523  1FD9  2FDA               	nop2
  1524  1FDA                     l3676:
  1525                           
  1526                           ;main.c: 75:                 ADCON0bits.GO = 1;
  1527  1FDA  1283               	bcf	3,5	;RP0=0, select bank0
  1528  1FDB  1303               	bcf	3,6	;RP1=0, select bank0
  1529  1FDC  149F               	bsf	31,1	;volatile
  1530  1FDD                     l3678:
  1531                           
  1532                           ;main.c: 78:             if (pot == 1) {
  1533  1FDD  1683               	bsf	3,5	;RP0=1, select bank3
  1534  1FDE  1703               	bsf	3,6	;RP1=1, select bank3
  1535  1FDF  0312               	decf	_pot^(0+384),w
  1536  1FE0  0413               	iorwf	(_pot+1)^(0+384),w
  1537  1FE1  1D03               	btfss	3,2
  1538  1FE2  2FE4               	goto	u6071
  1539  1FE3  2FE5               	goto	u6070
  1540  1FE4                     u6071:
  1541  1FE4  2F72               	goto	l3654
  1542  1FE5                     u6070:
  1543  1FE5                     l3680:
  1544                           
  1545                           ;main.c: 79:                 conf_ch(1);
  1546  1FE5  3001               	movlw	1
  1547  1FE6  00D4               	movwf	conf_ch@sel^(0+384)
  1548  1FE7  3000               	movlw	0
  1549  1FE8  00D5               	movwf	(conf_ch@sel^(0+384)+1)
  1550  1FE9  160A  158A  226A  160A  158A  	fcall	_conf_ch
  1551  1FEE                     l3682:
  1552                           
  1553                           ;main.c: 80:                 _delay((unsigned long)((10)*((8000000)/4000.0)));
  1554  1FEE  301A               	movlw	26
  1555  1FEF  1683               	bsf	3,5	;RP0=1, select bank3
  1556  1FF0  1703               	bsf	3,6	;RP1=1, select bank3
  1557  1FF1  00DF               	movwf	(??_main^(0+384)+1)
  1558  1FF2  30F7               	movlw	247
  1559  1FF3  00DE               	movwf	??_main^(0+384)
  1560  1FF4                     u6127:
  1561  1FF4  0BDE               	decfsz	??_main^(0+384),f
  1562  1FF5  2FF4               	goto	u6127
  1563  1FF6  0BDF               	decfsz	(??_main^(0+384)+1),f
  1564  1FF7  2FF4               	goto	u6127
  1565  1FF8  2FF9               	nop2
  1566  1FF9                     l3684:
  1567                           
  1568                           ;main.c: 81:                 ADCON0bits.GO = 1;
  1569  1FF9  1283               	bcf	3,5	;RP0=0, select bank0
  1570  1FFA  1303               	bcf	3,6	;RP1=0, select bank0
  1571  1FFB  149F               	bsf	31,1	;volatile
  1572  1FFC  2F72               	goto	l3654
  1573  1FFD  120A  118A  2816   	ljmp	start
  1574  2000                     __end_of_main:
  1575                           
  1576                           	psect	text1
  1577  1AA1                     __ptext1:	
  1578 ;; *************** function _config *****************
  1579 ;; Defined at:
  1580 ;;		line 91 in file "main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		status,2
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    5
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _config
  1610  1AA1                     _config:
  1611  1AA1                     l3210:	
  1612                           ;incstack = 0
  1613                           ; Regs used in _config: [status,2]
  1614                           
  1615                           
  1616                           ;main.c: 93:     INTCONbits.GIE = 1;
  1617  1AA1  178B               	bsf	11,7	;volatile
  1618                           
  1619                           ;main.c: 94:     INTCONbits.PEIE = 1;
  1620  1AA2  170B               	bsf	11,6	;volatile
  1621  1AA3                     l3212:
  1622                           
  1623                           ;main.c: 95:     ANSEL = 0;
  1624  1AA3  1683               	bsf	3,5	;RP0=1, select bank3
  1625  1AA4  1703               	bsf	3,6	;RP1=1, select bank3
  1626  1AA5  0188               	clrf	8	;volatile
  1627                           
  1628                           ;main.c: 96:     ANSELH = 0;
  1629  1AA6  0189               	clrf	9	;volatile
  1630  1AA7                     l3214:
  1631                           
  1632                           ;main.c: 97:     ANSELbits.ANS0 = 1;
  1633  1AA7  1408               	bsf	8,0	;volatile
  1634  1AA8                     l3216:
  1635                           
  1636                           ;main.c: 98:     ANSELbits.ANS1 = 1;
  1637  1AA8  1488               	bsf	8,1	;volatile
  1638                           
  1639                           ;main.c: 99:     TRISC = 0x00;
  1640  1AA9  1683               	bsf	3,5	;RP0=1, select bank1
  1641  1AAA  1303               	bcf	3,6	;RP1=0, select bank1
  1642  1AAB  0187               	clrf	7	;volatile
  1643                           
  1644                           ;main.c: 100:     TRISB = 0x00;
  1645  1AAC  0186               	clrf	6	;volatile
  1646                           
  1647                           ;main.c: 101:     TRISD = 0x00;
  1648  1AAD  0188               	clrf	8	;volatile
  1649                           
  1650                           ;main.c: 102:     TRISE = 0x00;
  1651  1AAE  0189               	clrf	9	;volatile
  1652                           
  1653                           ;main.c: 103:     TRISA = 0;
  1654  1AAF  0185               	clrf	5	;volatile
  1655  1AB0                     l3218:
  1656                           
  1657                           ;main.c: 104:     TRISAbits.TRISA0 = 1;
  1658  1AB0  1405               	bsf	5,0	;volatile
  1659  1AB1                     l3220:
  1660                           
  1661                           ;main.c: 105:     TRISAbits.TRISA1 = 1;
  1662  1AB1  1485               	bsf	5,1	;volatile
  1663                           
  1664                           ;main.c: 106:     PORTD = 0;
  1665  1AB2  1283               	bcf	3,5	;RP0=0, select bank0
  1666  1AB3  1303               	bcf	3,6	;RP1=0, select bank0
  1667  1AB4  0188               	clrf	8	;volatile
  1668                           
  1669                           ;main.c: 107:     PORTB = 0;
  1670  1AB5  0186               	clrf	6	;volatile
  1671                           
  1672                           ;main.c: 108:     PORTC = 0;
  1673  1AB6  0187               	clrf	7	;volatile
  1674                           
  1675                           ;main.c: 109:     PORTE = 0;
  1676  1AB7  0189               	clrf	9	;volatile
  1677                           
  1678                           ;main.c: 110:     pot = 0;
  1679  1AB8  1683               	bsf	3,5	;RP0=1, select bank3
  1680  1AB9  1703               	bsf	3,6	;RP1=1, select bank3
  1681  1ABA  0192               	clrf	_pot^(0+384)
  1682  1ABB  0193               	clrf	(_pot+1)^(0+384)
  1683  1ABC                     l78:
  1684  1ABC  0008               	return
  1685  1ABD                     __end_of_config:
  1686                           
  1687                           	psect	text2
  1688  1A6A                     __ptext2:	
  1689 ;; *************** function _conf_ch *****************
  1690 ;; Defined at:
  1691 ;;		line 18 in file "Adc_int_.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  sel             2    0[BANK3 ] int 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         0       0       0       2       0
  1706 ;;      Locals:         0       0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0
  1708 ;;      Totals:         0       0       0       2       0
  1709 ;;Total ram usage:        2 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    5
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function _conf_ch
  1721  1A6A                     _conf_ch:
  1722  1A6A                     l3270:	
  1723                           ;incstack = 0
  1724                           ; Regs used in _conf_ch: [wreg+status,2+status,0]
  1725                           
  1726                           
  1727                           ;Adc_int_.c: 19:     if (sel == 0){
  1728  1A6A  1683               	bsf	3,5	;RP0=1, select bank3
  1729  1A6B  1703               	bsf	3,6	;RP1=1, select bank3
  1730  1A6C  0854               	movf	conf_ch@sel^(0+384),w
  1731  1A6D  0455               	iorwf	(conf_ch@sel+1)^(0+384),w
  1732  1A6E  1D03               	btfss	3,2
  1733  1A6F  2A71               	goto	u5341
  1734  1A70  2A72               	goto	u5340
  1735  1A71                     u5341:
  1736  1A71  2A76               	goto	l101
  1737  1A72                     u5340:
  1738  1A72                     l3272:
  1739                           
  1740                           ;Adc_int_.c: 20:         ADCON0bits.CHS = 0b0000;
  1741  1A72  30C3               	movlw	-61
  1742  1A73  1283               	bcf	3,5	;RP0=0, select bank0
  1743  1A74  1303               	bcf	3,6	;RP1=0, select bank0
  1744  1A75  059F               	andwf	31,f	;volatile
  1745  1A76                     l101:	
  1746                           ;Adc_int_.c: 21:     }
  1747                           
  1748                           
  1749                           ;Adc_int_.c: 22:     if (sel == 1){
  1750  1A76  1683               	bsf	3,5	;RP0=1, select bank3
  1751  1A77  1703               	bsf	3,6	;RP1=1, select bank3
  1752  1A78  0354               	decf	conf_ch@sel^(0+384),w
  1753  1A79  0455               	iorwf	(conf_ch@sel+1)^(0+384),w
  1754  1A7A  1D03               	btfss	3,2
  1755  1A7B  2A7D               	goto	u5351
  1756  1A7C  2A7E               	goto	u5350
  1757  1A7D                     u5351:
  1758  1A7D  2A84               	goto	l103
  1759  1A7E                     u5350:
  1760  1A7E                     l3274:
  1761                           
  1762                           ;Adc_int_.c: 23:         ADCON0bits.CHS = 0b0001;
  1763  1A7E  1283               	bcf	3,5	;RP0=0, select bank0
  1764  1A7F  1303               	bcf	3,6	;RP1=0, select bank0
  1765  1A80  081F               	movf	31,w	;volatile
  1766  1A81  39C3               	andlw	-61
  1767  1A82  3804               	iorlw	4
  1768  1A83  009F               	movwf	31	;volatile
  1769  1A84                     l103:
  1770  1A84  0008               	return
  1771  1A85                     __end_of_conf_ch:
  1772                           
  1773                           	psect	text3
  1774  1A3D                     __ptext3:	
  1775 ;; *************** function _confADC *****************
  1776 ;; Defined at:
  1777 ;;		line 3 in file "Adc_int_.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0
  1794 ;;      Totals:         0       0       0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    5
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           
  1806                           ;psect for function _confADC
  1807  1A3D                     _confADC:
  1808  1A3D                     l3222:	
  1809                           ;incstack = 0
  1810                           ; Regs used in _confADC: [wreg+status,2+status,0]
  1811                           
  1812                           
  1813                           ;Adc_int_.c: 6:     ADCON0bits.ADCS0 = 1;
  1814  1A3D  1283               	bcf	3,5	;RP0=0, select bank0
  1815  1A3E  1303               	bcf	3,6	;RP1=0, select bank0
  1816  1A3F  171F               	bsf	31,6	;volatile
  1817                           
  1818                           ;Adc_int_.c: 7:     ADCON0bits.ADCS1 = 0;
  1819  1A40  139F               	bcf	31,7	;volatile
  1820  1A41                     l3224:
  1821                           
  1822                           ;Adc_int_.c: 8:     ADCON1 = 0;
  1823  1A41  1683               	bsf	3,5	;RP0=1, select bank1
  1824  1A42  1303               	bcf	3,6	;RP1=0, select bank1
  1825  1A43  019F               	clrf	31	;volatile
  1826  1A44                     l3226:
  1827                           
  1828                           ;Adc_int_.c: 10:     ADCON0bits.CHS = 0b0000;
  1829  1A44  30C3               	movlw	-61
  1830  1A45  1283               	bcf	3,5	;RP0=0, select bank0
  1831  1A46  1303               	bcf	3,6	;RP1=0, select bank0
  1832  1A47  059F               	andwf	31,f	;volatile
  1833  1A48                     l3228:
  1834                           
  1835                           ;Adc_int_.c: 12:     ADCON0bits.ADON = 1;
  1836  1A48  141F               	bsf	31,0	;volatile
  1837  1A49                     l3230:
  1838                           
  1839                           ;Adc_int_.c: 13:     PIE1bits.ADIE = 1;
  1840  1A49  1683               	bsf	3,5	;RP0=1, select bank1
  1841  1A4A  1303               	bcf	3,6	;RP1=0, select bank1
  1842  1A4B  170C               	bsf	12,6	;volatile
  1843  1A4C                     l3232:
  1844                           
  1845                           ;Adc_int_.c: 14:     PIR1bits.ADIF = 0;
  1846  1A4C  1283               	bcf	3,5	;RP0=0, select bank0
  1847  1A4D  1303               	bcf	3,6	;RP1=0, select bank0
  1848  1A4E  130C               	bcf	12,6	;volatile
  1849  1A4F                     l98:
  1850  1A4F  0008               	return
  1851  1A50                     __end_of_confADC:
  1852                           
  1853                           	psect	text4
  1854  1CD2                     __ptext4:	
  1855 ;; *************** function _Lcd_Write_String *****************
  1856 ;; Defined at:
  1857 ;;		line 62 in file "lcd.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  a               2    3[BANK3 ] PTR unsigned char 
  1860 ;;		 -> buffer(64), STR_3(4), STR_2(4), STR_1(4), 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  i               2    8[BANK3 ] int 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1872 ;;      Params:         0       0       0       2       0
  1873 ;;      Locals:         0       0       0       2       0
  1874 ;;      Temps:          0       0       0       3       0
  1875 ;;      Totals:         0       0       0       7       0
  1876 ;;Total ram usage:        7 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    7
  1879 ;; This function calls:
  1880 ;;		_Lcd_Write_Char
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _Lcd_Write_String
  1888  1CD2                     _Lcd_Write_String:
  1889  1CD2                     l3262:	
  1890                           ;incstack = 0
  1891 ;; using string table level
  1892                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1893                           
  1894                           
  1895                           ;lcd.c: 63:     int i;;lcd.c: 64:     for (i = 0; a[i] != '\0'; i++)
  1896  1CD2  1683               	bsf	3,5	;RP0=1, select bank3
  1897  1CD3  1703               	bsf	3,6	;RP1=1, select bank3
  1898  1CD4  01DC               	clrf	Lcd_Write_String@i^(0+384)
  1899  1CD5  01DD               	clrf	(Lcd_Write_String@i+1)^(0+384)
  1900  1CD6  2D03               	goto	l3268
  1901  1CD7                     l3264:
  1902                           
  1903                           ;lcd.c: 65:         Lcd_Write_Char(a[i]);
  1904  1CD7  1683               	bsf	3,5	;RP0=1, select bank3
  1905  1CD8  1703               	bsf	3,6	;RP1=1, select bank3
  1906  1CD9  085C               	movf	Lcd_Write_String@i^(0+384),w
  1907  1CDA  0757               	addwf	Lcd_Write_String@a^(0+384),w
  1908  1CDB  00DA               	movwf	(??_Lcd_Write_String+1)^(0+384)
  1909  1CDC  0858               	movf	(Lcd_Write_String@a+1)^(0+384),w
  1910  1CDD  00D9               	movwf	??_Lcd_Write_String^(0+384)
  1911  1CDE  1803               	skipnc
  1912  1CDF  0AD9               	incf	??_Lcd_Write_String^(0+384),f
  1913  1CE0  1FDC               	btfss	Lcd_Write_String@i^(0+384),7
  1914  1CE1  2CE3               	goto	u5310
  1915  1CE2  03D9               	decf	??_Lcd_Write_String^(0+384),f
  1916  1CE3                     u5310:
  1917  1CE3  1683               	bsf	3,5	;RP0=1, select bank3
  1918  1CE4  1703               	bsf	3,6	;RP1=1, select bank3
  1919  1CE5  0859               	movf	??_Lcd_Write_String^(0+384),w
  1920  1CE6  00DB               	movwf	((??_Lcd_Write_String+1)^(0+384)+1)
  1921  1CE7  085B               	movf	(??_Lcd_Write_String+2)^(0+384),w
  1922  1CE8  1283               	bcf	3,5	;RP0=0, select bank0
  1923  1CE9  1303               	bcf	3,6	;RP1=0, select bank0
  1924  1CEA  00FF               	movwf	btemp+1
  1925  1CEB  1683               	bsf	3,5	;RP0=1, select bank3
  1926  1CEC  1703               	bsf	3,6	;RP1=1, select bank3
  1927  1CED  085A               	movf	(??_Lcd_Write_String+1)^(0+384),w
  1928  1CEE  0084               	movwf	4
  1929  1CEF  1283               	bcf	3,5	;RP0=0, select bank0
  1930  1CF0  1303               	bcf	3,6	;RP1=0, select bank0
  1931  1CF1  160A  158A  2000  160A  158A  	fcall	stringtab
  1932  1CF6  160A  158A  2285  160A  158A  	fcall	_Lcd_Write_Char
  1933  1CFB                     l3266:
  1934  1CFB  3001               	movlw	1
  1935  1CFC  1683               	bsf	3,5	;RP0=1, select bank3
  1936  1CFD  1703               	bsf	3,6	;RP1=1, select bank3
  1937  1CFE  07DC               	addwf	Lcd_Write_String@i^(0+384),f
  1938  1CFF  1803               	skipnc
  1939  1D00  0ADD               	incf	(Lcd_Write_String@i+1)^(0+384),f
  1940  1D01  3000               	movlw	0
  1941  1D02  07DD               	addwf	(Lcd_Write_String@i+1)^(0+384),f
  1942  1D03                     l3268:
  1943  1D03  085C               	movf	Lcd_Write_String@i^(0+384),w
  1944  1D04  0757               	addwf	Lcd_Write_String@a^(0+384),w
  1945  1D05  00DA               	movwf	(??_Lcd_Write_String+1)^(0+384)
  1946  1D06  0858               	movf	(Lcd_Write_String@a+1)^(0+384),w
  1947  1D07  00D9               	movwf	??_Lcd_Write_String^(0+384)
  1948  1D08  1803               	skipnc
  1949  1D09  0AD9               	incf	??_Lcd_Write_String^(0+384),f
  1950  1D0A  1FDC               	btfss	Lcd_Write_String@i^(0+384),7
  1951  1D0B  2D0D               	goto	u5320
  1952  1D0C  03D9               	decf	??_Lcd_Write_String^(0+384),f
  1953  1D0D                     u5320:
  1954  1D0D  1683               	bsf	3,5	;RP0=1, select bank3
  1955  1D0E  1703               	bsf	3,6	;RP1=1, select bank3
  1956  1D0F  0859               	movf	??_Lcd_Write_String^(0+384),w
  1957  1D10  00DB               	movwf	((??_Lcd_Write_String+1)^(0+384)+1)
  1958  1D11  085B               	movf	(??_Lcd_Write_String+2)^(0+384),w
  1959  1D12  1283               	bcf	3,5	;RP0=0, select bank0
  1960  1D13  1303               	bcf	3,6	;RP1=0, select bank0
  1961  1D14  00FF               	movwf	btemp+1
  1962  1D15  1683               	bsf	3,5	;RP0=1, select bank3
  1963  1D16  1703               	bsf	3,6	;RP1=1, select bank3
  1964  1D17  085A               	movf	(??_Lcd_Write_String+1)^(0+384),w
  1965  1D18  0084               	movwf	4
  1966  1D19  1283               	bcf	3,5	;RP0=0, select bank0
  1967  1D1A  1303               	bcf	3,6	;RP1=0, select bank0
  1968  1D1B  160A  158A  2000  160A  158A  	fcall	stringtab
  1969  1D20  3A00               	xorlw	0
  1970  1D21  1D03               	skipz
  1971  1D22  2D24               	goto	u5331
  1972  1D23  2D25               	goto	u5330
  1973  1D24                     u5331:
  1974  1D24  2CD7               	goto	l3264
  1975  1D25                     u5330:
  1976  1D25                     l138:
  1977  1D25  0008               	return
  1978  1D26                     __end_of_Lcd_Write_String:
  1979                           
  1980                           	psect	text5
  1981  1A85                     __ptext5:	
  1982 ;; *************** function _Lcd_Write_Char *****************
  1983 ;; Defined at:
  1984 ;;		line 54 in file "lcd.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  a               1    wreg     unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  a               1    2[BANK3 ] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       0       0       0       0
  1999 ;;      Locals:         0       0       0       1       0
  2000 ;;      Temps:          0       0       0       1       0
  2001 ;;      Totals:         0       0       0       2       0
  2002 ;;Total ram usage:        2 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    6
  2005 ;; This function calls:
  2006 ;;		_Lcd_Port
  2007 ;; This function is called by:
  2008 ;;		_Lcd_Write_String
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _Lcd_Write_Char
  2014  1A85                     _Lcd_Write_Char:
  2015                           
  2016                           ;incstack = 0
  2017                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2018                           ;Lcd_Write_Char@a stored from wreg
  2019  1A85  1683               	bsf	3,5	;RP0=1, select bank3
  2020  1A86  1703               	bsf	3,6	;RP1=1, select bank3
  2021  1A87  00D6               	movwf	Lcd_Write_Char@a^(0+384)
  2022  1A88                     l2822:
  2023                           
  2024                           ;lcd.c: 55:     RE0 = 1;
  2025  1A88  1283               	bcf	3,5	;RP0=0, select bank0
  2026  1A89  1303               	bcf	3,6	;RP1=0, select bank0
  2027  1A8A  1409               	bsf	9,0	;volatile
  2028  1A8B                     l2824:
  2029                           
  2030                           ;lcd.c: 56:     Lcd_Port(a);
  2031  1A8B  1683               	bsf	3,5	;RP0=1, select bank3
  2032  1A8C  1703               	bsf	3,6	;RP1=1, select bank3
  2033  1A8D  0856               	movf	Lcd_Write_Char@a^(0+384),w
  2034  1A8E  160A  158A  2210  160A  158A  	fcall	_Lcd_Port
  2035  1A93                     l2826:
  2036                           
  2037                           ;lcd.c: 57:     RE1 = 1;
  2038  1A93  1283               	bcf	3,5	;RP0=0, select bank0
  2039  1A94  1303               	bcf	3,6	;RP1=0, select bank0
  2040  1A95  1489               	bsf	9,1	;volatile
  2041  1A96                     l2828:
  2042                           
  2043                           ;lcd.c: 58:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2044  1A96  3019               	movlw	25
  2045  1A97  1683               	bsf	3,5	;RP0=1, select bank3
  2046  1A98  1703               	bsf	3,6	;RP1=1, select bank3
  2047  1A99  00D5               	movwf	??_Lcd_Write_Char^(0+384)
  2048  1A9A                     u6137:
  2049  1A9A  0BD5               	decfsz	??_Lcd_Write_Char^(0+384),f
  2050  1A9B  2A9A               	goto	u6137
  2051  1A9C  2A9D               	nop2
  2052  1A9D                     l2830:
  2053                           
  2054                           ;lcd.c: 59:     RE1 = 0;
  2055  1A9D  1283               	bcf	3,5	;RP0=0, select bank0
  2056  1A9E  1303               	bcf	3,6	;RP1=0, select bank0
  2057  1A9F  1089               	bcf	9,1	;volatile
  2058  1AA0                     l132:
  2059  1AA0  0008               	return
  2060  1AA1                     __end_of_Lcd_Write_Char:
  2061                           
  2062                           	psect	text6
  2063  1B4A                     __ptext6:	
  2064 ;; *************** function _Lcd_Set_Cursor *****************
  2065 ;; Defined at:
  2066 ;;		line 25 in file "lcd.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  a               1    wreg     unsigned char 
  2069 ;;  b               1    4[BANK3 ] unsigned char 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  a               1    6[BANK3 ] unsigned char 
  2072 ;;  temp            1    7[BANK3 ] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0, pclath, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2082 ;;      Params:         0       0       0       1       0
  2083 ;;      Locals:         0       0       0       2       0
  2084 ;;      Temps:          0       0       0       1       0
  2085 ;;      Totals:         0       0       0       4       0
  2086 ;;Total ram usage:        4 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    7
  2089 ;; This function calls:
  2090 ;;		_Lcd_Cmd
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _Lcd_Set_Cursor
  2098  1B4A                     _Lcd_Set_Cursor:
  2099                           
  2100                           ;incstack = 0
  2101                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2102                           ;Lcd_Set_Cursor@a stored from wreg
  2103  1B4A  1683               	bsf	3,5	;RP0=1, select bank3
  2104  1B4B  1703               	bsf	3,6	;RP1=1, select bank3
  2105  1B4C  00DA               	movwf	Lcd_Set_Cursor@a^(0+384)
  2106  1B4D                     l3250:
  2107                           
  2108                           ;lcd.c: 26:     char temp;;lcd.c: 27:     if (a == 1) {
  2109  1B4D  035A               	decf	Lcd_Set_Cursor@a^(0+384),w
  2110  1B4E  1D03               	btfss	3,2
  2111  1B4F  2B51               	goto	u5291
  2112  1B50  2B52               	goto	u5290
  2113  1B51                     u5291:
  2114  1B51  2B5E               	goto	l3256
  2115  1B52                     u5290:
  2116  1B52                     l3252:
  2117                           
  2118                           ;lcd.c: 28:         temp = 0x80 + b - 1;
  2119  1B52  0858               	movf	Lcd_Set_Cursor@b^(0+384),w
  2120  1B53  3E7F               	addlw	127
  2121  1B54  00D9               	movwf	??_Lcd_Set_Cursor^(0+384)
  2122  1B55  0859               	movf	??_Lcd_Set_Cursor^(0+384),w
  2123  1B56  00DB               	movwf	Lcd_Set_Cursor@temp^(0+384)
  2124  1B57                     l3254:
  2125                           
  2126                           ;lcd.c: 29:         Lcd_Cmd(temp);
  2127  1B57  085B               	movf	Lcd_Set_Cursor@temp^(0+384),w
  2128  1B58  160A  158A  22BD  160A  158A  	fcall	_Lcd_Cmd
  2129                           
  2130                           ;lcd.c: 30:     } else if (a == 2) {
  2131  1B5D  2B6F               	goto	l126
  2132  1B5E                     l3256:
  2133  1B5E  3002               	movlw	2
  2134  1B5F  065A               	xorwf	Lcd_Set_Cursor@a^(0+384),w
  2135  1B60  1D03               	btfss	3,2
  2136  1B61  2B63               	goto	u5301
  2137  1B62  2B64               	goto	u5300
  2138  1B63                     u5301:
  2139  1B63  2B6F               	goto	l126
  2140  1B64                     u5300:
  2141  1B64                     l3258:
  2142                           
  2143                           ;lcd.c: 31:         temp = 0xC0 + b - 1;
  2144  1B64  0858               	movf	Lcd_Set_Cursor@b^(0+384),w
  2145  1B65  3EBF               	addlw	191
  2146  1B66  00D9               	movwf	??_Lcd_Set_Cursor^(0+384)
  2147  1B67  0859               	movf	??_Lcd_Set_Cursor^(0+384),w
  2148  1B68  00DB               	movwf	Lcd_Set_Cursor@temp^(0+384)
  2149  1B69                     l3260:
  2150                           
  2151                           ;lcd.c: 32:         Lcd_Cmd(temp);
  2152  1B69  085B               	movf	Lcd_Set_Cursor@temp^(0+384),w
  2153  1B6A  160A  158A  22BD  160A  158A  	fcall	_Lcd_Cmd
  2154  1B6F                     l126:
  2155  1B6F  0008               	return
  2156  1B70                     __end_of_Lcd_Set_Cursor:
  2157                           
  2158                           	psect	text7
  2159  1E4E                     __ptext7:	
  2160 ;; *************** function _Lcd_Init *****************
  2161 ;; Defined at:
  2162 ;;		line 36 in file "lcd.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0, pclath, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2176 ;;      Params:         0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0
  2178 ;;      Temps:          0       0       0       3       0
  2179 ;;      Totals:         0       0       0       3       0
  2180 ;;Total ram usage:        3 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    7
  2183 ;; This function calls:
  2184 ;;		_Lcd_Cmd
  2185 ;;		_Lcd_Port
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           
  2192                           ;psect for function _Lcd_Init
  2193  1E4E                     _Lcd_Init:
  2194  1E4E                     l3234:	
  2195                           ;incstack = 0
  2196                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2197                           
  2198                           
  2199                           ;lcd.c: 37:     _delay((unsigned long)((200)*(8000000/4000.0)));
  2200  1E4E  3003               	movlw	3
  2201  1E4F  1683               	bsf	3,5	;RP0=1, select bank3
  2202  1E50  1703               	bsf	3,6	;RP1=1, select bank3
  2203  1E51  00DA               	movwf	(??_Lcd_Init^(0+384)+2)
  2204  1E52  3008               	movlw	8
  2205  1E53  00D9               	movwf	(??_Lcd_Init^(0+384)+1)
  2206  1E54  3076               	movlw	118
  2207  1E55  00D8               	movwf	??_Lcd_Init^(0+384)
  2208  1E56                     u6147:
  2209  1E56  0BD8               	decfsz	??_Lcd_Init^(0+384),f
  2210  1E57  2E56               	goto	u6147
  2211  1E58  0BD9               	decfsz	(??_Lcd_Init^(0+384)+1),f
  2212  1E59  2E56               	goto	u6147
  2213  1E5A  0BDA               	decfsz	(??_Lcd_Init^(0+384)+2),f
  2214  1E5B  2E56               	goto	u6147
  2215  1E5C  0000               	nop
  2216  1E5D                     l3236:
  2217                           
  2218                           ;lcd.c: 38:     Lcd_Port(0x00);
  2219  1E5D  3000               	movlw	0
  2220  1E5E  160A  158A  2210  160A  158A  	fcall	_Lcd_Port
  2221  1E63                     l3238:
  2222                           
  2223                           ;lcd.c: 39:     _delay((unsigned long)((25)*(8000000/4000.0)));
  2224  1E63  3041               	movlw	65
  2225  1E64  1683               	bsf	3,5	;RP0=1, select bank3
  2226  1E65  1703               	bsf	3,6	;RP1=1, select bank3
  2227  1E66  00D9               	movwf	(??_Lcd_Init^(0+384)+1)
  2228  1E67  30ED               	movlw	237
  2229  1E68  00D8               	movwf	??_Lcd_Init^(0+384)
  2230  1E69                     u6157:
  2231  1E69  0BD8               	decfsz	??_Lcd_Init^(0+384),f
  2232  1E6A  2E69               	goto	u6157
  2233  1E6B  0BD9               	decfsz	(??_Lcd_Init^(0+384)+1),f
  2234  1E6C  2E69               	goto	u6157
  2235  1E6D  2E6E               	nop2
  2236                           
  2237                           ;lcd.c: 40:     Lcd_Cmd(0x30);
  2238  1E6E  3030               	movlw	48
  2239  1E6F  160A  158A  22BD  160A  158A  	fcall	_Lcd_Cmd
  2240  1E74                     l3240:
  2241                           
  2242                           ;lcd.c: 41:     _delay((unsigned long)((7)*(8000000/4000.0)));
  2243  1E74  3013               	movlw	19
  2244  1E75  1683               	bsf	3,5	;RP0=1, select bank3
  2245  1E76  1703               	bsf	3,6	;RP1=1, select bank3
  2246  1E77  00D9               	movwf	(??_Lcd_Init^(0+384)+1)
  2247  1E78  302C               	movlw	44
  2248  1E79  00D8               	movwf	??_Lcd_Init^(0+384)
  2249  1E7A                     u6167:
  2250  1E7A  0BD8               	decfsz	??_Lcd_Init^(0+384),f
  2251  1E7B  2E7A               	goto	u6167
  2252  1E7C  0BD9               	decfsz	(??_Lcd_Init^(0+384)+1),f
  2253  1E7D  2E7A               	goto	u6167
  2254  1E7E  0000               	nop
  2255  1E7F                     l3242:
  2256                           
  2257                           ;lcd.c: 42:     Lcd_Cmd(0x30);
  2258  1E7F  3030               	movlw	48
  2259  1E80  160A  158A  22BD  160A  158A  	fcall	_Lcd_Cmd
  2260                           
  2261                           ;lcd.c: 43:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2262  1E85  3084               	movlw	132
  2263  1E86  1683               	bsf	3,5	;RP0=1, select bank3
  2264  1E87  1703               	bsf	3,6	;RP1=1, select bank3
  2265  1E88  00D8               	movwf	??_Lcd_Init^(0+384)
  2266  1E89                     u6177:
  2267  1E89  0BD8               	decfsz	??_Lcd_Init^(0+384),f
  2268  1E8A  2E89               	goto	u6177
  2269  1E8B  0000               	nop
  2270  1E8C                     l3244:
  2271                           
  2272                           ;lcd.c: 44:     Lcd_Cmd(0x30);
  2273  1E8C  3030               	movlw	48
  2274  1E8D  160A  158A  22BD  160A  158A  	fcall	_Lcd_Cmd
  2275  1E92                     l3246:
  2276                           
  2277                           ;lcd.c: 45:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2278  1E92  3084               	movlw	132
  2279  1E93  1683               	bsf	3,5	;RP0=1, select bank3
  2280  1E94  1703               	bsf	3,6	;RP1=1, select bank3
  2281  1E95  00D8               	movwf	??_Lcd_Init^(0+384)
  2282  1E96                     u6187:
  2283  1E96  0BD8               	decfsz	??_Lcd_Init^(0+384),f
  2284  1E97  2E96               	goto	u6187
  2285  1E98  0000               	nop
  2286                           
  2287                           ;lcd.c: 47:     Lcd_Cmd(0x38);
  2288  1E99  3038               	movlw	56
  2289  1E9A  160A  158A  22BD  160A  158A  	fcall	_Lcd_Cmd
  2290                           
  2291                           ;lcd.c: 48:     Lcd_Cmd(0x10);
  2292  1E9F  3010               	movlw	16
  2293  1EA0  160A  158A  22BD  160A  158A  	fcall	_Lcd_Cmd
  2294                           
  2295                           ;lcd.c: 49:     Lcd_Cmd(0x01);
  2296  1EA5  3001               	movlw	1
  2297  1EA6  160A  158A  22BD  160A  158A  	fcall	_Lcd_Cmd
  2298                           
  2299                           ;lcd.c: 50:     Lcd_Cmd(0x06);
  2300  1EAB  3006               	movlw	6
  2301  1EAC  160A  158A  22BD  160A  158A  	fcall	_Lcd_Cmd
  2302                           
  2303                           ;lcd.c: 51:     Lcd_Cmd(0x0C);
  2304  1EB1  300C               	movlw	12
  2305  1EB2  160A  158A  22BD  160A  158A  	fcall	_Lcd_Cmd
  2306  1EB7                     l129:
  2307  1EB7  0008               	return
  2308  1EB8                     __end_of_Lcd_Init:
  2309                           
  2310                           	psect	text8
  2311  07F0                     __ptext8:	
  2312 ;; *************** function _Lcd_Clear *****************
  2313 ;; Defined at:
  2314 ;;		line 20 in file "lcd.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2328 ;;      Params:         0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0
  2331 ;;      Totals:         0       0       0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    7
  2335 ;; This function calls:
  2336 ;;		_Lcd_Cmd
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _Lcd_Clear
  2344  07F0                     _Lcd_Clear:
  2345  07F0                     l3248:	
  2346                           ;incstack = 0
  2347                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2348                           
  2349                           
  2350                           ;lcd.c: 21:     Lcd_Cmd(0);
  2351  07F0  3000               	movlw	0
  2352  07F1  160A  158A  22BD  120A  118A  	fcall	_Lcd_Cmd
  2353                           
  2354                           ;lcd.c: 22:     Lcd_Cmd(1);
  2355  07F6  3001               	movlw	1
  2356  07F7  160A  158A  22BD  120A  118A  	fcall	_Lcd_Cmd
  2357  07FC                     l120:
  2358  07FC  0008               	return
  2359  07FD                     __end_of_Lcd_Clear:
  2360                           
  2361                           	psect	text9
  2362  1ABD                     __ptext9:	
  2363 ;; *************** function _Lcd_Cmd *****************
  2364 ;; Defined at:
  2365 ;;		line 12 in file "lcd.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  a               1    wreg     unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  a               1    3[BANK3 ] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         0       0       0       0       0
  2380 ;;      Locals:         0       0       0       1       0
  2381 ;;      Temps:          0       0       0       2       0
  2382 ;;      Totals:         0       0       0       3       0
  2383 ;;Total ram usage:        3 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    6
  2386 ;; This function calls:
  2387 ;;		_Lcd_Port
  2388 ;; This function is called by:
  2389 ;;		_Lcd_Clear
  2390 ;;		_Lcd_Set_Cursor
  2391 ;;		_Lcd_Init
  2392 ;;		_Lcd_Shift_Right
  2393 ;;		_Lcd_Shift_Left
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           
  2398                           ;psect for function _Lcd_Cmd
  2399  1ABD                     _Lcd_Cmd:
  2400                           
  2401                           ;incstack = 0
  2402                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2403                           ;Lcd_Cmd@a stored from wreg
  2404  1ABD  1683               	bsf	3,5	;RP0=1, select bank3
  2405  1ABE  1703               	bsf	3,6	;RP1=1, select bank3
  2406  1ABF  00D7               	movwf	Lcd_Cmd@a^(0+384)
  2407  1AC0                     l2812:
  2408                           
  2409                           ;lcd.c: 13:     RE0 = 0;
  2410  1AC0  1283               	bcf	3,5	;RP0=0, select bank0
  2411  1AC1  1303               	bcf	3,6	;RP1=0, select bank0
  2412  1AC2  1009               	bcf	9,0	;volatile
  2413  1AC3                     l2814:
  2414                           
  2415                           ;lcd.c: 14:     Lcd_Port(a);
  2416  1AC3  1683               	bsf	3,5	;RP0=1, select bank3
  2417  1AC4  1703               	bsf	3,6	;RP1=1, select bank3
  2418  1AC5  0857               	movf	Lcd_Cmd@a^(0+384),w
  2419  1AC6  160A  158A  2210  160A  158A  	fcall	_Lcd_Port
  2420  1ACB                     l2816:
  2421                           
  2422                           ;lcd.c: 15:     RE1 = 1;
  2423  1ACB  1283               	bcf	3,5	;RP0=0, select bank0
  2424  1ACC  1303               	bcf	3,6	;RP1=0, select bank0
  2425  1ACD  1489               	bsf	9,1	;volatile
  2426  1ACE                     l2818:
  2427                           
  2428                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2429  1ACE  300B               	movlw	11
  2430  1ACF  1683               	bsf	3,5	;RP0=1, select bank3
  2431  1AD0  1703               	bsf	3,6	;RP1=1, select bank3
  2432  1AD1  00D6               	movwf	(??_Lcd_Cmd^(0+384)+1)
  2433  1AD2  3061               	movlw	97
  2434  1AD3  00D5               	movwf	??_Lcd_Cmd^(0+384)
  2435  1AD4                     u6197:
  2436  1AD4  0BD5               	decfsz	??_Lcd_Cmd^(0+384),f
  2437  1AD5  2AD4               	goto	u6197
  2438  1AD6  0BD6               	decfsz	(??_Lcd_Cmd^(0+384)+1),f
  2439  1AD7  2AD4               	goto	u6197
  2440  1AD8  2AD9               	nop2
  2441  1AD9                     l2820:
  2442                           
  2443                           ;lcd.c: 17:     RE1 = 0;
  2444  1AD9  1283               	bcf	3,5	;RP0=0, select bank0
  2445  1ADA  1303               	bcf	3,6	;RP1=0, select bank0
  2446  1ADB  1089               	bcf	9,1	;volatile
  2447  1ADC                     l117:
  2448  1ADC  0008               	return
  2449  1ADD                     __end_of_Lcd_Cmd:
  2450                           
  2451                           	psect	text10
  2452  1A10                     __ptext10:	
  2453 ;; *************** function _Lcd_Port *****************
  2454 ;; Defined at:
  2455 ;;		line 8 in file "lcd.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  a               1    wreg     unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  a               1    0[BANK3 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       0       0       0
  2470 ;;      Locals:         0       0       0       1       0
  2471 ;;      Temps:          0       0       0       0       0
  2472 ;;      Totals:         0       0       0       1       0
  2473 ;;Total ram usage:        1 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    5
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_Lcd_Cmd
  2480 ;;		_Lcd_Init
  2481 ;;		_Lcd_Write_Char
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function _Lcd_Port
  2487  1A10                     _Lcd_Port:
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _Lcd_Port: [wreg]
  2491                           ;Lcd_Port@a stored from wreg
  2492  1A10  1683               	bsf	3,5	;RP0=1, select bank3
  2493  1A11  1703               	bsf	3,6	;RP1=1, select bank3
  2494  1A12  00D4               	movwf	Lcd_Port@a^(0+384)
  2495  1A13                     l2344:
  2496                           
  2497                           ;lcd.c: 9:     PORTD = a;
  2498  1A13  0854               	movf	Lcd_Port@a^(0+384),w
  2499  1A14  1283               	bcf	3,5	;RP0=0, select bank0
  2500  1A15  1303               	bcf	3,6	;RP1=0, select bank0
  2501  1A16  0088               	movwf	8	;volatile
  2502  1A17                     l114:
  2503  1A17  0008               	return
  2504  1A18                     __end_of_Lcd_Port:
  2505                           
  2506                           	psect	text11
  2507  0686                     __ptext11:	
  2508 ;; *************** function _ISR *****************
  2509 ;; Defined at:
  2510 ;;		line 118 in file "main.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0
  2526 ;;      Temps:          0       0       8       0       0
  2527 ;;      Totals:         0       0       8       0       0
  2528 ;;Total ram usage:        8 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    4
  2531 ;; This function calls:
  2532 ;;		___fldiv
  2533 ;;		___flmul
  2534 ;;		___xxtofl
  2535 ;;		_sprintf
  2536 ;;		i1_Lcd_Set_Cursor
  2537 ;;		i1_Lcd_Write_String
  2538 ;; This function is called by:
  2539 ;;		Interrupt level 1
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           
  2544                           ;psect for function _ISR
  2545  0686                     _ISR:
  2546  0686                     i1l3686:
  2547                           
  2548                           ;main.c: 120:     if (PIR1bits.ADIF == 1) {
  2549  0686  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0687  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0688  1F0C               	btfss	12,6	;volatile
  2552  0689  2E8B               	goto	u608_21
  2553  068A  2E8C               	goto	u608_20
  2554  068B                     u608_21:
  2555  068B  2FB5               	goto	i1l3720
  2556  068C                     u608_20:
  2557  068C                     i1l3688:
  2558                           
  2559                           ;main.c: 121:         if (pot == 0) {
  2560  068C  1683               	bsf	3,5	;RP0=1, select bank3
  2561  068D  1703               	bsf	3,6	;RP1=1, select bank3
  2562  068E  0812               	movf	_pot^(0+384),w
  2563  068F  0413               	iorwf	(_pot+1)^(0+384),w
  2564  0690  1D03               	btfss	3,2
  2565  0691  2E93               	goto	u609_21
  2566  0692  2E94               	goto	u609_20
  2567  0693                     u609_21:
  2568  0693  2F27               	goto	i1l3704
  2569  0694                     u609_20:
  2570  0694                     i1l3690:
  2571                           
  2572                           ;main.c: 122:             val_pot1 = ADRESH;
  2573  0694  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0695  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0696  081E               	movf	30,w	;volatile
  2576  0697  1683               	bsf	3,5	;RP0=1, select bank1
  2577  0698  1303               	bcf	3,6	;RP1=0, select bank1
  2578  0699  00C3               	movwf	??_ISR^(0+128)
  2579  069A  0843               	movf	??_ISR^(0+128),w
  2580  069B  00D0               	movwf	_val_pot1^(0+128)
  2581  069C                     i1l3692:
  2582                           
  2583                           ;main.c: 123:             adc_fin = 0;
  2584  069C  1683               	bsf	3,5	;RP0=1, select bank3
  2585  069D  1703               	bsf	3,6	;RP1=1, select bank3
  2586  069E  0190               	clrf	_adc_fin^(0+384)
  2587  069F  0191               	clrf	(_adc_fin+1)^(0+384)
  2588  06A0                     i1l3694:
  2589                           
  2590                           ;main.c: 124:             pot = 1;
  2591  06A0  3001               	movlw	1
  2592  06A1  0092               	movwf	_pot^(0+384)
  2593  06A2  3000               	movlw	0
  2594  06A3  0093               	movwf	(_pot^(0+384)+1)
  2595  06A4                     i1l3696:
  2596                           
  2597                           ;main.c: 125:             voltaje = (val_pot1 * 5.0) / 255;
  2598  06A4  3043               	movlw	67
  2599  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2600  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2601  06A7  00C1               	movwf	___fldiv@a+3
  2602  06A8  307F               	movlw	127
  2603  06A9  00C0               	movwf	___fldiv@a+2
  2604  06AA  3000               	movlw	0
  2605  06AB  00BF               	movwf	___fldiv@a+1
  2606  06AC  3000               	movlw	0
  2607  06AD  00BE               	movwf	___fldiv@a
  2608  06AE  3040               	movlw	64
  2609  06AF  00A7               	movwf	___flmul@b+3
  2610  06B0  30A0               	movlw	160
  2611  06B1  00A6               	movwf	___flmul@b+2
  2612  06B2  3000               	movlw	0
  2613  06B3  00A5               	movwf	___flmul@b+1
  2614  06B4  3000               	movlw	0
  2615  06B5  00A4               	movwf	___flmul@b
  2616  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  2617  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  2618  06B8  0850               	movf	_val_pot1^(0+128),w
  2619  06B9  00C3               	movwf	??_ISR^(0+128)
  2620  06BA  01C4               	clrf	(??_ISR^(0+128)+1)
  2621  06BB  01C5               	clrf	(??_ISR^(0+128)+2)
  2622  06BC  01C6               	clrf	(??_ISR^(0+128)+3)
  2623  06BD  0846               	movf	(??_ISR+3)^(0+128),w
  2624  06BE  00F3               	movwf	___xxtofl@val+3
  2625  06BF  0845               	movf	(??_ISR+2)^(0+128),w
  2626  06C0  00F2               	movwf	___xxtofl@val+2
  2627  06C1  0844               	movf	(??_ISR+1)^(0+128),w
  2628  06C2  00F1               	movwf	___xxtofl@val+1
  2629  06C3  0843               	movf	??_ISR^(0+128),w
  2630  06C4  00F0               	movwf	___xxtofl@val
  2631  06C5  3001               	movlw	1
  2632  06C6  160A  118A  2019  120A  118A  	fcall	___xxtofl
  2633  06CB  0873               	movf	?___xxtofl+3,w
  2634  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  2635  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  2636  06CE  00AB               	movwf	___flmul@a+3
  2637  06CF  0872               	movf	?___xxtofl+2,w
  2638  06D0  00AA               	movwf	___flmul@a+2
  2639  06D1  0871               	movf	?___xxtofl+1,w
  2640  06D2  00A9               	movwf	___flmul@a+1
  2641  06D3  0870               	movf	?___xxtofl,w
  2642  06D4  00A8               	movwf	___flmul@a
  2643  06D5  120A  158A  249F  120A  118A  	fcall	___flmul
  2644  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  2645  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  2646  06DC  0827               	movf	?___flmul+3,w
  2647  06DD  00C5               	movwf	___fldiv@b+3
  2648  06DE  0826               	movf	?___flmul+2,w
  2649  06DF  00C4               	movwf	___fldiv@b+2
  2650  06E0  0825               	movf	?___flmul+1,w
  2651  06E1  00C3               	movwf	___fldiv@b+1
  2652  06E2  0824               	movf	?___flmul,w
  2653  06E3  00C2               	movwf	___fldiv@b
  2654  06E4  160A  118A  2190  120A  118A  	fcall	___fldiv
  2655  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  2656  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  2657  06EB  0841               	movf	?___fldiv+3,w
  2658  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  2659  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  2660  06EE  00CE               	movwf	(_voltaje+3)^(0+128)
  2661  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  2662  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  2663  06F1  0840               	movf	?___fldiv+2,w
  2664  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  2665  06F3  1303               	bcf	3,6	;RP1=0, select bank1
  2666  06F4  00CD               	movwf	(_voltaje+2)^(0+128)
  2667  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  2668  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  2669  06F7  083F               	movf	?___fldiv+1,w
  2670  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  2671  06F9  1303               	bcf	3,6	;RP1=0, select bank1
  2672  06FA  00CC               	movwf	(_voltaje+1)^(0+128)
  2673  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  2674  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  2675  06FD  083E               	movf	?___fldiv,w
  2676  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  2677  06FF  1303               	bcf	3,6	;RP1=0, select bank1
  2678  0700  00CB               	movwf	_voltaje^(0+128)
  2679  0701                     i1l3698:
  2680                           
  2681                           ;main.c: 126:             Lcd_Set_Cursor(2, 1);
  2682  0701  01F4               	clrf	i1Lcd_Set_Cursor@b
  2683  0702  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2684  0703  3002               	movlw	2
  2685  0704  160A  158A  2301  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2686  0709                     i1l3700:
  2687                           
  2688                           ;main.c: 127:             sprintf(buffer, "%.2f", voltaje);
  2689  0709  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2690  070A  1683               	bsf	3,5	;RP0=1, select bank1
  2691  070B  1303               	bcf	3,6	;RP1=0, select bank1
  2692  070C  00C3               	movwf	??_ISR^(0+128)
  2693  070D  0843               	movf	??_ISR^(0+128),w
  2694  070E  00A0               	movwf	sprintf@f^(0+128)
  2695  070F  084E               	movf	(_voltaje+3)^(0+128),w
  2696  0710  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2697  0711  084D               	movf	(_voltaje+2)^(0+128),w
  2698  0712  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2699  0713  084C               	movf	(_voltaje+1)^(0+128),w
  2700  0714  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2701  0715  084B               	movf	_voltaje^(0+128),w
  2702  0716  00A1               	movwf	(?_sprintf^(0+128)+1)
  2703  0717  3094               	movlw	(low (_buffer| (0+256)))& (0+255)
  2704  0718  120A  118A  202E  120A  118A  	fcall	_sprintf
  2705  071D                     i1l3702:
  2706                           
  2707                           ;main.c: 128:             Lcd_Write_String(buffer);
  2708  071D  3094               	movlw	(low (_buffer| (0+256)))& (0+255)
  2709  071E  00F3               	movwf	i1Lcd_Write_String@a
  2710  071F  3001               	movlw	1
  2711  0720  00F4               	movwf	i1Lcd_Write_String@a+1
  2712  0721  160A  158A  23AA  120A  118A  	fcall	i1_Lcd_Write_String
  2713                           
  2714                           ;main.c: 130:         }
  2715  0726  2FB5               	goto	i1l3720
  2716  0727                     i1l3704:
  2717  0727  0312               	decf	_pot^(0+384),w
  2718  0728  0413               	iorwf	(_pot+1)^(0+384),w
  2719  0729  1D03               	btfss	3,2
  2720  072A  2F2C               	goto	u610_21
  2721  072B  2F2D               	goto	u610_20
  2722  072C                     u610_21:
  2723  072C  2FB5               	goto	i1l3720
  2724  072D                     u610_20:
  2725  072D                     i1l3706:
  2726                           
  2727                           ;main.c: 132:             val_pot2 = ADRESH;
  2728  072D  1283               	bcf	3,5	;RP0=0, select bank0
  2729  072E  1303               	bcf	3,6	;RP1=0, select bank0
  2730  072F  081E               	movf	30,w	;volatile
  2731  0730  1683               	bsf	3,5	;RP0=1, select bank1
  2732  0731  1303               	bcf	3,6	;RP1=0, select bank1
  2733  0732  00C3               	movwf	??_ISR^(0+128)
  2734  0733  0843               	movf	??_ISR^(0+128),w
  2735  0734  00CF               	movwf	_val_pot2^(0+128)
  2736  0735                     i1l3708:
  2737                           
  2738                           ;main.c: 133:             adc_fin = 0;
  2739  0735  1683               	bsf	3,5	;RP0=1, select bank3
  2740  0736  1703               	bsf	3,6	;RP1=1, select bank3
  2741  0737  0190               	clrf	_adc_fin^(0+384)
  2742  0738  0191               	clrf	(_adc_fin+1)^(0+384)
  2743  0739                     i1l3710:
  2744                           
  2745                           ;main.c: 134:             pot = 0;
  2746  0739  0192               	clrf	_pot^(0+384)
  2747  073A  0193               	clrf	(_pot+1)^(0+384)
  2748  073B                     i1l3712:
  2749                           
  2750                           ;main.c: 135:             voltaje = (val_pot2 * 5.0) / 255;
  2751  073B  3043               	movlw	67
  2752  073C  1283               	bcf	3,5	;RP0=0, select bank0
  2753  073D  1303               	bcf	3,6	;RP1=0, select bank0
  2754  073E  00C1               	movwf	___fldiv@a+3
  2755  073F  307F               	movlw	127
  2756  0740  00C0               	movwf	___fldiv@a+2
  2757  0741  3000               	movlw	0
  2758  0742  00BF               	movwf	___fldiv@a+1
  2759  0743  3000               	movlw	0
  2760  0744  00BE               	movwf	___fldiv@a
  2761  0745  3040               	movlw	64
  2762  0746  00A7               	movwf	___flmul@b+3
  2763  0747  30A0               	movlw	160
  2764  0748  00A6               	movwf	___flmul@b+2
  2765  0749  3000               	movlw	0
  2766  074A  00A5               	movwf	___flmul@b+1
  2767  074B  3000               	movlw	0
  2768  074C  00A4               	movwf	___flmul@b
  2769  074D  1683               	bsf	3,5	;RP0=1, select bank1
  2770  074E  1303               	bcf	3,6	;RP1=0, select bank1
  2771  074F  084F               	movf	_val_pot2^(0+128),w
  2772  0750  00C3               	movwf	??_ISR^(0+128)
  2773  0751  01C4               	clrf	(??_ISR^(0+128)+1)
  2774  0752  01C5               	clrf	(??_ISR^(0+128)+2)
  2775  0753  01C6               	clrf	(??_ISR^(0+128)+3)
  2776  0754  0846               	movf	(??_ISR+3)^(0+128),w
  2777  0755  00F3               	movwf	___xxtofl@val+3
  2778  0756  0845               	movf	(??_ISR+2)^(0+128),w
  2779  0757  00F2               	movwf	___xxtofl@val+2
  2780  0758  0844               	movf	(??_ISR+1)^(0+128),w
  2781  0759  00F1               	movwf	___xxtofl@val+1
  2782  075A  0843               	movf	??_ISR^(0+128),w
  2783  075B  00F0               	movwf	___xxtofl@val
  2784  075C  3001               	movlw	1
  2785  075D  160A  118A  2019  120A  118A  	fcall	___xxtofl
  2786  0762  0873               	movf	?___xxtofl+3,w
  2787  0763  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0764  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0765  00AB               	movwf	___flmul@a+3
  2790  0766  0872               	movf	?___xxtofl+2,w
  2791  0767  00AA               	movwf	___flmul@a+2
  2792  0768  0871               	movf	?___xxtofl+1,w
  2793  0769  00A9               	movwf	___flmul@a+1
  2794  076A  0870               	movf	?___xxtofl,w
  2795  076B  00A8               	movwf	___flmul@a
  2796  076C  120A  158A  249F  120A  118A  	fcall	___flmul
  2797  0771  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0772  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0773  0827               	movf	?___flmul+3,w
  2800  0774  00C5               	movwf	___fldiv@b+3
  2801  0775  0826               	movf	?___flmul+2,w
  2802  0776  00C4               	movwf	___fldiv@b+2
  2803  0777  0825               	movf	?___flmul+1,w
  2804  0778  00C3               	movwf	___fldiv@b+1
  2805  0779  0824               	movf	?___flmul,w
  2806  077A  00C2               	movwf	___fldiv@b
  2807  077B  160A  118A  2190  120A  118A  	fcall	___fldiv
  2808  0780  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0781  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0782  0841               	movf	?___fldiv+3,w
  2811  0783  1683               	bsf	3,5	;RP0=1, select bank1
  2812  0784  1303               	bcf	3,6	;RP1=0, select bank1
  2813  0785  00CE               	movwf	(_voltaje+3)^(0+128)
  2814  0786  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0787  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0788  0840               	movf	?___fldiv+2,w
  2817  0789  1683               	bsf	3,5	;RP0=1, select bank1
  2818  078A  1303               	bcf	3,6	;RP1=0, select bank1
  2819  078B  00CD               	movwf	(_voltaje+2)^(0+128)
  2820  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2821  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2822  078E  083F               	movf	?___fldiv+1,w
  2823  078F  1683               	bsf	3,5	;RP0=1, select bank1
  2824  0790  1303               	bcf	3,6	;RP1=0, select bank1
  2825  0791  00CC               	movwf	(_voltaje+1)^(0+128)
  2826  0792  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0793  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0794  083E               	movf	?___fldiv,w
  2829  0795  1683               	bsf	3,5	;RP0=1, select bank1
  2830  0796  1303               	bcf	3,6	;RP1=0, select bank1
  2831  0797  00CB               	movwf	_voltaje^(0+128)
  2832  0798                     i1l3714:
  2833                           
  2834                           ;main.c: 136:             Lcd_Set_Cursor(2, 1);
  2835  0798  01F4               	clrf	i1Lcd_Set_Cursor@b
  2836  0799  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2837  079A  3002               	movlw	2
  2838  079B  160A  158A  2301  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2839  07A0                     i1l3716:
  2840                           
  2841                           ;main.c: 137:             sprintf(buffer, "%.2f", voltaje);
  2842  07A0  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2843  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  2844  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  2845  07A3  00C3               	movwf	??_ISR^(0+128)
  2846  07A4  0843               	movf	??_ISR^(0+128),w
  2847  07A5  00A0               	movwf	sprintf@f^(0+128)
  2848  07A6  084E               	movf	(_voltaje+3)^(0+128),w
  2849  07A7  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2850  07A8  084D               	movf	(_voltaje+2)^(0+128),w
  2851  07A9  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2852  07AA  084C               	movf	(_voltaje+1)^(0+128),w
  2853  07AB  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2854  07AC  084B               	movf	_voltaje^(0+128),w
  2855  07AD  00A1               	movwf	(?_sprintf^(0+128)+1)
  2856  07AE  3094               	movlw	(low (_buffer| (0+256)))& (0+255)
  2857  07AF  120A  118A  202E  120A  118A  	fcall	_sprintf
  2858  07B4  2F1D               	goto	i1l3702
  2859  07B5                     i1l3720:
  2860                           
  2861                           ;main.c: 141:     PIR1bits.ADIF = 0;
  2862  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  2863  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  2864  07B7  130C               	bcf	12,6	;volatile
  2865  07B8                     i1l87:
  2866  07B8  1683               	bsf	3,5	;RP0=1, select bank1
  2867  07B9  1303               	bcf	3,6	;RP1=0, select bank1
  2868  07BA  084A               	movf	(??_ISR+7)^(0+128),w
  2869  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  2870  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  2871  07BD  00FF               	movwf	btemp+1
  2872  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  2873  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  2874  07C0  0849               	movf	(??_ISR+6)^(0+128),w
  2875  07C1  008A               	movwf	10
  2876  07C2  0848               	movf	(??_ISR+5)^(0+128),w
  2877  07C3  0084               	movwf	4
  2878  07C4  0E47               	swapf	(??_ISR+4)^(0+128),w
  2879  07C5  0083               	movwf	3
  2880  07C6  0EFE               	swapf	btemp,f
  2881  07C7  0E7E               	swapf	btemp,w
  2882  07C8  0009               	retfie
  2883  07C9                     __end_of_ISR:
  2884                           
  2885                           	psect	intentry
  2886  0004                     __pintentry:	
  2887                           ;incstack = 0
  2888                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2889                           
  2890  0004                     interrupt_function:
  2891  007E                     saved_w	set	btemp
  2892  0004  00FE               	movwf	btemp
  2893  0005  0E03               	swapf	3,w
  2894  0006  1683               	bsf	3,5	;RP0=1, select bank1
  2895  0007  1303               	bcf	3,6	;RP1=0, select bank1
  2896  0008  00C7               	movwf	(??_ISR+4)^(0+128)
  2897  0009  0804               	movf	4,w
  2898  000A  00C8               	movwf	(??_ISR+5)^(0+128)
  2899  000B  080A               	movf	10,w
  2900  000C  00C9               	movwf	(??_ISR+6)^(0+128)
  2901  000D  1283               	bcf	3,5	;RP0=0, select bank0
  2902  000E  1303               	bcf	3,6	;RP1=0, select bank0
  2903  000F  087F               	movf	btemp+1,w
  2904  0010  1683               	bsf	3,5	;RP0=1, select bank1
  2905  0011  1303               	bcf	3,6	;RP1=0, select bank1
  2906  0012  00CA               	movwf	(??_ISR+7)^(0+128)
  2907  0013  120A  118A  2E86   	ljmp	_ISR
  2908                           
  2909                           	psect	text12
  2910  1BAA                     __ptext12:	
  2911 ;; *************** function i1_Lcd_Write_String *****************
  2912 ;; Defined at:
  2913 ;;		line 62 in file "lcd.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  a               2    3[COMMON] PTR unsigned char 
  2916 ;;		 -> buffer(64), STR_3(4), STR_2(4), STR_1(4), 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  i               2    8[COMMON] int 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         2       0       0       0       0
  2929 ;;      Locals:         2       0       0       0       0
  2930 ;;      Temps:          3       0       0       0       0
  2931 ;;      Totals:         7       0       0       0       0
  2932 ;;Total ram usage:        7 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    2
  2935 ;; This function calls:
  2936 ;;		i1_Lcd_Write_Char
  2937 ;; This function is called by:
  2938 ;;		_ISR
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           
  2943                           ;psect for function i1_Lcd_Write_String
  2944  1BAA                     i1_Lcd_Write_String:
  2945  1BAA                     i1l3636:	
  2946                           ;incstack = 0
  2947                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2948                           
  2949                           
  2950                           ;lcd.c: 63:     int i;;lcd.c: 64:     for (i = 0; a[i] != '\0'; i++)
  2951  1BAA  01F8               	clrf	i1Lcd_Write_String@i
  2952  1BAB  01F9               	clrf	i1Lcd_Write_String@i+1
  2953  1BAC  2BCF               	goto	i1l3642
  2954  1BAD                     i1l3638:
  2955                           
  2956                           ;lcd.c: 65:         Lcd_Write_Char(a[i]);
  2957  1BAD  0878               	movf	i1Lcd_Write_String@i,w
  2958  1BAE  0773               	addwf	i1Lcd_Write_String@a,w
  2959  1BAF  00F6               	movwf	??i1_Lcd_Write_String+1
  2960  1BB0  0874               	movf	i1Lcd_Write_String@a+1,w
  2961  1BB1  00F5               	movwf	??i1_Lcd_Write_String
  2962  1BB2  1803               	skipnc
  2963  1BB3  0AF5               	incf	??i1_Lcd_Write_String,f
  2964  1BB4  1FF8               	btfss	i1Lcd_Write_String@i,7
  2965  1BB5  2BB7               	goto	u602_20
  2966  1BB6  03F5               	decf	??i1_Lcd_Write_String,f
  2967  1BB7                     u602_20:
  2968  1BB7  0875               	movf	??i1_Lcd_Write_String,w
  2969  1BB8  00F7               	movwf	??i1_Lcd_Write_String+2
  2970  1BB9  0877               	movf	??i1_Lcd_Write_String+2,w
  2971  1BBA  1283               	bcf	3,5	;RP0=0, select bank0
  2972  1BBB  1303               	bcf	3,6	;RP1=0, select bank0
  2973  1BBC  00FF               	movwf	btemp+1
  2974  1BBD  0876               	movf	??i1_Lcd_Write_String+1,w
  2975  1BBE  0084               	movwf	4
  2976  1BBF  160A  158A  2000  160A  158A  	fcall	stringtab
  2977  1BC4  160A  118A  2003  160A  158A  	fcall	i1_Lcd_Write_Char
  2978  1BC9                     i1l3640:
  2979  1BC9  3001               	movlw	1
  2980  1BCA  07F8               	addwf	i1Lcd_Write_String@i,f
  2981  1BCB  1803               	skipnc
  2982  1BCC  0AF9               	incf	i1Lcd_Write_String@i+1,f
  2983  1BCD  3000               	movlw	0
  2984  1BCE  07F9               	addwf	i1Lcd_Write_String@i+1,f
  2985  1BCF                     i1l3642:
  2986  1BCF  0878               	movf	i1Lcd_Write_String@i,w
  2987  1BD0  0773               	addwf	i1Lcd_Write_String@a,w
  2988  1BD1  00F6               	movwf	??i1_Lcd_Write_String+1
  2989  1BD2  0874               	movf	i1Lcd_Write_String@a+1,w
  2990  1BD3  00F5               	movwf	??i1_Lcd_Write_String
  2991  1BD4  1803               	skipnc
  2992  1BD5  0AF5               	incf	??i1_Lcd_Write_String,f
  2993  1BD6  1FF8               	btfss	i1Lcd_Write_String@i,7
  2994  1BD7  2BD9               	goto	u603_20
  2995  1BD8  03F5               	decf	??i1_Lcd_Write_String,f
  2996  1BD9                     u603_20:
  2997  1BD9  0875               	movf	??i1_Lcd_Write_String,w
  2998  1BDA  00F7               	movwf	??i1_Lcd_Write_String+2
  2999  1BDB  0877               	movf	??i1_Lcd_Write_String+2,w
  3000  1BDC  1283               	bcf	3,5	;RP0=0, select bank0
  3001  1BDD  1303               	bcf	3,6	;RP1=0, select bank0
  3002  1BDE  00FF               	movwf	btemp+1
  3003  1BDF  0876               	movf	??i1_Lcd_Write_String+1,w
  3004  1BE0  0084               	movwf	4
  3005  1BE1  160A  158A  2000  160A  158A  	fcall	stringtab
  3006  1BE6  3A00               	xorlw	0
  3007  1BE7  1D03               	skipz
  3008  1BE8  2BEA               	goto	u604_21
  3009  1BE9  2BEB               	goto	u604_20
  3010  1BEA                     u604_21:
  3011  1BEA  2BAD               	goto	i1l3638
  3012  1BEB                     u604_20:
  3013  1BEB                     i1l138:
  3014  1BEB  0008               	return
  3015  1BEC                     __end_ofi1_Lcd_Write_String:
  3016                           
  3017                           	psect	text13
  3018  1003                     __ptext13:	
  3019 ;; *************** function i1_Lcd_Write_Char *****************
  3020 ;; Defined at:
  3021 ;;		line 54 in file "lcd.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  a               1    wreg     unsigned char 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  a               1    2[COMMON] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3035 ;;      Params:         0       0       0       0       0
  3036 ;;      Locals:         1       0       0       0       0
  3037 ;;      Temps:          1       0       0       0       0
  3038 ;;      Totals:         2       0       0       0       0
  3039 ;;Total ram usage:        2 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    1
  3042 ;; This function calls:
  3043 ;;		i1_Lcd_Port
  3044 ;; This function is called by:
  3045 ;;		i1_Lcd_Write_String
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function i1_Lcd_Write_Char
  3051  1003                     i1_Lcd_Write_Char:
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3055                           ;i1Lcd_Write_Char@a stored from wreg
  3056  1003  00F2               	movwf	i1Lcd_Write_Char@a
  3057  1004                     i1l3200:
  3058                           
  3059                           ;lcd.c: 55:     RE0 = 1;
  3060  1004  1283               	bcf	3,5	;RP0=0, select bank0
  3061  1005  1303               	bcf	3,6	;RP1=0, select bank0
  3062  1006  1409               	bsf	9,0	;volatile
  3063  1007                     i1l3202:
  3064                           
  3065                           ;lcd.c: 56:     Lcd_Port(a);
  3066  1007  0872               	movf	i1Lcd_Write_Char@a,w
  3067  1008  120A  158A  2000  160A  118A  	fcall	i1_Lcd_Port
  3068  100D                     i1l3204:
  3069                           
  3070                           ;lcd.c: 57:     RE1 = 1;
  3071  100D  1283               	bcf	3,5	;RP0=0, select bank0
  3072  100E  1303               	bcf	3,6	;RP1=0, select bank0
  3073  100F  1489               	bsf	9,1	;volatile
  3074  1010                     i1l3206:
  3075                           
  3076                           ;lcd.c: 58:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3077  1010  301A               	movlw	26
  3078  1011  00F1               	movwf	??i1_Lcd_Write_Char
  3079  1012                     u620_27:
  3080  1012  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  3081  1013  2812               	goto	u620_27
  3082  1014  0000               	nop
  3083  1015                     i1l3208:
  3084                           
  3085                           ;lcd.c: 59:     RE1 = 0;
  3086  1015  1283               	bcf	3,5	;RP0=0, select bank0
  3087  1016  1303               	bcf	3,6	;RP1=0, select bank0
  3088  1017  1089               	bcf	9,1	;volatile
  3089  1018                     i1l132:
  3090  1018  0008               	return
  3091  1019                     __end_ofi1_Lcd_Write_Char:
  3092                           
  3093                           	psect	text14
  3094  1B01                     __ptext14:	
  3095 ;; *************** function i1_Lcd_Set_Cursor *****************
  3096 ;; Defined at:
  3097 ;;		line 25 in file "lcd.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  a               1    wreg     unsigned char 
  3100 ;;  b               1    4[COMMON] unsigned char 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  a               1    6[COMMON] unsigned char 
  3103 ;;  temp            1    7[COMMON] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, pclath, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3113 ;;      Params:         1       0       0       0       0
  3114 ;;      Locals:         2       0       0       0       0
  3115 ;;      Temps:          1       0       0       0       0
  3116 ;;      Totals:         4       0       0       0       0
  3117 ;;Total ram usage:        4 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    2
  3120 ;; This function calls:
  3121 ;;		i1_Lcd_Cmd
  3122 ;; This function is called by:
  3123 ;;		_ISR
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           
  3128                           ;psect for function i1_Lcd_Set_Cursor
  3129  1B01                     i1_Lcd_Set_Cursor:
  3130                           
  3131                           ;incstack = 0
  3132                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3133                           ;i1Lcd_Set_Cursor@a stored from wreg
  3134  1B01  00F6               	movwf	i1Lcd_Set_Cursor@a
  3135  1B02                     i1l3624:
  3136                           
  3137                           ;lcd.c: 26:     char temp;;lcd.c: 27:     if (a == 1) {
  3138  1B02  0376               	decf	i1Lcd_Set_Cursor@a,w
  3139  1B03  1D03               	btfss	3,2
  3140  1B04  2B06               	goto	u600_21
  3141  1B05  2B07               	goto	u600_20
  3142  1B06                     u600_21:
  3143  1B06  2B13               	goto	i1l3630
  3144  1B07                     u600_20:
  3145  1B07                     i1l3626:
  3146                           
  3147                           ;lcd.c: 28:         temp = 0x80 + b - 1;
  3148  1B07  0874               	movf	i1Lcd_Set_Cursor@b,w
  3149  1B08  3E7F               	addlw	127
  3150  1B09  00F5               	movwf	??i1_Lcd_Set_Cursor
  3151  1B0A  0875               	movf	??i1_Lcd_Set_Cursor,w
  3152  1B0B  00F7               	movwf	i1Lcd_Set_Cursor@temp
  3153  1B0C                     i1l3628:
  3154                           
  3155                           ;lcd.c: 29:         Lcd_Cmd(temp);
  3156  1B0C  0877               	movf	i1Lcd_Set_Cursor@temp,w
  3157  1B0D  160A  158A  2250  160A  158A  	fcall	i1_Lcd_Cmd
  3158                           
  3159                           ;lcd.c: 30:     } else if (a == 2) {
  3160  1B12  2B24               	goto	i1l126
  3161  1B13                     i1l3630:
  3162  1B13  3002               	movlw	2
  3163  1B14  0676               	xorwf	i1Lcd_Set_Cursor@a,w
  3164  1B15  1D03               	btfss	3,2
  3165  1B16  2B18               	goto	u601_21
  3166  1B17  2B19               	goto	u601_20
  3167  1B18                     u601_21:
  3168  1B18  2B24               	goto	i1l126
  3169  1B19                     u601_20:
  3170  1B19                     i1l3632:
  3171                           
  3172                           ;lcd.c: 31:         temp = 0xC0 + b - 1;
  3173  1B19  0874               	movf	i1Lcd_Set_Cursor@b,w
  3174  1B1A  3EBF               	addlw	191
  3175  1B1B  00F5               	movwf	??i1_Lcd_Set_Cursor
  3176  1B1C  0875               	movf	??i1_Lcd_Set_Cursor,w
  3177  1B1D  00F7               	movwf	i1Lcd_Set_Cursor@temp
  3178  1B1E                     i1l3634:
  3179                           
  3180                           ;lcd.c: 32:         Lcd_Cmd(temp);
  3181  1B1E  0877               	movf	i1Lcd_Set_Cursor@temp,w
  3182  1B1F  160A  158A  2250  160A  158A  	fcall	i1_Lcd_Cmd
  3183  1B24                     i1l126:
  3184  1B24  0008               	return
  3185  1B25                     __end_ofi1_Lcd_Set_Cursor:
  3186                           
  3187                           	psect	text15
  3188  1A50                     __ptext15:	
  3189 ;; *************** function i1_Lcd_Cmd *****************
  3190 ;; Defined at:
  3191 ;;		line 12 in file "lcd.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  a               1    wreg     unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  a               1    3[COMMON] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, pclath, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         0       0       0       0       0
  3206 ;;      Locals:         1       0       0       0       0
  3207 ;;      Temps:          2       0       0       0       0
  3208 ;;      Totals:         3       0       0       0       0
  3209 ;;Total ram usage:        3 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    1
  3212 ;; This function calls:
  3213 ;;		i1_Lcd_Port
  3214 ;; This function is called by:
  3215 ;;		i1_Lcd_Set_Cursor
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           
  3220                           ;psect for function i1_Lcd_Cmd
  3221  1A50                     i1_Lcd_Cmd:
  3222                           
  3223                           ;incstack = 0
  3224                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3225                           ;i1Lcd_Cmd@a stored from wreg
  3226  1A50  00F3               	movwf	i1Lcd_Cmd@a
  3227  1A51                     i1l3190:
  3228                           
  3229                           ;lcd.c: 13:     RE0 = 0;
  3230  1A51  1283               	bcf	3,5	;RP0=0, select bank0
  3231  1A52  1303               	bcf	3,6	;RP1=0, select bank0
  3232  1A53  1009               	bcf	9,0	;volatile
  3233  1A54                     i1l3192:
  3234                           
  3235                           ;lcd.c: 14:     Lcd_Port(a);
  3236  1A54  0873               	movf	i1Lcd_Cmd@a,w
  3237  1A55  120A  158A  2000  160A  158A  	fcall	i1_Lcd_Port
  3238  1A5A                     i1l3194:
  3239                           
  3240                           ;lcd.c: 15:     RE1 = 1;
  3241  1A5A  1283               	bcf	3,5	;RP0=0, select bank0
  3242  1A5B  1303               	bcf	3,6	;RP1=0, select bank0
  3243  1A5C  1489               	bsf	9,1	;volatile
  3244  1A5D                     i1l3196:
  3245                           
  3246                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3247  1A5D  300B               	movlw	11
  3248  1A5E  00F2               	movwf	??i1_Lcd_Cmd+1
  3249  1A5F  3062               	movlw	98
  3250  1A60  00F1               	movwf	??i1_Lcd_Cmd
  3251  1A61                     u621_27:
  3252  1A61  0BF1               	decfsz	??i1_Lcd_Cmd,f
  3253  1A62  2A61               	goto	u621_27
  3254  1A63  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  3255  1A64  2A61               	goto	u621_27
  3256  1A65  0000               	nop
  3257  1A66                     i1l3198:
  3258                           
  3259                           ;lcd.c: 17:     RE1 = 0;
  3260  1A66  1283               	bcf	3,5	;RP0=0, select bank0
  3261  1A67  1303               	bcf	3,6	;RP1=0, select bank0
  3262  1A68  1089               	bcf	9,1	;volatile
  3263  1A69                     i1l117:
  3264  1A69  0008               	return
  3265  1A6A                     __end_ofi1_Lcd_Cmd:
  3266                           
  3267                           	psect	text16
  3268  0800                     __ptext16:	
  3269 ;; *************** function i1_Lcd_Port *****************
  3270 ;; Defined at:
  3271 ;;		line 8 in file "lcd.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  a               1    wreg     unsigned char 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  a               1    0[COMMON] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3285 ;;      Params:         0       0       0       0       0
  3286 ;;      Locals:         1       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0
  3288 ;;      Totals:         1       0       0       0       0
  3289 ;;Total ram usage:        1 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		i1_Lcd_Cmd
  3295 ;;		i1_Lcd_Write_Char
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           
  3300                           ;psect for function i1_Lcd_Port
  3301  0800                     i1_Lcd_Port:
  3302                           
  3303                           ;incstack = 0
  3304                           ; Regs used in i1_Lcd_Port: [wreg]
  3305                           ;i1Lcd_Port@a stored from wreg
  3306  0800  00F0               	movwf	i1Lcd_Port@a
  3307  0801                     i1l2810:
  3308                           
  3309                           ;lcd.c: 9:     PORTD = a;
  3310  0801  0870               	movf	i1Lcd_Port@a,w
  3311  0802  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0803  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0804  0088               	movwf	8	;volatile
  3314  0805                     i1l114:
  3315  0805  0008               	return
  3316  0806                     __end_ofi1_Lcd_Port:
  3317                           
  3318                           	psect	text17
  3319  002E                     __ptext17:	
  3320 ;; *************** function _sprintf *****************
  3321 ;; Defined at:
  3322 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  sp              1    wreg     PTR unsigned char 
  3325 ;;		 -> buffer(64), 
  3326 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  3327 ;;		 -> STR_5(5), STR_4(5), 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  3330 ;;		 -> buffer(64), 
  3331 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  3332 ;;  tmpval          4   23[BANK1 ] struct .
  3333 ;;  val             4   17[BANK1 ] unsigned long 
  3334 ;;  prec            2   28[BANK1 ] int 
  3335 ;;  eexp            2   21[BANK1 ] int 
  3336 ;;  flag            2   15[BANK1 ] unsigned short 
  3337 ;;  cp              2    0        PTR const unsigned char 
  3338 ;;  len             2    0        unsigned int 
  3339 ;;  width           2    0        int 
  3340 ;;  c               1   34[BANK1 ] unsigned char 
  3341 ;;  ap              1   14[BANK1 ] PTR void [1]
  3342 ;;		 -> ?_sprintf(2), 
  3343 ;;  d               1    0        unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  2    0[BANK1 ] int 
  3346 ;; Registers used:
  3347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3353 ;;      Params:         0       0       5       0       0
  3354 ;;      Locals:         0       0      25       0       0
  3355 ;;      Temps:          0       0       5       0       0
  3356 ;;      Totals:         0       0      35       0       0
  3357 ;;Total ram usage:       35 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    3
  3360 ;; This function calls:
  3361 ;;		___awdiv
  3362 ;;		___fladd
  3363 ;;		___fleq
  3364 ;;		___flge
  3365 ;;		___flmul
  3366 ;;		___flneg
  3367 ;;		___flsub
  3368 ;;		___fltol
  3369 ;;		___lldiv
  3370 ;;		___llmod
  3371 ;;		___wmul
  3372 ;;		___xxtofl
  3373 ;;		__div_to_l_
  3374 ;;		__tdiv_to_l_
  3375 ;;		_fround
  3376 ;;		_isdigit
  3377 ;;		_scale
  3378 ;; This function is called by:
  3379 ;;		_ISR
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _sprintf
  3385  002E                     _sprintf:
  3386                           
  3387                           ;incstack = 0
  3388 ;; using string table level
  3389                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3390                           ;sprintf@sp stored from wreg
  3391  002E  1683               	bsf	3,5	;RP0=1, select bank1
  3392  002F  1303               	bcf	3,6	;RP1=0, select bank1
  3393  0030  00BB               	movwf	sprintf@sp^(0+128)
  3394  0031                     i1l3276:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  3397  0031  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3398  0032  00A5               	movwf	??_sprintf^(0+128)
  3399  0033  0825               	movf	??_sprintf^(0+128),w
  3400  0034  00AE               	movwf	sprintf@ap^(0+128)
  3401                           
  3402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3403  0035  2E6F               	goto	i1l3470
  3404  0036                     i1l3278:
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3407  0036  3025               	movlw	37
  3408  0037  0642               	xorwf	sprintf@c^(0+128),w
  3409  0038  1903               	btfsc	3,2
  3410  0039  283B               	goto	u536_21
  3411  003A  283C               	goto	u536_20
  3412  003B                     u536_21:
  3413  003B  2848               	goto	i1l3284
  3414  003C                     u536_20:
  3415  003C                     i1l3280:
  3416                           
  3417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3418  003C  0842               	movf	sprintf@c^(0+128),w
  3419  003D  00A5               	movwf	??_sprintf^(0+128)
  3420  003E  083B               	movf	sprintf@sp^(0+128),w
  3421  003F  0084               	movwf	4
  3422  0040  0825               	movf	??_sprintf^(0+128),w
  3423  0041  1783               	bsf	3,7	;select IRP bank2
  3424  0042  0080               	movwf	0
  3425  0043                     i1l3282:
  3426  0043  3001               	movlw	1
  3427  0044  00A5               	movwf	??_sprintf^(0+128)
  3428  0045  0825               	movf	??_sprintf^(0+128),w
  3429  0046  07BB               	addwf	sprintf@sp^(0+128),f
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  3432  0047  2E6F               	goto	i1l3470
  3433  0048                     i1l3284:
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3436  0048  01AF               	clrf	sprintf@flag^(0+128)
  3437  0049  01B0               	clrf	(sprintf@flag+1)^(0+128)
  3438  004A                     i1l3286:
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  3441  004A  0820               	movf	sprintf@f^(0+128),w
  3442  004B  0084               	movwf	4
  3443  004C  160A  158A  200A  120A  118A  	fcall	stringdir
  3444  0051  3A2E               	xorlw	46
  3445  0052  1D03               	skipz
  3446  0053  2855               	goto	u537_21
  3447  0054  2856               	goto	u537_20
  3448  0055                     u537_21:
  3449  0055  289B               	goto	i1l3302
  3450  0056                     u537_20:
  3451  0056                     i1l3288:
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  3454  0056  1730               	bsf	(sprintf@flag^(0+128)+1),6
  3455  0057                     i1l3290:
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  3458  0057  3001               	movlw	1
  3459  0058  00A5               	movwf	??_sprintf^(0+128)
  3460  0059  0825               	movf	??_sprintf^(0+128),w
  3461  005A  07A0               	addwf	sprintf@f^(0+128),f
  3462  005B                     i1l3292:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  3465  005B  01BC               	clrf	sprintf@prec^(0+128)
  3466  005C  01BD               	clrf	(sprintf@prec+1)^(0+128)
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3469  005D  288A               	goto	i1l3300
  3470  005E                     i1l3294:
  3471                           
  3472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  3473  005E  300A               	movlw	10
  3474  005F  00F0               	movwf	___wmul@multiplier
  3475  0060  3000               	movlw	0
  3476  0061  00F1               	movwf	___wmul@multiplier+1
  3477  0062  1683               	bsf	3,5	;RP0=1, select bank1
  3478  0063  1303               	bcf	3,6	;RP1=0, select bank1
  3479  0064  083D               	movf	(sprintf@prec+1)^(0+128),w
  3480  0065  00F3               	movwf	___wmul@multiplicand+1
  3481  0066  083C               	movf	sprintf@prec^(0+128),w
  3482  0067  00F2               	movwf	___wmul@multiplicand
  3483  0068  160A  158A  2325  120A  118A  	fcall	___wmul
  3484  006D  0871               	movf	?___wmul+1,w
  3485  006E  1683               	bsf	3,5	;RP0=1, select bank1
  3486  006F  1303               	bcf	3,6	;RP1=0, select bank1
  3487  0070  00BD               	movwf	(sprintf@prec+1)^(0+128)
  3488  0071  0870               	movf	?___wmul,w
  3489  0072  00BC               	movwf	sprintf@prec^(0+128)
  3490  0073                     i1l3296:
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  3493  0073  0820               	movf	sprintf@f^(0+128),w
  3494  0074  0084               	movwf	4
  3495  0075  160A  158A  200A  120A  118A  	fcall	stringdir
  3496  007A  3ED0               	addlw	208
  3497  007B  00A5               	movwf	??_sprintf^(0+128)
  3498  007C  30FF               	movlw	255
  3499  007D  1803               	skipnc
  3500  007E  3000               	movlw	0
  3501  007F  00A6               	movwf	(??_sprintf^(0+128)+1)
  3502  0080  0825               	movf	??_sprintf^(0+128),w
  3503  0081  07BC               	addwf	sprintf@prec^(0+128),f
  3504  0082  1803               	skipnc
  3505  0083  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3506  0084  0826               	movf	(??_sprintf+1)^(0+128),w
  3507  0085  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3508  0086                     i1l3298:
  3509  0086  3001               	movlw	1
  3510  0087  00A5               	movwf	??_sprintf^(0+128)
  3511  0088  0825               	movf	??_sprintf^(0+128),w
  3512  0089  07A0               	addwf	sprintf@f^(0+128),f
  3513  008A                     i1l3300:
  3514                           
  3515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3516  008A  0820               	movf	sprintf@f^(0+128),w
  3517  008B  0084               	movwf	4
  3518  008C  160A  158A  200A  120A  118A  	fcall	stringdir
  3519  0091  160A  158A  222B  120A  118A  	fcall	_isdigit
  3520  0096  1803               	btfsc	3,0
  3521  0097  2899               	goto	u538_21
  3522  0098  289A               	goto	u538_20
  3523  0099                     u538_21:
  3524  0099  285E               	goto	i1l3294
  3525  009A                     u538_20:
  3526  009A  28A1               	goto	i1l3308
  3527  009B                     i1l3302:
  3528                           
  3529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  3530  009B  01BC               	clrf	sprintf@prec^(0+128)
  3531  009C  01BD               	clrf	(sprintf@prec+1)^(0+128)
  3532  009D                     i1l3304:
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  3535  009D  1630               	bsf	(sprintf@flag^(0+128)+1),4
  3536  009E  28A1               	goto	i1l3308
  3537  009F                     i1l272:	
  3538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  3539                           
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  3542  009F  1530               	bsf	(sprintf@flag^(0+128)+1),2
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  3545  00A0  28BD               	goto	i1l3310
  3546  00A1                     i1l3308:
  3547  00A1  3001               	movlw	1
  3548  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  3549  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  3550  00A4  07A0               	addwf	sprintf@f^(0+128),f
  3551  00A5  30FF               	movlw	-1
  3552  00A6  0720               	addwf	sprintf@f^(0+128),w
  3553  00A7  0084               	movwf	4
  3554  00A8  160A  158A  200A  120A  118A  	fcall	stringdir
  3555  00AD  00C2               	movwf	sprintf@c^(0+128)
  3556  00AE  00A5               	movwf	??_sprintf^(0+128)
  3557  00AF  01A6               	clrf	(??_sprintf^(0+128)+1)
  3558                           
  3559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3560                           ; Switch size 1, requested type "simple"
  3561                           ; Number of cases is 1, Range of values is 0 to 0
  3562                           ; switch strategies available:
  3563                           ; Name         Instructions Cycles
  3564                           ; simple_byte            4     3 (average)
  3565                           ; direct_byte           11     8 (fixed)
  3566                           ; jumptable            260     6 (fixed)
  3567                           ;	Chosen strategy is simple_byte
  3568  00B0  0826               	movf	(??_sprintf+1)^(0+128),w
  3569  00B1  3A00               	xorlw	0	; case 0
  3570  00B2  1903               	skipnz
  3571  00B3  28B5               	goto	i1l3756
  3572  00B4  2E6F               	goto	i1l3470
  3573  00B5                     i1l3756:
  3574                           
  3575                           ; Switch size 1, requested type "simple"
  3576                           ; Number of cases is 2, Range of values is 0 to 102
  3577                           ; switch strategies available:
  3578                           ; Name         Instructions Cycles
  3579                           ; simple_byte            7     4 (average)
  3580                           ; jumptable            260     6 (fixed)
  3581                           ;	Chosen strategy is simple_byte
  3582  00B5  0825               	movf	??_sprintf^(0+128),w
  3583  00B6  3A00               	xorlw	0	; case 0
  3584  00B7  1903               	skipnz
  3585  00B8  2E81               	goto	i1l3472
  3586  00B9  3A66               	xorlw	102	; case 102
  3587  00BA  1903               	skipnz
  3588  00BB  289F               	goto	i1l272
  3589  00BC  2E6F               	goto	i1l3470
  3590  00BD                     i1l3310:
  3591                           
  3592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  3593  00BD  3000               	movlw	0
  3594  00BE  052F               	andwf	sprintf@flag^(0+128),w
  3595  00BF  00A5               	movwf	??_sprintf^(0+128)
  3596  00C0  3007               	movlw	7
  3597  00C1  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3598  00C2  00A6               	movwf	(??_sprintf+1)^(0+128)
  3599  00C3  0825               	movf	??_sprintf^(0+128),w
  3600  00C4  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3601  00C5  1903               	btfsc	3,2
  3602  00C6  28C8               	goto	u539_21
  3603  00C7  28C9               	goto	u539_20
  3604  00C8                     u539_21:
  3605  00C8  2E2A               	goto	i1l3452
  3606  00C9                     u539_20:
  3607  00C9                     i1l3312:
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  3610  00C9  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  3611  00CA  28CC               	goto	u540_21
  3612  00CB  28CD               	goto	u540_20
  3613  00CC                     u540_21:
  3614  00CC  28D1               	goto	i1l3316
  3615  00CD                     u540_20:
  3616  00CD                     i1l3314:
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  3619  00CD  3006               	movlw	6
  3620  00CE  00BC               	movwf	sprintf@prec^(0+128)
  3621  00CF  3000               	movlw	0
  3622  00D0  00BD               	movwf	(sprintf@prec^(0+128)+1)
  3623  00D1                     i1l3316:
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  3626  00D1  082E               	movf	sprintf@ap^(0+128),w
  3627  00D2  0084               	movwf	4
  3628  00D3  1383               	bcf	3,7	;select IRP bank0
  3629  00D4  0800               	movf	0,w
  3630  00D5  00BE               	movwf	sprintf@fval^(0+128)
  3631  00D6  0A84               	incf	4,f
  3632  00D7  0800               	movf	0,w
  3633  00D8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3634  00D9  0A84               	incf	4,f
  3635  00DA  0800               	movf	0,w
  3636  00DB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3637  00DC  0A84               	incf	4,f
  3638  00DD  0800               	movf	0,w
  3639  00DE  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3640  00DF                     i1l3318:
  3641  00DF  3004               	movlw	4
  3642  00E0  00A5               	movwf	??_sprintf^(0+128)
  3643  00E1  0825               	movf	??_sprintf^(0+128),w
  3644  00E2  07AE               	addwf	sprintf@ap^(0+128),f
  3645  00E3                     i1l3320:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  3648  00E3  0841               	movf	(sprintf@fval+3)^(0+128),w
  3649  00E4  00F3               	movwf	___flge@ff1+3
  3650  00E5  0840               	movf	(sprintf@fval+2)^(0+128),w
  3651  00E6  00F2               	movwf	___flge@ff1+2
  3652  00E7  083F               	movf	(sprintf@fval+1)^(0+128),w
  3653  00E8  00F1               	movwf	___flge@ff1+1
  3654  00E9  083E               	movf	sprintf@fval^(0+128),w
  3655  00EA  00F0               	movwf	___flge@ff1
  3656  00EB  3000               	movlw	0
  3657  00EC  00F7               	movwf	___flge@ff2+3
  3658  00ED  3000               	movlw	0
  3659  00EE  00F6               	movwf	___flge@ff2+2
  3660  00EF  3000               	movlw	0
  3661  00F0  00F5               	movwf	___flge@ff2+1
  3662  00F1  3000               	movlw	0
  3663  00F2  00F4               	movwf	___flge@ff2
  3664  00F3  160A  158A  26B8  120A  118A  	fcall	___flge
  3665  00F8  1803               	btfsc	3,0
  3666  00F9  28FB               	goto	u541_21
  3667  00FA  28FC               	goto	u541_20
  3668  00FB                     u541_21:
  3669  00FB  2919               	goto	i1l3326
  3670  00FC                     u541_20:
  3671  00FC                     i1l3322:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  3674  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  3675  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  3676  00FE  0841               	movf	(sprintf@fval+3)^(0+128),w
  3677  00FF  00F3               	movwf	___flneg@f1+3
  3678  0100  0840               	movf	(sprintf@fval+2)^(0+128),w
  3679  0101  00F2               	movwf	___flneg@f1+2
  3680  0102  083F               	movf	(sprintf@fval+1)^(0+128),w
  3681  0103  00F1               	movwf	___flneg@f1+1
  3682  0104  083E               	movf	sprintf@fval^(0+128),w
  3683  0105  00F0               	movwf	___flneg@f1
  3684  0106  160A  158A  2220  120A  118A  	fcall	___flneg
  3685  010B  0873               	movf	?___flneg+3,w
  3686  010C  1683               	bsf	3,5	;RP0=1, select bank1
  3687  010D  1303               	bcf	3,6	;RP1=0, select bank1
  3688  010E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3689  010F  0872               	movf	?___flneg+2,w
  3690  0110  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3691  0111  0871               	movf	?___flneg+1,w
  3692  0112  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3693  0113  0870               	movf	?___flneg,w
  3694  0114  00BE               	movwf	sprintf@fval^(0+128)
  3695  0115                     i1l3324:
  3696                           
  3697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  3698  0115  3003               	movlw	3
  3699  0116  04AF               	iorwf	sprintf@flag^(0+128),f
  3700  0117  3000               	movlw	0
  3701  0118  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  3702  0119                     i1l3326:
  3703                           
  3704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  3705  0119  1683               	bsf	3,5	;RP0=1, select bank1
  3706  011A  1303               	bcf	3,6	;RP1=0, select bank1
  3707  011B  01B5               	clrf	sprintf@eexp^(0+128)
  3708  011C  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3709  011D                     i1l3328:
  3710                           
  3711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  3712  011D  0841               	movf	(sprintf@fval+3)^(0+128),w
  3713  011E  00F3               	movwf	___fleq@ff1+3
  3714  011F  0840               	movf	(sprintf@fval+2)^(0+128),w
  3715  0120  00F2               	movwf	___fleq@ff1+2
  3716  0121  083F               	movf	(sprintf@fval+1)^(0+128),w
  3717  0122  00F1               	movwf	___fleq@ff1+1
  3718  0123  083E               	movf	sprintf@fval^(0+128),w
  3719  0124  00F0               	movwf	___fleq@ff1
  3720  0125  3000               	movlw	0
  3721  0126  00F7               	movwf	___fleq@ff2+3
  3722  0127  3000               	movlw	0
  3723  0128  00F6               	movwf	___fleq@ff2+2
  3724  0129  3000               	movlw	0
  3725  012A  00F5               	movwf	___fleq@ff2+1
  3726  012B  3000               	movlw	0
  3727  012C  00F4               	movwf	___fleq@ff2
  3728  012D  160A  158A  2430  120A  118A  	fcall	___fleq
  3729  0132  1803               	btfsc	3,0
  3730  0133  2935               	goto	u542_21
  3731  0134  2936               	goto	u542_20
  3732  0135                     u542_21:
  3733  0135  2A26               	goto	i1l3354
  3734  0136                     u542_20:
  3735  0136                     i1l3330:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  3738  0136  1003               	clrc
  3739  0137  1683               	bsf	3,5	;RP0=1, select bank1
  3740  0138  1303               	bcf	3,6	;RP1=0, select bank1
  3741  0139  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  3742  013A  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  3743  013B  3E82               	addlw	130
  3744  013C  00B5               	movwf	sprintf@eexp^(0+128)
  3745  013D  30FF               	movlw	255
  3746  013E  1803               	skipnc
  3747  013F  3000               	movlw	0
  3748  0140  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  3749  0141                     i1l3332:
  3750                           
  3751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  3752  0141  30FF               	movlw	255
  3753  0142  07B5               	addwf	sprintf@eexp^(0+128),f
  3754  0143  1803               	skipnc
  3755  0144  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3756  0145  30FF               	movlw	255
  3757  0146  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3758  0147                     i1l3334:
  3759                           
  3760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  3761  0147  3003               	movlw	3
  3762  0148  00F0               	movwf	___wmul@multiplier
  3763  0149  3000               	movlw	0
  3764  014A  00F1               	movwf	___wmul@multiplier+1
  3765  014B  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3766  014C  00F3               	movwf	___wmul@multiplicand+1
  3767  014D  0835               	movf	sprintf@eexp^(0+128),w
  3768  014E  00F2               	movwf	___wmul@multiplicand
  3769  014F  160A  158A  2325  120A  118A  	fcall	___wmul
  3770  0154  0871               	movf	?___wmul+1,w
  3771  0155  1683               	bsf	3,5	;RP0=1, select bank1
  3772  0156  1303               	bcf	3,6	;RP1=0, select bank1
  3773  0157  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  3774  0158  0870               	movf	?___wmul,w
  3775  0159  00B5               	movwf	sprintf@eexp^(0+128)
  3776  015A                     i1l3336:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  3779  015A  300A               	movlw	10
  3780  015B  00F7               	movwf	___awdiv@divisor
  3781  015C  3000               	movlw	0
  3782  015D  00F8               	movwf	___awdiv@divisor+1
  3783  015E  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3784  015F  00FA               	movwf	___awdiv@dividend+1
  3785  0160  0835               	movf	sprintf@eexp^(0+128),w
  3786  0161  00F9               	movwf	___awdiv@dividend
  3787  0162  160A  158A  25E5  120A  118A  	fcall	___awdiv
  3788  0167  0878               	movf	?___awdiv+1,w
  3789  0168  1683               	bsf	3,5	;RP0=1, select bank1
  3790  0169  1303               	bcf	3,6	;RP1=0, select bank1
  3791  016A  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  3792  016B  0877               	movf	?___awdiv,w
  3793  016C  00B5               	movwf	sprintf@eexp^(0+128)
  3794  016D                     i1l3338:
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  3797  016D  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  3798  016E  2970               	goto	u543_21
  3799  016F  2971               	goto	u543_20
  3800  0170                     u543_21:
  3801  0170  2977               	goto	i1l3342
  3802  0171                     u543_20:
  3803  0171                     i1l3340:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  3806  0171  30FF               	movlw	255
  3807  0172  07B5               	addwf	sprintf@eexp^(0+128),f
  3808  0173  1803               	skipnc
  3809  0174  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3810  0175  30FF               	movlw	255
  3811  0176  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3812  0177                     i1l3342:
  3813                           
  3814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  3815  0177  0335               	decf	sprintf@eexp^(0+128),w
  3816  0178  3AFF               	xorlw	255
  3817  0179  120A  158A  2140  120A  118A  	fcall	_scale
  3818  017E  1283               	bcf	3,5	;RP0=0, select bank0
  3819  017F  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0180  0841               	movf	?_scale+3,w
  3821  0181  1683               	bsf	3,5	;RP0=1, select bank1
  3822  0182  1303               	bcf	3,6	;RP1=0, select bank1
  3823  0183  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3824  0184  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0185  1303               	bcf	3,6	;RP1=0, select bank0
  3826  0186  0840               	movf	?_scale+2,w
  3827  0187  1683               	bsf	3,5	;RP0=1, select bank1
  3828  0188  1303               	bcf	3,6	;RP1=0, select bank1
  3829  0189  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3830  018A  1283               	bcf	3,5	;RP0=0, select bank0
  3831  018B  1303               	bcf	3,6	;RP1=0, select bank0
  3832  018C  083F               	movf	?_scale+1,w
  3833  018D  1683               	bsf	3,5	;RP0=1, select bank1
  3834  018E  1303               	bcf	3,6	;RP1=0, select bank1
  3835  018F  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3836  0190  1283               	bcf	3,5	;RP0=0, select bank0
  3837  0191  1303               	bcf	3,6	;RP1=0, select bank0
  3838  0192  083E               	movf	?_scale,w
  3839  0193  1683               	bsf	3,5	;RP0=1, select bank1
  3840  0194  1303               	bcf	3,6	;RP1=0, select bank1
  3841  0195  00B7               	movwf	sprintf@tmpval^(0+128)
  3842  0196                     i1l3344:
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  3845  0196  0841               	movf	(sprintf@fval+3)^(0+128),w
  3846  0197  1283               	bcf	3,5	;RP0=0, select bank0
  3847  0198  1303               	bcf	3,6	;RP1=0, select bank0
  3848  0199  00A7               	movwf	___flmul@b+3
  3849  019A  1683               	bsf	3,5	;RP0=1, select bank1
  3850  019B  1303               	bcf	3,6	;RP1=0, select bank1
  3851  019C  0840               	movf	(sprintf@fval+2)^(0+128),w
  3852  019D  1283               	bcf	3,5	;RP0=0, select bank0
  3853  019E  1303               	bcf	3,6	;RP1=0, select bank0
  3854  019F  00A6               	movwf	___flmul@b+2
  3855  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  3856  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  3857  01A2  083F               	movf	(sprintf@fval+1)^(0+128),w
  3858  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  3859  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  3860  01A5  00A5               	movwf	___flmul@b+1
  3861  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  3862  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  3863  01A8  083E               	movf	sprintf@fval^(0+128),w
  3864  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  3865  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  3866  01AB  00A4               	movwf	___flmul@b
  3867  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  3868  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  3869  01AE  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3870  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  3871  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  3872  01B1  00AB               	movwf	___flmul@a+3
  3873  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  3874  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  3875  01B4  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3876  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  3877  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  3878  01B7  00AA               	movwf	___flmul@a+2
  3879  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  3880  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  3881  01BA  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3882  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  3883  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  3884  01BD  00A9               	movwf	___flmul@a+1
  3885  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  3886  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  3887  01C0  0837               	movf	sprintf@tmpval^(0+128),w
  3888  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  3889  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  3890  01C3  00A8               	movwf	___flmul@a
  3891  01C4  120A  158A  249F  120A  118A  	fcall	___flmul
  3892  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3893  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3894  01CB  0827               	movf	?___flmul+3,w
  3895  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  3896  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  3897  01CE  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3898  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  3899  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  3900  01D1  0826               	movf	?___flmul+2,w
  3901  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  3902  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  3903  01D4  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3904  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  3905  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  3906  01D7  0825               	movf	?___flmul+1,w
  3907  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  3908  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  3909  01DA  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3910  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  3911  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  3912  01DD  0824               	movf	?___flmul,w
  3913  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  3914  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  3915  01E0  00B7               	movwf	sprintf@tmpval^(0+128)
  3916  01E1                     i1l3346:
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3919  01E1  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3920  01E2  00F3               	movwf	___flge@ff1+3
  3921  01E3  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3922  01E4  00F2               	movwf	___flge@ff1+2
  3923  01E5  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3924  01E6  00F1               	movwf	___flge@ff1+1
  3925  01E7  0837               	movf	sprintf@tmpval^(0+128),w
  3926  01E8  00F0               	movwf	___flge@ff1
  3927  01E9  303F               	movlw	63
  3928  01EA  00F7               	movwf	___flge@ff2+3
  3929  01EB  3080               	movlw	128
  3930  01EC  00F6               	movwf	___flge@ff2+2
  3931  01ED  3000               	movlw	0
  3932  01EE  00F5               	movwf	___flge@ff2+1
  3933  01EF  3000               	movlw	0
  3934  01F0  00F4               	movwf	___flge@ff2
  3935  01F1  160A  158A  26B8  120A  118A  	fcall	___flge
  3936  01F6  1803               	btfsc	3,0
  3937  01F7  29F9               	goto	u544_21
  3938  01F8  29FA               	goto	u544_20
  3939  01F9                     u544_21:
  3940  01F9  2A03               	goto	i1l3350
  3941  01FA                     u544_20:
  3942  01FA                     i1l3348:
  3943                           
  3944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3945  01FA  30FF               	movlw	255
  3946  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  3947  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  3948  01FD  07B5               	addwf	sprintf@eexp^(0+128),f
  3949  01FE  1803               	skipnc
  3950  01FF  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3951  0200  30FF               	movlw	255
  3952  0201  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3953  0202  2A26               	goto	i1l3354
  3954  0203                     i1l3350:
  3955  0203  1683               	bsf	3,5	;RP0=1, select bank1
  3956  0204  1303               	bcf	3,6	;RP1=0, select bank1
  3957  0205  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3958  0206  00F3               	movwf	___flge@ff1+3
  3959  0207  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3960  0208  00F2               	movwf	___flge@ff1+2
  3961  0209  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3962  020A  00F1               	movwf	___flge@ff1+1
  3963  020B  0837               	movf	sprintf@tmpval^(0+128),w
  3964  020C  00F0               	movwf	___flge@ff1
  3965  020D  3041               	movlw	65
  3966  020E  00F7               	movwf	___flge@ff2+3
  3967  020F  3020               	movlw	32
  3968  0210  00F6               	movwf	___flge@ff2+2
  3969  0211  3000               	movlw	0
  3970  0212  00F5               	movwf	___flge@ff2+1
  3971  0213  3000               	movlw	0
  3972  0214  00F4               	movwf	___flge@ff2
  3973  0215  160A  158A  26B8  120A  118A  	fcall	___flge
  3974  021A  1C03               	btfss	3,0
  3975  021B  2A1D               	goto	u545_21
  3976  021C  2A1E               	goto	u545_20
  3977  021D                     u545_21:
  3978  021D  2A26               	goto	i1l3354
  3979  021E                     u545_20:
  3980  021E                     i1l3352:
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3983  021E  3001               	movlw	1
  3984  021F  1683               	bsf	3,5	;RP0=1, select bank1
  3985  0220  1303               	bcf	3,6	;RP1=0, select bank1
  3986  0221  07B5               	addwf	sprintf@eexp^(0+128),f
  3987  0222  1803               	skipnc
  3988  0223  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3989  0224  3000               	movlw	0
  3990  0225  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3991  0226                     i1l3354:
  3992                           
  3993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3994  0226  1683               	bsf	3,5	;RP0=1, select bank1
  3995  0227  1303               	bcf	3,6	;RP1=0, select bank1
  3996  0228  083D               	movf	(sprintf@prec+1)^(0+128),w
  3997  0229  3A80               	xorlw	128
  3998  022A  00FF               	movwf	btemp+1
  3999  022B  3080               	movlw	128
  4000  022C  027F               	subwf	btemp+1,w
  4001  022D  1D03               	skipz
  4002  022E  2A31               	goto	u546_25
  4003  022F  300D               	movlw	13
  4004  0230  023C               	subwf	sprintf@prec^(0+128),w
  4005  0231                     u546_25:
  4006  0231  1803               	skipnc
  4007  0232  2A34               	goto	u546_21
  4008  0233  2A35               	goto	u546_20
  4009  0234                     u546_21:
  4010  0234  2A7C               	goto	i1l3358
  4011  0235                     u546_20:
  4012  0235                     i1l3356:
  4013                           
  4014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  4015  0235  1683               	bsf	3,5	;RP0=1, select bank1
  4016  0236  1303               	bcf	3,6	;RP1=0, select bank1
  4017  0237  083C               	movf	sprintf@prec^(0+128),w
  4018  0238  160A  118A  236D  120A  118A  	fcall	_fround
  4019  023D  1283               	bcf	3,5	;RP0=0, select bank0
  4020  023E  1303               	bcf	3,6	;RP1=0, select bank0
  4021  023F  0841               	movf	?_fround+3,w
  4022  0240  00D5               	movwf	___fladd@b+3
  4023  0241  0840               	movf	?_fround+2,w
  4024  0242  00D4               	movwf	___fladd@b+2
  4025  0243  083F               	movf	?_fround+1,w
  4026  0244  00D3               	movwf	___fladd@b+1
  4027  0245  083E               	movf	?_fround,w
  4028  0246  00D2               	movwf	___fladd@b
  4029  0247  1683               	bsf	3,5	;RP0=1, select bank1
  4030  0248  1303               	bcf	3,6	;RP1=0, select bank1
  4031  0249  0841               	movf	(sprintf@fval+3)^(0+128),w
  4032  024A  1283               	bcf	3,5	;RP0=0, select bank0
  4033  024B  1303               	bcf	3,6	;RP1=0, select bank0
  4034  024C  00D9               	movwf	___fladd@a+3
  4035  024D  1683               	bsf	3,5	;RP0=1, select bank1
  4036  024E  1303               	bcf	3,6	;RP1=0, select bank1
  4037  024F  0840               	movf	(sprintf@fval+2)^(0+128),w
  4038  0250  1283               	bcf	3,5	;RP0=0, select bank0
  4039  0251  1303               	bcf	3,6	;RP1=0, select bank0
  4040  0252  00D8               	movwf	___fladd@a+2
  4041  0253  1683               	bsf	3,5	;RP0=1, select bank1
  4042  0254  1303               	bcf	3,6	;RP1=0, select bank1
  4043  0255  083F               	movf	(sprintf@fval+1)^(0+128),w
  4044  0256  1283               	bcf	3,5	;RP0=0, select bank0
  4045  0257  1303               	bcf	3,6	;RP1=0, select bank0
  4046  0258  00D7               	movwf	___fladd@a+1
  4047  0259  1683               	bsf	3,5	;RP0=1, select bank1
  4048  025A  1303               	bcf	3,6	;RP1=0, select bank1
  4049  025B  083E               	movf	sprintf@fval^(0+128),w
  4050  025C  1283               	bcf	3,5	;RP0=0, select bank0
  4051  025D  1303               	bcf	3,6	;RP1=0, select bank0
  4052  025E  00D6               	movwf	___fladd@a
  4053  025F  160A  118A  2578  120A  118A  	fcall	___fladd
  4054  0264  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0265  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0266  0855               	movf	?___fladd+3,w
  4057  0267  1683               	bsf	3,5	;RP0=1, select bank1
  4058  0268  1303               	bcf	3,6	;RP1=0, select bank1
  4059  0269  00C1               	movwf	(sprintf@fval+3)^(0+128)
  4060  026A  1283               	bcf	3,5	;RP0=0, select bank0
  4061  026B  1303               	bcf	3,6	;RP1=0, select bank0
  4062  026C  0854               	movf	?___fladd+2,w
  4063  026D  1683               	bsf	3,5	;RP0=1, select bank1
  4064  026E  1303               	bcf	3,6	;RP1=0, select bank1
  4065  026F  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4066  0270  1283               	bcf	3,5	;RP0=0, select bank0
  4067  0271  1303               	bcf	3,6	;RP1=0, select bank0
  4068  0272  0853               	movf	?___fladd+1,w
  4069  0273  1683               	bsf	3,5	;RP0=1, select bank1
  4070  0274  1303               	bcf	3,6	;RP1=0, select bank1
  4071  0275  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4072  0276  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0277  1303               	bcf	3,6	;RP1=0, select bank0
  4074  0278  0852               	movf	?___fladd,w
  4075  0279  1683               	bsf	3,5	;RP0=1, select bank1
  4076  027A  1303               	bcf	3,6	;RP1=0, select bank1
  4077  027B  00BE               	movwf	sprintf@fval^(0+128)
  4078  027C                     i1l3358:
  4079                           
  4080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4081  027C  1683               	bsf	3,5	;RP0=1, select bank1
  4082  027D  1303               	bcf	3,6	;RP1=0, select bank1
  4083  027E  0836               	movf	(sprintf@eexp+1)^(0+128),w
  4084  027F  3A80               	xorlw	128
  4085  0280  00FF               	movwf	btemp+1
  4086  0281  3080               	movlw	128
  4087  0282  027F               	subwf	btemp+1,w
  4088  0283  1D03               	skipz
  4089  0284  2A87               	goto	u547_25
  4090  0285  300A               	movlw	10
  4091  0286  0235               	subwf	sprintf@eexp^(0+128),w
  4092  0287                     u547_25:
  4093  0287  1803               	skipnc
  4094  0288  2A8A               	goto	u547_21
  4095  0289  2A8B               	goto	u547_20
  4096  028A                     u547_21:
  4097  028A  2ADC               	goto	i1l3366
  4098  028B                     u547_20:
  4099  028B                     i1l3360:
  4100  028B  1683               	bsf	3,5	;RP0=1, select bank1
  4101  028C  1303               	bcf	3,6	;RP1=0, select bank1
  4102  028D  0841               	movf	(sprintf@fval+3)^(0+128),w
  4103  028E  00F3               	movwf	___fleq@ff1+3
  4104  028F  0840               	movf	(sprintf@fval+2)^(0+128),w
  4105  0290  00F2               	movwf	___fleq@ff1+2
  4106  0291  083F               	movf	(sprintf@fval+1)^(0+128),w
  4107  0292  00F1               	movwf	___fleq@ff1+1
  4108  0293  083E               	movf	sprintf@fval^(0+128),w
  4109  0294  00F0               	movwf	___fleq@ff1
  4110  0295  3000               	movlw	0
  4111  0296  00F7               	movwf	___fleq@ff2+3
  4112  0297  3000               	movlw	0
  4113  0298  00F6               	movwf	___fleq@ff2+2
  4114  0299  3000               	movlw	0
  4115  029A  00F5               	movwf	___fleq@ff2+1
  4116  029B  3000               	movlw	0
  4117  029C  00F4               	movwf	___fleq@ff2
  4118  029D  160A  158A  2430  120A  118A  	fcall	___fleq
  4119  02A2  1803               	btfsc	3,0
  4120  02A3  2AA5               	goto	u548_21
  4121  02A4  2AA6               	goto	u548_20
  4122  02A5                     u548_21:
  4123  02A5  2B4E               	goto	i1l3380
  4124  02A6                     u548_20:
  4125  02A6                     i1l3362:
  4126  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  4127  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  4128  02A8  0841               	movf	(sprintf@fval+3)^(0+128),w
  4129  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  4130  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  4131  02AB  00D4               	movwf	___fltol@f1+3
  4132  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  4133  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  4134  02AE  0840               	movf	(sprintf@fval+2)^(0+128),w
  4135  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  4136  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  4137  02B1  00D3               	movwf	___fltol@f1+2
  4138  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  4139  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  4140  02B4  083F               	movf	(sprintf@fval+1)^(0+128),w
  4141  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  4142  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  4143  02B7  00D2               	movwf	___fltol@f1+1
  4144  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  4145  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  4146  02BA  083E               	movf	sprintf@fval^(0+128),w
  4147  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  4148  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  4149  02BD  00D1               	movwf	___fltol@f1
  4150  02BE  120A  158A  2006  120A  118A  	fcall	___fltol
  4151  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  4152  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  4153  02C5  0854               	movf	?___fltol+3,w
  4154  02C6  0453               	iorwf	?___fltol+2,w
  4155  02C7  0452               	iorwf	?___fltol+1,w
  4156  02C8  0451               	iorwf	?___fltol,w
  4157  02C9  1D03               	skipz
  4158  02CA  2ACC               	goto	u549_21
  4159  02CB  2ACD               	goto	u549_20
  4160  02CC                     u549_21:
  4161  02CC  2B4E               	goto	i1l3380
  4162  02CD                     u549_20:
  4163  02CD                     i1l3364:
  4164  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  4165  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  4166  02CF  0836               	movf	(sprintf@eexp+1)^(0+128),w
  4167  02D0  3A80               	xorlw	128
  4168  02D1  00FF               	movwf	btemp+1
  4169  02D2  3080               	movlw	128
  4170  02D3  027F               	subwf	btemp+1,w
  4171  02D4  1D03               	skipz
  4172  02D5  2AD8               	goto	u550_25
  4173  02D6  3002               	movlw	2
  4174  02D7  0235               	subwf	sprintf@eexp^(0+128),w
  4175  02D8                     u550_25:
  4176  02D8  1C03               	skipc
  4177  02D9  2ADB               	goto	u550_21
  4178  02DA  2ADC               	goto	u550_20
  4179  02DB                     u550_21:
  4180  02DB  2B4E               	goto	i1l3380
  4181  02DC                     u550_20:
  4182  02DC                     i1l3366:
  4183                           
  4184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  4185  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  4186  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  4187  02DE  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4188  02DF  00F3               	movwf	___flge@ff1+3
  4189  02E0  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4190  02E1  00F2               	movwf	___flge@ff1+2
  4191  02E2  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4192  02E3  00F1               	movwf	___flge@ff1+1
  4193  02E4  0837               	movf	sprintf@tmpval^(0+128),w
  4194  02E5  00F0               	movwf	___flge@ff1
  4195  02E6  3040               	movlw	64
  4196  02E7  00F7               	movwf	___flge@ff2+3
  4197  02E8  3089               	movlw	137
  4198  02E9  00F6               	movwf	___flge@ff2+2
  4199  02EA  3070               	movlw	112
  4200  02EB  00F5               	movwf	___flge@ff2+1
  4201  02EC  305F               	movlw	95
  4202  02ED  00F4               	movwf	___flge@ff2
  4203  02EE  160A  158A  26B8  120A  118A  	fcall	___flge
  4204  02F3  1803               	btfsc	3,0
  4205  02F4  2AF6               	goto	u551_21
  4206  02F5  2AF7               	goto	u551_20
  4207  02F6                     u551_21:
  4208  02F6  2B00               	goto	i1l3370
  4209  02F7                     u551_20:
  4210  02F7                     i1l3368:
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  4213  02F7  30F7               	movlw	247
  4214  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  4215  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  4216  02FA  07B5               	addwf	sprintf@eexp^(0+128),f
  4217  02FB  1803               	skipnc
  4218  02FC  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  4219  02FD  30FF               	movlw	255
  4220  02FE  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  4221                           
  4222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  4223  02FF  2B08               	goto	i1l3372
  4224  0300                     i1l3370:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  4227  0300  30F8               	movlw	248
  4228  0301  1683               	bsf	3,5	;RP0=1, select bank1
  4229  0302  1303               	bcf	3,6	;RP1=0, select bank1
  4230  0303  07B5               	addwf	sprintf@eexp^(0+128),f
  4231  0304  1803               	skipnc
  4232  0305  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  4233  0306  30FF               	movlw	255
  4234  0307  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  4235  0308                     i1l3372:
  4236                           
  4237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  4238  0308  0835               	movf	sprintf@eexp^(0+128),w
  4239  0309  120A  158A  2140  120A  118A  	fcall	_scale
  4240  030E  1283               	bcf	3,5	;RP0=0, select bank0
  4241  030F  1303               	bcf	3,6	;RP1=0, select bank0
  4242  0310  0841               	movf	?_scale+3,w
  4243  0311  1683               	bsf	3,5	;RP0=1, select bank1
  4244  0312  1303               	bcf	3,6	;RP1=0, select bank1
  4245  0313  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4246  0314  1283               	bcf	3,5	;RP0=0, select bank0
  4247  0315  1303               	bcf	3,6	;RP1=0, select bank0
  4248  0316  0840               	movf	?_scale+2,w
  4249  0317  1683               	bsf	3,5	;RP0=1, select bank1
  4250  0318  1303               	bcf	3,6	;RP1=0, select bank1
  4251  0319  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4252  031A  1283               	bcf	3,5	;RP0=0, select bank0
  4253  031B  1303               	bcf	3,6	;RP1=0, select bank0
  4254  031C  083F               	movf	?_scale+1,w
  4255  031D  1683               	bsf	3,5	;RP0=1, select bank1
  4256  031E  1303               	bcf	3,6	;RP1=0, select bank1
  4257  031F  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4258  0320  1283               	bcf	3,5	;RP0=0, select bank0
  4259  0321  1303               	bcf	3,6	;RP1=0, select bank0
  4260  0322  083E               	movf	?_scale,w
  4261  0323  1683               	bsf	3,5	;RP0=1, select bank1
  4262  0324  1303               	bcf	3,6	;RP1=0, select bank1
  4263  0325  00B7               	movwf	sprintf@tmpval^(0+128)
  4264  0326                     i1l3374:
  4265  0326  0841               	movf	(sprintf@fval+3)^(0+128),w
  4266  0327  00F3               	movwf	__div_to_l_@f1+3
  4267  0328  0840               	movf	(sprintf@fval+2)^(0+128),w
  4268  0329  00F2               	movwf	__div_to_l_@f1+2
  4269  032A  083F               	movf	(sprintf@fval+1)^(0+128),w
  4270  032B  00F1               	movwf	__div_to_l_@f1+1
  4271  032C  083E               	movf	sprintf@fval^(0+128),w
  4272  032D  00F0               	movwf	__div_to_l_@f1
  4273  032E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4274  032F  00F7               	movwf	__div_to_l_@f2+3
  4275  0330  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4276  0331  00F6               	movwf	__div_to_l_@f2+2
  4277  0332  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4278  0333  00F5               	movwf	__div_to_l_@f2+1
  4279  0334  0837               	movf	sprintf@tmpval^(0+128),w
  4280  0335  00F4               	movwf	__div_to_l_@f2
  4281  0336  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  4282  033B  0873               	movf	?__div_to_l_+3,w
  4283  033C  1683               	bsf	3,5	;RP0=1, select bank1
  4284  033D  1303               	bcf	3,6	;RP1=0, select bank1
  4285  033E  00B4               	movwf	(sprintf@val+3)^(0+128)
  4286  033F  0872               	movf	?__div_to_l_+2,w
  4287  0340  00B3               	movwf	(sprintf@val+2)^(0+128)
  4288  0341  0871               	movf	?__div_to_l_+1,w
  4289  0342  00B2               	movwf	(sprintf@val+1)^(0+128)
  4290  0343  0870               	movf	?__div_to_l_,w
  4291  0344  00B1               	movwf	sprintf@val^(0+128)
  4292  0345                     i1l3378:
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  4295  0345  3000               	movlw	0
  4296  0346  00C1               	movwf	(sprintf@fval+3)^(0+128)
  4297  0347  3000               	movlw	0
  4298  0348  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4299  0349  3000               	movlw	0
  4300  034A  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4301  034B  3000               	movlw	0
  4302  034C  00BE               	movwf	sprintf@fval^(0+128)
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  4305  034D  2BD2               	goto	i1l3386
  4306  034E                     i1l3380:
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  4309  034E  1683               	bsf	3,5	;RP0=1, select bank1
  4310  034F  1303               	bcf	3,6	;RP1=0, select bank1
  4311  0350  0841               	movf	(sprintf@fval+3)^(0+128),w
  4312  0351  1283               	bcf	3,5	;RP0=0, select bank0
  4313  0352  1303               	bcf	3,6	;RP1=0, select bank0
  4314  0353  00D4               	movwf	___fltol@f1+3
  4315  0354  1683               	bsf	3,5	;RP0=1, select bank1
  4316  0355  1303               	bcf	3,6	;RP1=0, select bank1
  4317  0356  0840               	movf	(sprintf@fval+2)^(0+128),w
  4318  0357  1283               	bcf	3,5	;RP0=0, select bank0
  4319  0358  1303               	bcf	3,6	;RP1=0, select bank0
  4320  0359  00D3               	movwf	___fltol@f1+2
  4321  035A  1683               	bsf	3,5	;RP0=1, select bank1
  4322  035B  1303               	bcf	3,6	;RP1=0, select bank1
  4323  035C  083F               	movf	(sprintf@fval+1)^(0+128),w
  4324  035D  1283               	bcf	3,5	;RP0=0, select bank0
  4325  035E  1303               	bcf	3,6	;RP1=0, select bank0
  4326  035F  00D2               	movwf	___fltol@f1+1
  4327  0360  1683               	bsf	3,5	;RP0=1, select bank1
  4328  0361  1303               	bcf	3,6	;RP1=0, select bank1
  4329  0362  083E               	movf	sprintf@fval^(0+128),w
  4330  0363  1283               	bcf	3,5	;RP0=0, select bank0
  4331  0364  1303               	bcf	3,6	;RP1=0, select bank0
  4332  0365  00D1               	movwf	___fltol@f1
  4333  0366  120A  158A  2006  120A  118A  	fcall	___fltol
  4334  036B  1283               	bcf	3,5	;RP0=0, select bank0
  4335  036C  1303               	bcf	3,6	;RP1=0, select bank0
  4336  036D  0854               	movf	?___fltol+3,w
  4337  036E  1683               	bsf	3,5	;RP0=1, select bank1
  4338  036F  1303               	bcf	3,6	;RP1=0, select bank1
  4339  0370  00B4               	movwf	(sprintf@val+3)^(0+128)
  4340  0371  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0372  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0373  0853               	movf	?___fltol+2,w
  4343  0374  1683               	bsf	3,5	;RP0=1, select bank1
  4344  0375  1303               	bcf	3,6	;RP1=0, select bank1
  4345  0376  00B3               	movwf	(sprintf@val+2)^(0+128)
  4346  0377  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0378  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0379  0852               	movf	?___fltol+1,w
  4349  037A  1683               	bsf	3,5	;RP0=1, select bank1
  4350  037B  1303               	bcf	3,6	;RP1=0, select bank1
  4351  037C  00B2               	movwf	(sprintf@val+1)^(0+128)
  4352  037D  1283               	bcf	3,5	;RP0=0, select bank0
  4353  037E  1303               	bcf	3,6	;RP1=0, select bank0
  4354  037F  0851               	movf	?___fltol,w
  4355  0380  1683               	bsf	3,5	;RP0=1, select bank1
  4356  0381  1303               	bcf	3,6	;RP1=0, select bank1
  4357  0382  00B1               	movwf	sprintf@val^(0+128)
  4358  0383                     i1l3382:
  4359                           
  4360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  4361  0383  0834               	movf	(sprintf@val+3)^(0+128),w
  4362  0384  00F3               	movwf	___xxtofl@val+3
  4363  0385  0833               	movf	(sprintf@val+2)^(0+128),w
  4364  0386  00F2               	movwf	___xxtofl@val+2
  4365  0387  0832               	movf	(sprintf@val+1)^(0+128),w
  4366  0388  00F1               	movwf	___xxtofl@val+1
  4367  0389  0831               	movf	sprintf@val^(0+128),w
  4368  038A  00F0               	movwf	___xxtofl@val
  4369  038B  3000               	movlw	0
  4370  038C  160A  118A  2019  120A  118A  	fcall	___xxtofl
  4371  0391  0873               	movf	?___xxtofl+3,w
  4372  0392  1283               	bcf	3,5	;RP0=0, select bank0
  4373  0393  1303               	bcf	3,6	;RP1=0, select bank0
  4374  0394  00E9               	movwf	___flsub@a+3
  4375  0395  0872               	movf	?___xxtofl+2,w
  4376  0396  00E8               	movwf	___flsub@a+2
  4377  0397  0871               	movf	?___xxtofl+1,w
  4378  0398  00E7               	movwf	___flsub@a+1
  4379  0399  0870               	movf	?___xxtofl,w
  4380  039A  00E6               	movwf	___flsub@a
  4381  039B  1683               	bsf	3,5	;RP0=1, select bank1
  4382  039C  1303               	bcf	3,6	;RP1=0, select bank1
  4383  039D  0841               	movf	(sprintf@fval+3)^(0+128),w
  4384  039E  1283               	bcf	3,5	;RP0=0, select bank0
  4385  039F  1303               	bcf	3,6	;RP1=0, select bank0
  4386  03A0  00ED               	movwf	___flsub@b+3
  4387  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  4388  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  4389  03A3  0840               	movf	(sprintf@fval+2)^(0+128),w
  4390  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  4391  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  4392  03A6  00EC               	movwf	___flsub@b+2
  4393  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  4394  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  4395  03A9  083F               	movf	(sprintf@fval+1)^(0+128),w
  4396  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  4397  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  4398  03AC  00EB               	movwf	___flsub@b+1
  4399  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  4400  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  4401  03AF  083E               	movf	sprintf@fval^(0+128),w
  4402  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  4403  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  4404  03B2  00EA               	movwf	___flsub@b
  4405  03B3  160A  158A  22DD  120A  118A  	fcall	___flsub
  4406  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  4407  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  4408  03BA  0869               	movf	?___flsub+3,w
  4409  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  4410  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  4411  03BD  00C1               	movwf	(sprintf@fval+3)^(0+128)
  4412  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  4413  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  4414  03C0  0868               	movf	?___flsub+2,w
  4415  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  4416  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  4417  03C3  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4418  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  4419  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  4420  03C6  0867               	movf	?___flsub+1,w
  4421  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  4422  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  4423  03C9  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4424  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  4425  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  4426  03CC  0866               	movf	?___flsub,w
  4427  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  4428  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  4429  03CF  00BE               	movwf	sprintf@fval^(0+128)
  4430  03D0                     i1l3384:
  4431                           
  4432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  4433  03D0  01B5               	clrf	sprintf@eexp^(0+128)
  4434  03D1  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  4435  03D2                     i1l3386:
  4436                           
  4437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4438  03D2  01C2               	clrf	sprintf@c^(0+128)
  4439  03D3  0AC2               	incf	sprintf@c^(0+128),f
  4440  03D4                     i1l3392:
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  4443  03D4  0842               	movf	sprintf@c^(0+128),w
  4444  03D5  00A5               	movwf	??_sprintf^(0+128)
  4445  03D6  3001               	movlw	1
  4446  03D7                     u552_25:
  4447  03D7  1003               	clrc
  4448  03D8  0DA5               	rlf	??_sprintf^(0+128),f
  4449  03D9  3EFF               	addlw	-1
  4450  03DA  1D03               	skipz
  4451  03DB  2BD7               	goto	u552_25
  4452  03DC  1003               	clrc
  4453  03DD  0D25               	rlf	??_sprintf^(0+128),w
  4454  03DE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4455  03DF  0084               	movwf	4
  4456  03E0  160A  158A  200A  120A  118A  	fcall	stringdir
  4457  03E5  00A6               	movwf	(??_sprintf+1)^(0+128)
  4458  03E6  160A  158A  200A  120A  118A  	fcall	stringdir
  4459  03EB  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  4460  03EC  160A  158A  200A  120A  118A  	fcall	stringdir
  4461  03F1  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  4462  03F2  160A  158A  200A  120A  118A  	fcall	stringdir
  4463  03F7  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  4464  03F8  0829               	movf	(??_sprintf+4)^(0+128),w
  4465  03F9  0234               	subwf	(sprintf@val+3)^(0+128),w
  4466  03FA  1D03               	skipz
  4467  03FB  2C06               	goto	u553_25
  4468  03FC  0828               	movf	(??_sprintf+3)^(0+128),w
  4469  03FD  0233               	subwf	(sprintf@val+2)^(0+128),w
  4470  03FE  1D03               	skipz
  4471  03FF  2C06               	goto	u553_25
  4472  0400  0827               	movf	(??_sprintf+2)^(0+128),w
  4473  0401  0232               	subwf	(sprintf@val+1)^(0+128),w
  4474  0402  1D03               	skipz
  4475  0403  2C06               	goto	u553_25
  4476  0404  0826               	movf	(??_sprintf+1)^(0+128),w
  4477  0405  0231               	subwf	sprintf@val^(0+128),w
  4478  0406                     u553_25:
  4479  0406  1803               	skipnc
  4480  0407  2C09               	goto	u553_21
  4481  0408  2C0A               	goto	u553_20
  4482  0409                     u553_21:
  4483  0409  2C0B               	goto	i1l3396
  4484  040A                     u553_20:
  4485  040A  2C15               	goto	i1l3398
  4486  040B                     i1l3396:
  4487  040B  3001               	movlw	1
  4488  040C  00A5               	movwf	??_sprintf^(0+128)
  4489  040D  0825               	movf	??_sprintf^(0+128),w
  4490  040E  07C2               	addwf	sprintf@c^(0+128),f
  4491  040F  300A               	movlw	10
  4492  0410  0642               	xorwf	sprintf@c^(0+128),w
  4493  0411  1D03               	btfss	3,2
  4494  0412  2C14               	goto	u554_21
  4495  0413  2C15               	goto	u554_20
  4496  0414                     u554_21:
  4497  0414  2BD4               	goto	i1l3392
  4498  0415                     u554_20:
  4499  0415                     i1l3398:
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  4502  0415  3003               	movlw	3
  4503  0416  052F               	andwf	sprintf@flag^(0+128),w
  4504  0417  00A5               	movwf	??_sprintf^(0+128)
  4505  0418  3000               	movlw	0
  4506  0419  0530               	andwf	(sprintf@flag+1)^(0+128),w
  4507  041A  00A6               	movwf	(??_sprintf+1)^(0+128)
  4508  041B  0825               	movf	??_sprintf^(0+128),w
  4509  041C  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4510  041D  1903               	btfsc	3,2
  4511  041E  2C20               	goto	u555_21
  4512  041F  2C21               	goto	u555_20
  4513  0420                     u555_21:
  4514  0420  2C93               	goto	i1l298
  4515  0421                     u555_20:
  4516  0421                     i1l3400:
  4517                           
  4518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  4519  0421  302D               	movlw	45
  4520  0422  00A5               	movwf	??_sprintf^(0+128)
  4521  0423  083B               	movf	sprintf@sp^(0+128),w
  4522  0424  0084               	movwf	4
  4523  0425  0825               	movf	??_sprintf^(0+128),w
  4524  0426  1783               	bsf	3,7	;select IRP bank2
  4525  0427  0080               	movwf	0
  4526  0428                     i1l3402:
  4527  0428  3001               	movlw	1
  4528  0429  00A5               	movwf	??_sprintf^(0+128)
  4529  042A  0825               	movf	??_sprintf^(0+128),w
  4530  042B  07BB               	addwf	sprintf@sp^(0+128),f
  4531  042C  2C93               	goto	i1l298
  4532  042D                     i1l3404:
  4533                           
  4534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  4535  042D  0842               	movf	sprintf@c^(0+128),w
  4536  042E  00A5               	movwf	??_sprintf^(0+128)
  4537  042F  3001               	movlw	1
  4538  0430                     u556_25:
  4539  0430  1003               	clrc
  4540  0431  0DA5               	rlf	??_sprintf^(0+128),f
  4541  0432  3EFF               	addlw	-1
  4542  0433  1D03               	skipz
  4543  0434  2C30               	goto	u556_25
  4544  0435  1003               	clrc
  4545  0436  0D25               	rlf	??_sprintf^(0+128),w
  4546  0437  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4547  0438  0084               	movwf	4
  4548  0439  160A  158A  200A  120A  118A  	fcall	stringdir
  4549  043E  00F0               	movwf	___lldiv@divisor
  4550  043F  160A  158A  200A  120A  118A  	fcall	stringdir
  4551  0444  00F1               	movwf	___lldiv@divisor+1
  4552  0445  160A  158A  200A  120A  118A  	fcall	stringdir
  4553  044A  00F2               	movwf	___lldiv@divisor+2
  4554  044B  160A  158A  200A  120A  118A  	fcall	stringdir
  4555  0450  00F3               	movwf	___lldiv@divisor+3
  4556  0451  0834               	movf	(sprintf@val+3)^(0+128),w
  4557  0452  00F7               	movwf	___lldiv@dividend+3
  4558  0453  0833               	movf	(sprintf@val+2)^(0+128),w
  4559  0454  00F6               	movwf	___lldiv@dividend+2
  4560  0455  0832               	movf	(sprintf@val+1)^(0+128),w
  4561  0456  00F5               	movwf	___lldiv@dividend+1
  4562  0457  0831               	movf	sprintf@val^(0+128),w
  4563  0458  00F4               	movwf	___lldiv@dividend
  4564  0459  160A  158A  257F  120A  118A  	fcall	___lldiv
  4565  045E  0873               	movf	?___lldiv+3,w
  4566  045F  1683               	bsf	3,5	;RP0=1, select bank1
  4567  0460  1303               	bcf	3,6	;RP1=0, select bank1
  4568  0461  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4569  0462  0872               	movf	?___lldiv+2,w
  4570  0463  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4571  0464  0871               	movf	?___lldiv+1,w
  4572  0465  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4573  0466  0870               	movf	?___lldiv,w
  4574  0467  00B7               	movwf	sprintf@tmpval^(0+128)
  4575  0468                     i1l3406:
  4576                           
  4577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  4578  0468  3000               	movlw	0
  4579  0469  00F3               	movwf	___llmod@divisor+3
  4580  046A  3000               	movlw	0
  4581  046B  00F2               	movwf	___llmod@divisor+2
  4582  046C  3000               	movlw	0
  4583  046D  00F1               	movwf	___llmod@divisor+1
  4584  046E  300A               	movlw	10
  4585  046F  00F0               	movwf	___llmod@divisor
  4586  0470  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4587  0471  00F7               	movwf	___llmod@dividend+3
  4588  0472  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4589  0473  00F6               	movwf	___llmod@dividend+2
  4590  0474  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4591  0475  00F5               	movwf	___llmod@dividend+1
  4592  0476  0837               	movf	sprintf@tmpval^(0+128),w
  4593  0477  00F4               	movwf	___llmod@dividend
  4594  0478  160A  158A  247E  120A  118A  	fcall	___llmod
  4595  047D  0873               	movf	?___llmod+3,w
  4596  047E  1683               	bsf	3,5	;RP0=1, select bank1
  4597  047F  1303               	bcf	3,6	;RP1=0, select bank1
  4598  0480  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4599  0481  0872               	movf	?___llmod+2,w
  4600  0482  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4601  0483  0871               	movf	?___llmod+1,w
  4602  0484  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4603  0485  0870               	movf	?___llmod,w
  4604  0486  00B7               	movwf	sprintf@tmpval^(0+128)
  4605  0487                     i1l3408:
  4606                           
  4607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  4608  0487  0837               	movf	sprintf@tmpval^(0+128),w
  4609  0488  3E30               	addlw	48
  4610  0489  00A5               	movwf	??_sprintf^(0+128)
  4611  048A  083B               	movf	sprintf@sp^(0+128),w
  4612  048B  0084               	movwf	4
  4613  048C  0825               	movf	??_sprintf^(0+128),w
  4614  048D  1783               	bsf	3,7	;select IRP bank2
  4615  048E  0080               	movwf	0
  4616  048F  3001               	movlw	1
  4617  0490  00A5               	movwf	??_sprintf^(0+128)
  4618  0491  0825               	movf	??_sprintf^(0+128),w
  4619  0492  07BB               	addwf	sprintf@sp^(0+128),f
  4620  0493                     i1l298:	
  4621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  4622                           
  4623                           
  4624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  4625  0493  3001               	movlw	1
  4626  0494  02C2               	subwf	sprintf@c^(0+128),f
  4627  0495  0A42               	incf	sprintf@c^(0+128),w
  4628  0496  1D03               	btfss	3,2
  4629  0497  2C99               	goto	u557_21
  4630  0498  2C9A               	goto	u557_20
  4631  0499                     u557_21:
  4632  0499  2C2D               	goto	i1l3404
  4633  049A                     u557_20:
  4634  049A  2CAE               	goto	i1l3416
  4635  049B                     i1l3410:
  4636                           
  4637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  4638  049B  3030               	movlw	48
  4639  049C  1683               	bsf	3,5	;RP0=1, select bank1
  4640  049D  1303               	bcf	3,6	;RP1=0, select bank1
  4641  049E  00A5               	movwf	??_sprintf^(0+128)
  4642  049F  083B               	movf	sprintf@sp^(0+128),w
  4643  04A0  0084               	movwf	4
  4644  04A1  0825               	movf	??_sprintf^(0+128),w
  4645  04A2  1783               	bsf	3,7	;select IRP bank2
  4646  04A3  0080               	movwf	0
  4647  04A4                     i1l3412:
  4648  04A4  3001               	movlw	1
  4649  04A5  00A5               	movwf	??_sprintf^(0+128)
  4650  04A6  0825               	movf	??_sprintf^(0+128),w
  4651  04A7  07BB               	addwf	sprintf@sp^(0+128),f
  4652  04A8                     i1l3414:
  4653                           
  4654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  4655  04A8  30FF               	movlw	255
  4656  04A9  07B5               	addwf	sprintf@eexp^(0+128),f
  4657  04AA  1803               	skipnc
  4658  04AB  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  4659  04AC  30FF               	movlw	255
  4660  04AD  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  4661  04AE                     i1l3416:
  4662                           
  4663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  4664  04AE  0836               	movf	(sprintf@eexp+1)^(0+128),w
  4665  04AF  3A80               	xorlw	128
  4666  04B0  00FF               	movwf	btemp+1
  4667  04B1  3080               	movlw	128
  4668  04B2  027F               	subwf	btemp+1,w
  4669  04B3  1D03               	skipz
  4670  04B4  2CB7               	goto	u558_25
  4671  04B5  3001               	movlw	1
  4672  04B6  0235               	subwf	sprintf@eexp^(0+128),w
  4673  04B7                     u558_25:
  4674  04B7  1803               	skipnc
  4675  04B8  2CBA               	goto	u558_21
  4676  04B9  2CBB               	goto	u558_20
  4677  04BA                     u558_21:
  4678  04BA  2C9B               	goto	i1l3410
  4679  04BB                     u558_20:
  4680  04BB                     i1l3418:
  4681                           
  4682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4683  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  4684  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  4685  04BD  083D               	movf	(sprintf@prec+1)^(0+128),w
  4686  04BE  3A80               	xorlw	128
  4687  04BF  00FF               	movwf	btemp+1
  4688  04C0  3080               	movlw	128
  4689  04C1  027F               	subwf	btemp+1,w
  4690  04C2  1D03               	skipz
  4691  04C3  2CC6               	goto	u559_25
  4692  04C4  3009               	movlw	9
  4693  04C5  023C               	subwf	sprintf@prec^(0+128),w
  4694  04C6                     u559_25:
  4695  04C6  1C03               	skipc
  4696  04C7  2CC9               	goto	u559_21
  4697  04C8  2CCA               	goto	u559_20
  4698  04C9                     u559_21:
  4699  04C9  2CD1               	goto	i1l3422
  4700  04CA                     u559_20:
  4701  04CA                     i1l3420:
  4702                           
  4703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  4704  04CA  3008               	movlw	8
  4705  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  4706  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  4707  04CD  00A5               	movwf	??_sprintf^(0+128)
  4708  04CE  0825               	movf	??_sprintf^(0+128),w
  4709  04CF  00C2               	movwf	sprintf@c^(0+128)
  4710  04D0  2CD7               	goto	i1l305
  4711  04D1                     i1l3422:
  4712                           
  4713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  4714  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  4715  04D2  1303               	bcf	3,6	;RP1=0, select bank1
  4716  04D3  083C               	movf	sprintf@prec^(0+128),w
  4717  04D4  00A5               	movwf	??_sprintf^(0+128)
  4718  04D5  0825               	movf	??_sprintf^(0+128),w
  4719  04D6  00C2               	movwf	sprintf@c^(0+128)
  4720  04D7                     i1l305:
  4721                           
  4722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  4723  04D7  0842               	movf	sprintf@c^(0+128),w
  4724  04D8  00A5               	movwf	??_sprintf^(0+128)
  4725  04D9  01A6               	clrf	(??_sprintf^(0+128)+1)
  4726  04DA  0825               	movf	??_sprintf^(0+128),w
  4727  04DB  02BC               	subwf	sprintf@prec^(0+128),f
  4728  04DC  0826               	movf	(??_sprintf+1)^(0+128),w
  4729  04DD  1C03               	skipc
  4730  04DE  03BD               	decf	(sprintf@prec+1)^(0+128),f
  4731  04DF  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  4732  04E0                     i1l3424:
  4733                           
  4734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  4735  04E0  0842               	movf	sprintf@c^(0+128),w
  4736  04E1  1903               	btfsc	3,2
  4737  04E2  2CE4               	goto	u560_21
  4738  04E3  2CE5               	goto	u560_20
  4739  04E4                     u560_21:
  4740  04E4  2CF0               	goto	i1l3430
  4741  04E5                     u560_20:
  4742  04E5                     i1l3426:
  4743                           
  4744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  4745  04E5  302E               	movlw	46
  4746  04E6  00A5               	movwf	??_sprintf^(0+128)
  4747  04E7  083B               	movf	sprintf@sp^(0+128),w
  4748  04E8  0084               	movwf	4
  4749  04E9  0825               	movf	??_sprintf^(0+128),w
  4750  04EA  1783               	bsf	3,7	;select IRP bank2
  4751  04EB  0080               	movwf	0
  4752  04EC                     i1l3428:
  4753  04EC  3001               	movlw	1
  4754  04ED  00A5               	movwf	??_sprintf^(0+128)
  4755  04EE  0825               	movf	??_sprintf^(0+128),w
  4756  04EF  07BB               	addwf	sprintf@sp^(0+128),f
  4757  04F0                     i1l3430:
  4758                           
  4759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4760  04F0  0842               	movf	sprintf@c^(0+128),w
  4761  04F1  120A  158A  2140  120A  118A  	fcall	_scale
  4762  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  4763  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  4764  04F8  0841               	movf	?_scale+3,w
  4765  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  4766  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  4767  04FB  00AD               	movwf	(_sprintf$1046+3)^(0+128)
  4768  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  4769  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  4770  04FE  0840               	movf	?_scale+2,w
  4771  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  4772  0500  1303               	bcf	3,6	;RP1=0, select bank1
  4773  0501  00AC               	movwf	(_sprintf$1046+2)^(0+128)
  4774  0502  1283               	bcf	3,5	;RP0=0, select bank0
  4775  0503  1303               	bcf	3,6	;RP1=0, select bank0
  4776  0504  083F               	movf	?_scale+1,w
  4777  0505  1683               	bsf	3,5	;RP0=1, select bank1
  4778  0506  1303               	bcf	3,6	;RP1=0, select bank1
  4779  0507  00AB               	movwf	(_sprintf$1046+1)^(0+128)
  4780  0508  1283               	bcf	3,5	;RP0=0, select bank0
  4781  0509  1303               	bcf	3,6	;RP1=0, select bank0
  4782  050A  083E               	movf	?_scale,w
  4783  050B  1683               	bsf	3,5	;RP0=1, select bank1
  4784  050C  1303               	bcf	3,6	;RP1=0, select bank1
  4785  050D  00AA               	movwf	_sprintf$1046^(0+128)
  4786  050E                     i1l3432:
  4787                           
  4788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4789  050E  082D               	movf	(_sprintf$1046+3)^(0+128),w
  4790  050F  1283               	bcf	3,5	;RP0=0, select bank0
  4791  0510  1303               	bcf	3,6	;RP1=0, select bank0
  4792  0511  00AB               	movwf	___flmul@a+3
  4793  0512  1683               	bsf	3,5	;RP0=1, select bank1
  4794  0513  1303               	bcf	3,6	;RP1=0, select bank1
  4795  0514  082C               	movf	(_sprintf$1046+2)^(0+128),w
  4796  0515  1283               	bcf	3,5	;RP0=0, select bank0
  4797  0516  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0517  00AA               	movwf	___flmul@a+2
  4799  0518  1683               	bsf	3,5	;RP0=1, select bank1
  4800  0519  1303               	bcf	3,6	;RP1=0, select bank1
  4801  051A  082B               	movf	(_sprintf$1046+1)^(0+128),w
  4802  051B  1283               	bcf	3,5	;RP0=0, select bank0
  4803  051C  1303               	bcf	3,6	;RP1=0, select bank0
  4804  051D  00A9               	movwf	___flmul@a+1
  4805  051E  1683               	bsf	3,5	;RP0=1, select bank1
  4806  051F  1303               	bcf	3,6	;RP1=0, select bank1
  4807  0520  082A               	movf	_sprintf$1046^(0+128),w
  4808  0521  1283               	bcf	3,5	;RP0=0, select bank0
  4809  0522  1303               	bcf	3,6	;RP1=0, select bank0
  4810  0523  00A8               	movwf	___flmul@a
  4811  0524  1683               	bsf	3,5	;RP0=1, select bank1
  4812  0525  1303               	bcf	3,6	;RP1=0, select bank1
  4813  0526  0841               	movf	(sprintf@fval+3)^(0+128),w
  4814  0527  1283               	bcf	3,5	;RP0=0, select bank0
  4815  0528  1303               	bcf	3,6	;RP1=0, select bank0
  4816  0529  00A7               	movwf	___flmul@b+3
  4817  052A  1683               	bsf	3,5	;RP0=1, select bank1
  4818  052B  1303               	bcf	3,6	;RP1=0, select bank1
  4819  052C  0840               	movf	(sprintf@fval+2)^(0+128),w
  4820  052D  1283               	bcf	3,5	;RP0=0, select bank0
  4821  052E  1303               	bcf	3,6	;RP1=0, select bank0
  4822  052F  00A6               	movwf	___flmul@b+2
  4823  0530  1683               	bsf	3,5	;RP0=1, select bank1
  4824  0531  1303               	bcf	3,6	;RP1=0, select bank1
  4825  0532  083F               	movf	(sprintf@fval+1)^(0+128),w
  4826  0533  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0534  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0535  00A5               	movwf	___flmul@b+1
  4829  0536  1683               	bsf	3,5	;RP0=1, select bank1
  4830  0537  1303               	bcf	3,6	;RP1=0, select bank1
  4831  0538  083E               	movf	sprintf@fval^(0+128),w
  4832  0539  1283               	bcf	3,5	;RP0=0, select bank0
  4833  053A  1303               	bcf	3,6	;RP1=0, select bank0
  4834  053B  00A4               	movwf	___flmul@b
  4835  053C  120A  158A  249F  120A  118A  	fcall	___flmul
  4836  0541  1283               	bcf	3,5	;RP0=0, select bank0
  4837  0542  1303               	bcf	3,6	;RP1=0, select bank0
  4838  0543  0827               	movf	?___flmul+3,w
  4839  0544  00D4               	movwf	___fltol@f1+3
  4840  0545  0826               	movf	?___flmul+2,w
  4841  0546  00D3               	movwf	___fltol@f1+2
  4842  0547  0825               	movf	?___flmul+1,w
  4843  0548  00D2               	movwf	___fltol@f1+1
  4844  0549  0824               	movf	?___flmul,w
  4845  054A  00D1               	movwf	___fltol@f1
  4846  054B  120A  158A  2006  120A  118A  	fcall	___fltol
  4847  0550  1283               	bcf	3,5	;RP0=0, select bank0
  4848  0551  1303               	bcf	3,6	;RP1=0, select bank0
  4849  0552  0854               	movf	?___fltol+3,w
  4850  0553  1683               	bsf	3,5	;RP0=1, select bank1
  4851  0554  1303               	bcf	3,6	;RP1=0, select bank1
  4852  0555  00B4               	movwf	(sprintf@val+3)^(0+128)
  4853  0556  1283               	bcf	3,5	;RP0=0, select bank0
  4854  0557  1303               	bcf	3,6	;RP1=0, select bank0
  4855  0558  0853               	movf	?___fltol+2,w
  4856  0559  1683               	bsf	3,5	;RP0=1, select bank1
  4857  055A  1303               	bcf	3,6	;RP1=0, select bank1
  4858  055B  00B3               	movwf	(sprintf@val+2)^(0+128)
  4859  055C  1283               	bcf	3,5	;RP0=0, select bank0
  4860  055D  1303               	bcf	3,6	;RP1=0, select bank0
  4861  055E  0852               	movf	?___fltol+1,w
  4862  055F  1683               	bsf	3,5	;RP0=1, select bank1
  4863  0560  1303               	bcf	3,6	;RP1=0, select bank1
  4864  0561  00B2               	movwf	(sprintf@val+1)^(0+128)
  4865  0562  1283               	bcf	3,5	;RP0=0, select bank0
  4866  0563  1303               	bcf	3,6	;RP1=0, select bank0
  4867  0564  0851               	movf	?___fltol,w
  4868  0565  1683               	bsf	3,5	;RP0=1, select bank1
  4869  0566  1303               	bcf	3,6	;RP1=0, select bank1
  4870  0567  00B1               	movwf	sprintf@val^(0+128)
  4871                           
  4872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4873  0568  2E0A               	goto	i1l3442
  4874  0569                     i1l3434:
  4875                           
  4876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  4877  0569  0842               	movf	sprintf@c^(0+128),w
  4878  056A  00A5               	movwf	??_sprintf^(0+128)
  4879  056B  3001               	movlw	1
  4880  056C                     u561_25:
  4881  056C  1003               	clrc
  4882  056D  0DA5               	rlf	??_sprintf^(0+128),f
  4883  056E  3EFF               	addlw	-1
  4884  056F  1D03               	skipz
  4885  0570  2D6C               	goto	u561_25
  4886  0571  1003               	clrc
  4887  0572  0D25               	rlf	??_sprintf^(0+128),w
  4888  0573  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4889  0574  0084               	movwf	4
  4890  0575  160A  158A  200A  120A  118A  	fcall	stringdir
  4891  057A  00F0               	movwf	___lldiv@divisor
  4892  057B  160A  158A  200A  120A  118A  	fcall	stringdir
  4893  0580  00F1               	movwf	___lldiv@divisor+1
  4894  0581  160A  158A  200A  120A  118A  	fcall	stringdir
  4895  0586  00F2               	movwf	___lldiv@divisor+2
  4896  0587  160A  158A  200A  120A  118A  	fcall	stringdir
  4897  058C  00F3               	movwf	___lldiv@divisor+3
  4898  058D  0834               	movf	(sprintf@val+3)^(0+128),w
  4899  058E  00F7               	movwf	___lldiv@dividend+3
  4900  058F  0833               	movf	(sprintf@val+2)^(0+128),w
  4901  0590  00F6               	movwf	___lldiv@dividend+2
  4902  0591  0832               	movf	(sprintf@val+1)^(0+128),w
  4903  0592  00F5               	movwf	___lldiv@dividend+1
  4904  0593  0831               	movf	sprintf@val^(0+128),w
  4905  0594  00F4               	movwf	___lldiv@dividend
  4906  0595  160A  158A  257F  120A  118A  	fcall	___lldiv
  4907  059A  0873               	movf	?___lldiv+3,w
  4908  059B  1683               	bsf	3,5	;RP0=1, select bank1
  4909  059C  1303               	bcf	3,6	;RP1=0, select bank1
  4910  059D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4911  059E  0872               	movf	?___lldiv+2,w
  4912  059F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4913  05A0  0871               	movf	?___lldiv+1,w
  4914  05A1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4915  05A2  0870               	movf	?___lldiv,w
  4916  05A3  00B7               	movwf	sprintf@tmpval^(0+128)
  4917  05A4                     i1l3436:
  4918                           
  4919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  4920  05A4  3000               	movlw	0
  4921  05A5  00F3               	movwf	___llmod@divisor+3
  4922  05A6  3000               	movlw	0
  4923  05A7  00F2               	movwf	___llmod@divisor+2
  4924  05A8  3000               	movlw	0
  4925  05A9  00F1               	movwf	___llmod@divisor+1
  4926  05AA  300A               	movlw	10
  4927  05AB  00F0               	movwf	___llmod@divisor
  4928  05AC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4929  05AD  00F7               	movwf	___llmod@dividend+3
  4930  05AE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4931  05AF  00F6               	movwf	___llmod@dividend+2
  4932  05B0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4933  05B1  00F5               	movwf	___llmod@dividend+1
  4934  05B2  0837               	movf	sprintf@tmpval^(0+128),w
  4935  05B3  00F4               	movwf	___llmod@dividend
  4936  05B4  160A  158A  247E  120A  118A  	fcall	___llmod
  4937  05B9  0873               	movf	?___llmod+3,w
  4938  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  4939  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  4940  05BC  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4941  05BD  0872               	movf	?___llmod+2,w
  4942  05BE  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4943  05BF  0871               	movf	?___llmod+1,w
  4944  05C0  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4945  05C1  0870               	movf	?___llmod,w
  4946  05C2  00B7               	movwf	sprintf@tmpval^(0+128)
  4947  05C3                     i1l3438:
  4948                           
  4949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  4950  05C3  0837               	movf	sprintf@tmpval^(0+128),w
  4951  05C4  3E30               	addlw	48
  4952  05C5  00A5               	movwf	??_sprintf^(0+128)
  4953  05C6  083B               	movf	sprintf@sp^(0+128),w
  4954  05C7  0084               	movwf	4
  4955  05C8  0825               	movf	??_sprintf^(0+128),w
  4956  05C9  1783               	bsf	3,7	;select IRP bank2
  4957  05CA  0080               	movwf	0
  4958  05CB  3001               	movlw	1
  4959  05CC  00A5               	movwf	??_sprintf^(0+128)
  4960  05CD  0825               	movf	??_sprintf^(0+128),w
  4961  05CE  07BB               	addwf	sprintf@sp^(0+128),f
  4962  05CF                     i1l3440:
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4965  05CF  0842               	movf	sprintf@c^(0+128),w
  4966  05D0  00A5               	movwf	??_sprintf^(0+128)
  4967  05D1  3001               	movlw	1
  4968  05D2                     u562_25:
  4969  05D2  1003               	clrc
  4970  05D3  0DA5               	rlf	??_sprintf^(0+128),f
  4971  05D4  3EFF               	addlw	-1
  4972  05D5  1D03               	skipz
  4973  05D6  2DD2               	goto	u562_25
  4974  05D7  1003               	clrc
  4975  05D8  0D25               	rlf	??_sprintf^(0+128),w
  4976  05D9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4977  05DA  0084               	movwf	4
  4978  05DB  160A  158A  200A  120A  118A  	fcall	stringdir
  4979  05E0  00F0               	movwf	___llmod@divisor
  4980  05E1  160A  158A  200A  120A  118A  	fcall	stringdir
  4981  05E6  00F1               	movwf	___llmod@divisor+1
  4982  05E7  160A  158A  200A  120A  118A  	fcall	stringdir
  4983  05EC  00F2               	movwf	___llmod@divisor+2
  4984  05ED  160A  158A  200A  120A  118A  	fcall	stringdir
  4985  05F2  00F3               	movwf	___llmod@divisor+3
  4986  05F3  0834               	movf	(sprintf@val+3)^(0+128),w
  4987  05F4  00F7               	movwf	___llmod@dividend+3
  4988  05F5  0833               	movf	(sprintf@val+2)^(0+128),w
  4989  05F6  00F6               	movwf	___llmod@dividend+2
  4990  05F7  0832               	movf	(sprintf@val+1)^(0+128),w
  4991  05F8  00F5               	movwf	___llmod@dividend+1
  4992  05F9  0831               	movf	sprintf@val^(0+128),w
  4993  05FA  00F4               	movwf	___llmod@dividend
  4994  05FB  160A  158A  247E  120A  118A  	fcall	___llmod
  4995  0600  0873               	movf	?___llmod+3,w
  4996  0601  1683               	bsf	3,5	;RP0=1, select bank1
  4997  0602  1303               	bcf	3,6	;RP1=0, select bank1
  4998  0603  00B4               	movwf	(sprintf@val+3)^(0+128)
  4999  0604  0872               	movf	?___llmod+2,w
  5000  0605  00B3               	movwf	(sprintf@val+2)^(0+128)
  5001  0606  0871               	movf	?___llmod+1,w
  5002  0607  00B2               	movwf	(sprintf@val+1)^(0+128)
  5003  0608  0870               	movf	?___llmod,w
  5004  0609  00B1               	movwf	sprintf@val^(0+128)
  5005  060A                     i1l3442:
  5006                           
  5007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  5008  060A  3001               	movlw	1
  5009  060B  02C2               	subwf	sprintf@c^(0+128),f
  5010  060C  0A42               	incf	sprintf@c^(0+128),w
  5011  060D  1D03               	btfss	3,2
  5012  060E  2E10               	goto	u563_21
  5013  060F  2E11               	goto	u563_20
  5014  0610                     u563_21:
  5015  0610  2D69               	goto	i1l3434
  5016  0611                     u563_20:
  5017  0611  2E23               	goto	i1l3450
  5018  0612                     i1l3444:
  5019                           
  5020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  5021  0612  3030               	movlw	48
  5022  0613  00A5               	movwf	??_sprintf^(0+128)
  5023  0614  083B               	movf	sprintf@sp^(0+128),w
  5024  0615  0084               	movwf	4
  5025  0616  0825               	movf	??_sprintf^(0+128),w
  5026  0617  1783               	bsf	3,7	;select IRP bank2
  5027  0618  0080               	movwf	0
  5028  0619                     i1l3446:
  5029  0619  3001               	movlw	1
  5030  061A  00A5               	movwf	??_sprintf^(0+128)
  5031  061B  0825               	movf	??_sprintf^(0+128),w
  5032  061C  07BB               	addwf	sprintf@sp^(0+128),f
  5033  061D                     i1l3448:
  5034                           
  5035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  5036  061D  30FF               	movlw	255
  5037  061E  07BC               	addwf	sprintf@prec^(0+128),f
  5038  061F  1803               	skipnc
  5039  0620  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  5040  0621  30FF               	movlw	255
  5041  0622  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  5042  0623                     i1l3450:
  5043                           
  5044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  5045  0623  083C               	movf	sprintf@prec^(0+128),w
  5046  0624  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  5047  0625  1D03               	btfss	3,2
  5048  0626  2E28               	goto	u564_21
  5049  0627  2E29               	goto	u564_20
  5050  0628                     u564_21:
  5051  0628  2E12               	goto	i1l3444
  5052  0629                     u564_20:
  5053  0629  2E6F               	goto	i1l3470
  5054  062A                     i1l3452:
  5055                           
  5056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  5057  062A  083C               	movf	sprintf@prec^(0+128),w
  5058  062B  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  5059  062C  1D03               	btfss	3,2
  5060  062D  2E2F               	goto	u565_21
  5061  062E  2E30               	goto	u565_20
  5062  062F                     u565_21:
  5063  062F  2E3E               	goto	i1l313
  5064  0630                     u565_20:
  5065  0630                     i1l3454:
  5066  0630  0834               	movf	(sprintf@val+3)^(0+128),w
  5067  0631  0433               	iorwf	(sprintf@val+2)^(0+128),w
  5068  0632  0432               	iorwf	(sprintf@val+1)^(0+128),w
  5069  0633  0431               	iorwf	sprintf@val^(0+128),w
  5070  0634  1D03               	skipz
  5071  0635  2E37               	goto	u566_21
  5072  0636  2E38               	goto	u566_20
  5073  0637                     u566_21:
  5074  0637  2E3E               	goto	i1l313
  5075  0638                     u566_20:
  5076  0638                     i1l3456:
  5077                           
  5078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  5079  0638  3001               	movlw	1
  5080  0639  07BC               	addwf	sprintf@prec^(0+128),f
  5081  063A  1803               	skipnc
  5082  063B  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  5083  063C  3000               	movlw	0
  5084  063D  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  5085  063E                     i1l313:
  5086                           
  5087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  5088  063E  083D               	movf	(sprintf@prec+1)^(0+128),w
  5089  063F  3A80               	xorlw	128
  5090  0640  3C80               	sublw	128
  5091  0641  1D03               	skipz
  5092  0642  2E45               	goto	u567_25
  5093  0643  083C               	movf	sprintf@prec^(0+128),w
  5094  0644  0242               	subwf	sprintf@c^(0+128),w
  5095  0645                     u567_25:
  5096  0645  1803               	skipnc
  5097  0646  2E48               	goto	u567_21
  5098  0647  2E49               	goto	u567_20
  5099  0648                     u567_21:
  5100  0648  2E4A               	goto	i1l3460
  5101  0649                     u567_20:
  5102  0649                     i1l3458:
  5103  0649  2E59               	goto	i1l3464
  5104  064A                     i1l3460:
  5105  064A  1683               	bsf	3,5	;RP0=1, select bank1
  5106  064B  1303               	bcf	3,6	;RP1=0, select bank1
  5107  064C  083D               	movf	(sprintf@prec+1)^(0+128),w
  5108  064D  3A80               	xorlw	128
  5109  064E  00A5               	movwf	??_sprintf^(0+128)
  5110  064F  3080               	movlw	128
  5111  0650  0225               	subwf	??_sprintf^(0+128),w
  5112  0651  1D03               	skipz
  5113  0652  2E55               	goto	u568_25
  5114  0653  0842               	movf	sprintf@c^(0+128),w
  5115  0654  023C               	subwf	sprintf@prec^(0+128),w
  5116  0655                     u568_25:
  5117  0655  1803               	skipnc
  5118  0656  2E58               	goto	u568_21
  5119  0657  2E59               	goto	u568_20
  5120  0658                     u568_21:
  5121  0658  2E59               	goto	i1l3464
  5122  0659                     u568_20:
  5123  0659                     i1l3462:
  5124  0659                     i1l3464:
  5125                           
  5126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  5127  0659  3003               	movlw	3
  5128  065A  1683               	bsf	3,5	;RP0=1, select bank1
  5129  065B  1303               	bcf	3,6	;RP1=0, select bank1
  5130  065C  052F               	andwf	sprintf@flag^(0+128),w
  5131  065D  00A5               	movwf	??_sprintf^(0+128)
  5132  065E  3000               	movlw	0
  5133  065F  0530               	andwf	(sprintf@flag+1)^(0+128),w
  5134  0660  00A6               	movwf	(??_sprintf+1)^(0+128)
  5135  0661  0825               	movf	??_sprintf^(0+128),w
  5136  0662  0426               	iorwf	(??_sprintf^(0+128)+1),w
  5137  0663  1903               	btfsc	3,2
  5138  0664  2E66               	goto	u569_21
  5139  0665  2E67               	goto	u569_20
  5140  0666                     u569_21:
  5141  0666  2E6F               	goto	i1l3470
  5142  0667                     u569_20:
  5143  0667                     i1l3466:
  5144                           
  5145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  5146  0667  302D               	movlw	45
  5147  0668  00A5               	movwf	??_sprintf^(0+128)
  5148  0669  083B               	movf	sprintf@sp^(0+128),w
  5149  066A  0084               	movwf	4
  5150  066B  0825               	movf	??_sprintf^(0+128),w
  5151  066C  1783               	bsf	3,7	;select IRP bank2
  5152  066D  0080               	movwf	0
  5153  066E  2843               	goto	i1l3282
  5154  066F                     i1l3470:
  5155                           
  5156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  5157  066F  3001               	movlw	1
  5158  0670  07A0               	addwf	sprintf@f^(0+128),f
  5159  0671  30FF               	movlw	-1
  5160  0672  0720               	addwf	sprintf@f^(0+128),w
  5161  0673  0084               	movwf	4
  5162  0674  160A  158A  200A  120A  118A  	fcall	stringdir
  5163  0679  00A5               	movwf	??_sprintf^(0+128)
  5164  067A  0825               	movf	??_sprintf^(0+128),w
  5165  067B  00C2               	movwf	sprintf@c^(0+128)
  5166  067C  0842               	movf	sprintf@c^(0+128),w
  5167  067D  1D03               	btfss	3,2
  5168  067E  2E80               	goto	u570_21
  5169  067F  2E81               	goto	u570_20
  5170  0680                     u570_21:
  5171  0680  2836               	goto	i1l3278
  5172  0681                     u570_20:
  5173  0681                     i1l3472:
  5174                           
  5175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  5176  0681  083B               	movf	sprintf@sp^(0+128),w
  5177  0682  0084               	movwf	4
  5178  0683  1783               	bsf	3,7	;select IRP bank2
  5179  0684  0180               	clrf	0
  5180  0685                     i1l319:
  5181  0685  0008               	return
  5182  0686                     __end_of_sprintf:
  5183                           
  5184                           	psect	text18
  5185  0940                     __ptext18:	
  5186 ;; *************** function _scale *****************
  5187 ;; Defined at:
  5188 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  scl             1    wreg     char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  scl             1   48[BANK0 ] char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  4   30[BANK0 ] char 
  5195 ;; Registers used:
  5196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5202 ;;      Params:         0       4       0       0       0
  5203 ;;      Locals:         0       5       0       0       0
  5204 ;;      Temps:          0      10       0       0       0
  5205 ;;      Totals:         0      19       0       0       0
  5206 ;;Total ram usage:       19 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    2
  5209 ;; This function calls:
  5210 ;;		___awdiv
  5211 ;;		___awmod
  5212 ;;		___flmul
  5213 ;; This function is called by:
  5214 ;;		_sprintf
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           
  5219                           ;psect for function _scale
  5220  0940                     _scale:
  5221                           
  5222                           ;incstack = 0
  5223 ;; using string table level
  5224                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5225                           ;scale@scl stored from wreg
  5226  0940  1283               	bcf	3,5	;RP0=0, select bank0
  5227  0941  1303               	bcf	3,6	;RP1=0, select bank0
  5228  0942  00D0               	movwf	scale@scl
  5229  0943                     i1l2850:
  5230                           
  5231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  5232  0943  1FD0               	btfss	scale@scl,7
  5233  0944  2946               	goto	u432_21
  5234  0945  2947               	goto	u432_20
  5235  0946                     u432_21:
  5236  0946  2AF4               	goto	i1l2872
  5237  0947                     u432_20:
  5238  0947                     i1l2852:
  5239                           
  5240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  5241  0947  09D0               	comf	scale@scl,f
  5242  0948  0AD0               	incf	scale@scl,f
  5243  0949                     i1l2854:
  5244                           
  5245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  5246  0949  0850               	movf	scale@scl,w
  5247  094A  3A80               	xorlw	128
  5248  094B  3E12               	addlw	-238
  5249  094C  1C03               	skipc
  5250  094D  294F               	goto	u433_21
  5251  094E  2950               	goto	u433_20
  5252  094F                     u433_21:
  5253  094F  2A38               	goto	i1l2862
  5254  0950                     u433_20:
  5255  0950                     i1l2856:
  5256                           
  5257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  5258  0950  300A               	movlw	10
  5259  0951  00F7               	movwf	___awdiv@divisor
  5260  0952  3000               	movlw	0
  5261  0953  00F8               	movwf	___awdiv@divisor+1
  5262  0954  0850               	movf	scale@scl,w
  5263  0955  00F2               	movwf	___awmod@dividend
  5264  0956  01F3               	clrf	___awmod@dividend+1
  5265  0957  1BF2               	btfsc	___awmod@dividend,7
  5266  0958  03F3               	decf	___awmod@dividend+1,f
  5267  0959  3064               	movlw	100
  5268  095A  00F0               	movwf	___awmod@divisor
  5269  095B  3000               	movlw	0
  5270  095C  00F1               	movwf	___awmod@divisor+1
  5271  095D  160A  158A  2526  120A  158A  	fcall	___awmod
  5272  0962  0871               	movf	?___awmod+1,w
  5273  0963  00FA               	movwf	___awdiv@dividend+1
  5274  0964  0870               	movf	?___awmod,w
  5275  0965  00F9               	movwf	___awdiv@dividend
  5276  0966  160A  158A  25E5  120A  158A  	fcall	___awdiv
  5277  096B  0877               	movf	?___awdiv,w
  5278  096C  1283               	bcf	3,5	;RP0=0, select bank0
  5279  096D  1303               	bcf	3,6	;RP1=0, select bank0
  5280  096E  00C2               	movwf	??_scale
  5281  096F  3001               	movlw	1
  5282  0970                     u434_25:
  5283  0970  1003               	clrc
  5284  0971  0DC2               	rlf	??_scale,f
  5285  0972  3EFF               	addlw	-1
  5286  0973  1D03               	skipz
  5287  0974  2970               	goto	u434_25
  5288  0975  1003               	clrc
  5289  0976  0D42               	rlf	??_scale,w
  5290  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5291  0978  0084               	movwf	4
  5292  0979  160A  158A  200A  120A  158A  	fcall	stringdir
  5293  097E  00C3               	movwf	??_scale+1
  5294  097F  160A  158A  200A  120A  158A  	fcall	stringdir
  5295  0984  00C4               	movwf	??_scale+2
  5296  0985  160A  158A  200A  120A  158A  	fcall	stringdir
  5297  098A  00C5               	movwf	??_scale+3
  5298  098B  160A  158A  200A  120A  158A  	fcall	stringdir
  5299  0990  00C6               	movwf	??_scale+4
  5300  0991  0846               	movf	??_scale+4,w
  5301  0992  00A7               	movwf	___flmul@b+3
  5302  0993  0845               	movf	??_scale+3,w
  5303  0994  00A6               	movwf	___flmul@b+2
  5304  0995  0844               	movf	??_scale+2,w
  5305  0996  00A5               	movwf	___flmul@b+1
  5306  0997  0843               	movf	??_scale+1,w
  5307  0998  00A4               	movwf	___flmul@b
  5308  0999  3064               	movlw	100
  5309  099A  00F7               	movwf	___awdiv@divisor
  5310  099B  3000               	movlw	0
  5311  099C  00F8               	movwf	___awdiv@divisor+1
  5312  099D  0850               	movf	scale@scl,w
  5313  099E  00F9               	movwf	___awdiv@dividend
  5314  099F  01FA               	clrf	___awdiv@dividend+1
  5315  09A0  1BF9               	btfsc	___awdiv@dividend,7
  5316  09A1  03FA               	decf	___awdiv@dividend+1,f
  5317  09A2  160A  158A  25E5  120A  158A  	fcall	___awdiv
  5318  09A7  0877               	movf	?___awdiv,w
  5319  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  5320  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  5321  09AA  00C7               	movwf	??_scale+5
  5322  09AB  3001               	movlw	1
  5323  09AC                     u435_25:
  5324  09AC  1003               	clrc
  5325  09AD  0DC7               	rlf	??_scale+5,f
  5326  09AE  3EFF               	addlw	-1
  5327  09AF  1D03               	skipz
  5328  09B0  29AC               	goto	u435_25
  5329  09B1  1003               	clrc
  5330  09B2  0D47               	rlf	??_scale+5,w
  5331  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5332  09B4  0084               	movwf	4
  5333  09B5  160A  158A  200A  120A  158A  	fcall	stringdir
  5334  09BA  00C8               	movwf	??_scale+6
  5335  09BB  160A  158A  200A  120A  158A  	fcall	stringdir
  5336  09C0  00C9               	movwf	??_scale+7
  5337  09C1  160A  158A  200A  120A  158A  	fcall	stringdir
  5338  09C6  00CA               	movwf	??_scale+8
  5339  09C7  160A  158A  200A  120A  158A  	fcall	stringdir
  5340  09CC  00CB               	movwf	??_scale+9
  5341  09CD  084B               	movf	??_scale+9,w
  5342  09CE  00AB               	movwf	___flmul@a+3
  5343  09CF  084A               	movf	??_scale+8,w
  5344  09D0  00AA               	movwf	___flmul@a+2
  5345  09D1  0849               	movf	??_scale+7,w
  5346  09D2  00A9               	movwf	___flmul@a+1
  5347  09D3  0848               	movf	??_scale+6,w
  5348  09D4  00A8               	movwf	___flmul@a
  5349  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  5350  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  5351  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  5352  09DC  0827               	movf	?___flmul+3,w
  5353  09DD  00CF               	movwf	_scale$1045+3
  5354  09DE  0826               	movf	?___flmul+2,w
  5355  09DF  00CE               	movwf	_scale$1045+2
  5356  09E0  0825               	movf	?___flmul+1,w
  5357  09E1  00CD               	movwf	_scale$1045+1
  5358  09E2  0824               	movf	?___flmul,w
  5359  09E3  00CC               	movwf	_scale$1045
  5360                           
  5361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  5362  09E4  300A               	movlw	10
  5363  09E5  00F0               	movwf	___awmod@divisor
  5364  09E6  3000               	movlw	0
  5365  09E7  00F1               	movwf	___awmod@divisor+1
  5366  09E8  0850               	movf	scale@scl,w
  5367  09E9  00F2               	movwf	___awmod@dividend
  5368  09EA  01F3               	clrf	___awmod@dividend+1
  5369  09EB  1BF2               	btfsc	___awmod@dividend,7
  5370  09EC  03F3               	decf	___awmod@dividend+1,f
  5371  09ED  160A  158A  2526  120A  158A  	fcall	___awmod
  5372  09F2  0870               	movf	?___awmod,w
  5373  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  5374  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  5375  09F5  00C2               	movwf	??_scale
  5376  09F6  3001               	movlw	1
  5377  09F7                     u436_25:
  5378  09F7  1003               	clrc
  5379  09F8  0DC2               	rlf	??_scale,f
  5380  09F9  3EFF               	addlw	-1
  5381  09FA  1D03               	skipz
  5382  09FB  29F7               	goto	u436_25
  5383  09FC  1003               	clrc
  5384  09FD  0D42               	rlf	??_scale,w
  5385  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5386  09FF  0084               	movwf	4
  5387  0A00  160A  158A  200A  120A  158A  	fcall	stringdir
  5388  0A05  00C3               	movwf	??_scale+1
  5389  0A06  160A  158A  200A  120A  158A  	fcall	stringdir
  5390  0A0B  00C4               	movwf	??_scale+2
  5391  0A0C  160A  158A  200A  120A  158A  	fcall	stringdir
  5392  0A11  00C5               	movwf	??_scale+3
  5393  0A12  160A  158A  200A  120A  158A  	fcall	stringdir
  5394  0A17  00C6               	movwf	??_scale+4
  5395  0A18  0846               	movf	??_scale+4,w
  5396  0A19  00A7               	movwf	___flmul@b+3
  5397  0A1A  0845               	movf	??_scale+3,w
  5398  0A1B  00A6               	movwf	___flmul@b+2
  5399  0A1C  0844               	movf	??_scale+2,w
  5400  0A1D  00A5               	movwf	___flmul@b+1
  5401  0A1E  0843               	movf	??_scale+1,w
  5402  0A1F  00A4               	movwf	___flmul@b
  5403  0A20  084F               	movf	_scale$1045+3,w
  5404  0A21  00AB               	movwf	___flmul@a+3
  5405  0A22  084E               	movf	_scale$1045+2,w
  5406  0A23  00AA               	movwf	___flmul@a+2
  5407  0A24  084D               	movf	_scale$1045+1,w
  5408  0A25  00A9               	movwf	___flmul@a+1
  5409  0A26  084C               	movf	_scale$1045,w
  5410  0A27  00A8               	movwf	___flmul@a
  5411  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  5412  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  5413  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  5414  0A2F  0827               	movf	?___flmul+3,w
  5415  0A30  00C1               	movwf	?_scale+3
  5416  0A31  0826               	movf	?___flmul+2,w
  5417  0A32  00C0               	movwf	?_scale+2
  5418  0A33  0825               	movf	?___flmul+1,w
  5419  0A34  00BF               	movwf	?_scale+1
  5420  0A35  0824               	movf	?___flmul,w
  5421  0A36  00BE               	movwf	?_scale
  5422  0A37  2C9E               	goto	i1l253
  5423  0A38                     i1l2862:
  5424  0A38  0850               	movf	scale@scl,w
  5425  0A39  3A80               	xorlw	128
  5426  0A3A  3E75               	addlw	-139
  5427  0A3B  1C03               	skipc
  5428  0A3C  2A3E               	goto	u437_21
  5429  0A3D  2A3F               	goto	u437_20
  5430  0A3E                     u437_21:
  5431  0A3E  2AC7               	goto	i1l2868
  5432  0A3F                     u437_20:
  5433  0A3F                     i1l2864:
  5434                           
  5435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5436  0A3F  300A               	movlw	10
  5437  0A40  00F0               	movwf	___awmod@divisor
  5438  0A41  3000               	movlw	0
  5439  0A42  00F1               	movwf	___awmod@divisor+1
  5440  0A43  0850               	movf	scale@scl,w
  5441  0A44  00F2               	movwf	___awmod@dividend
  5442  0A45  01F3               	clrf	___awmod@dividend+1
  5443  0A46  1BF2               	btfsc	___awmod@dividend,7
  5444  0A47  03F3               	decf	___awmod@dividend+1,f
  5445  0A48  160A  158A  2526  120A  158A  	fcall	___awmod
  5446  0A4D  0870               	movf	?___awmod,w
  5447  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  5448  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  5449  0A50  00C2               	movwf	??_scale
  5450  0A51  3001               	movlw	1
  5451  0A52                     u438_25:
  5452  0A52  1003               	clrc
  5453  0A53  0DC2               	rlf	??_scale,f
  5454  0A54  3EFF               	addlw	-1
  5455  0A55  1D03               	skipz
  5456  0A56  2A52               	goto	u438_25
  5457  0A57  1003               	clrc
  5458  0A58  0D42               	rlf	??_scale,w
  5459  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5460  0A5A  0084               	movwf	4
  5461  0A5B  160A  158A  200A  120A  158A  	fcall	stringdir
  5462  0A60  00C3               	movwf	??_scale+1
  5463  0A61  160A  158A  200A  120A  158A  	fcall	stringdir
  5464  0A66  00C4               	movwf	??_scale+2
  5465  0A67  160A  158A  200A  120A  158A  	fcall	stringdir
  5466  0A6C  00C5               	movwf	??_scale+3
  5467  0A6D  160A  158A  200A  120A  158A  	fcall	stringdir
  5468  0A72  00C6               	movwf	??_scale+4
  5469  0A73  0846               	movf	??_scale+4,w
  5470  0A74  00A7               	movwf	___flmul@b+3
  5471  0A75  0845               	movf	??_scale+3,w
  5472  0A76  00A6               	movwf	___flmul@b+2
  5473  0A77  0844               	movf	??_scale+2,w
  5474  0A78  00A5               	movwf	___flmul@b+1
  5475  0A79  0843               	movf	??_scale+1,w
  5476  0A7A  00A4               	movwf	___flmul@b
  5477  0A7B  300A               	movlw	10
  5478  0A7C  00F7               	movwf	___awdiv@divisor
  5479  0A7D  3000               	movlw	0
  5480  0A7E  00F8               	movwf	___awdiv@divisor+1
  5481  0A7F  0850               	movf	scale@scl,w
  5482  0A80  00F9               	movwf	___awdiv@dividend
  5483  0A81  01FA               	clrf	___awdiv@dividend+1
  5484  0A82  1BF9               	btfsc	___awdiv@dividend,7
  5485  0A83  03FA               	decf	___awdiv@dividend+1,f
  5486  0A84  160A  158A  25E5  120A  158A  	fcall	___awdiv
  5487  0A89  0877               	movf	?___awdiv,w
  5488  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  5489  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  5490  0A8C  00C7               	movwf	??_scale+5
  5491  0A8D  3001               	movlw	1
  5492  0A8E                     u439_25:
  5493  0A8E  1003               	clrc
  5494  0A8F  0DC7               	rlf	??_scale+5,f
  5495  0A90  3EFF               	addlw	-1
  5496  0A91  1D03               	skipz
  5497  0A92  2A8E               	goto	u439_25
  5498  0A93  1003               	clrc
  5499  0A94  0D47               	rlf	??_scale+5,w
  5500  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5501  0A96  0084               	movwf	4
  5502  0A97  160A  158A  200A  120A  158A  	fcall	stringdir
  5503  0A9C  00C8               	movwf	??_scale+6
  5504  0A9D  160A  158A  200A  120A  158A  	fcall	stringdir
  5505  0AA2  00C9               	movwf	??_scale+7
  5506  0AA3  160A  158A  200A  120A  158A  	fcall	stringdir
  5507  0AA8  00CA               	movwf	??_scale+8
  5508  0AA9  160A  158A  200A  120A  158A  	fcall	stringdir
  5509  0AAE  00CB               	movwf	??_scale+9
  5510  0AAF  084B               	movf	??_scale+9,w
  5511  0AB0  00AB               	movwf	___flmul@a+3
  5512  0AB1  084A               	movf	??_scale+8,w
  5513  0AB2  00AA               	movwf	___flmul@a+2
  5514  0AB3  0849               	movf	??_scale+7,w
  5515  0AB4  00A9               	movwf	___flmul@a+1
  5516  0AB5  0848               	movf	??_scale+6,w
  5517  0AB6  00A8               	movwf	___flmul@a
  5518  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  5519  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  5520  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  5521  0ABE  0827               	movf	?___flmul+3,w
  5522  0ABF  00C1               	movwf	?_scale+3
  5523  0AC0  0826               	movf	?___flmul+2,w
  5524  0AC1  00C0               	movwf	?_scale+2
  5525  0AC2  0825               	movf	?___flmul+1,w
  5526  0AC3  00BF               	movwf	?_scale+1
  5527  0AC4  0824               	movf	?___flmul,w
  5528  0AC5  00BE               	movwf	?_scale
  5529  0AC6  2C9E               	goto	i1l253
  5530  0AC7                     i1l2868:
  5531                           
  5532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  5533  0AC7  0850               	movf	scale@scl,w
  5534  0AC8  00C2               	movwf	??_scale
  5535  0AC9  3001               	movlw	1
  5536  0ACA                     u440_25:
  5537  0ACA  1003               	clrc
  5538  0ACB  0DC2               	rlf	??_scale,f
  5539  0ACC  3EFF               	addlw	-1
  5540  0ACD  1D03               	skipz
  5541  0ACE  2ACA               	goto	u440_25
  5542  0ACF  1003               	clrc
  5543  0AD0  0D42               	rlf	??_scale,w
  5544  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5545  0AD2  0084               	movwf	4
  5546  0AD3  160A  158A  200A  120A  158A  	fcall	stringdir
  5547  0AD8  00C3               	movwf	??_scale+1
  5548  0AD9  160A  158A  200A  120A  158A  	fcall	stringdir
  5549  0ADE  00C4               	movwf	??_scale+2
  5550  0ADF  160A  158A  200A  120A  158A  	fcall	stringdir
  5551  0AE4  00C5               	movwf	??_scale+3
  5552  0AE5  160A  158A  200A  120A  158A  	fcall	stringdir
  5553  0AEA  00C6               	movwf	??_scale+4
  5554  0AEB  0846               	movf	??_scale+4,w
  5555  0AEC  00C1               	movwf	?_scale+3
  5556  0AED  0845               	movf	??_scale+3,w
  5557  0AEE  00C0               	movwf	?_scale+2
  5558  0AEF  0844               	movf	??_scale+2,w
  5559  0AF0  00BF               	movwf	?_scale+1
  5560  0AF1  0843               	movf	??_scale+1,w
  5561  0AF2  00BE               	movwf	?_scale
  5562  0AF3  2C9E               	goto	i1l253
  5563  0AF4                     i1l2872:
  5564                           
  5565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  5566  0AF4  0850               	movf	scale@scl,w
  5567  0AF5  3A80               	xorlw	128
  5568  0AF6  3E12               	addlw	-238
  5569  0AF7  1C03               	skipc
  5570  0AF8  2AFA               	goto	u441_21
  5571  0AF9  2AFB               	goto	u441_20
  5572  0AFA                     u441_21:
  5573  0AFA  2BE3               	goto	i1l2880
  5574  0AFB                     u441_20:
  5575  0AFB                     i1l2874:
  5576                           
  5577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5578  0AFB  300A               	movlw	10
  5579  0AFC  00F7               	movwf	___awdiv@divisor
  5580  0AFD  3000               	movlw	0
  5581  0AFE  00F8               	movwf	___awdiv@divisor+1
  5582  0AFF  0850               	movf	scale@scl,w
  5583  0B00  00F2               	movwf	___awmod@dividend
  5584  0B01  01F3               	clrf	___awmod@dividend+1
  5585  0B02  1BF2               	btfsc	___awmod@dividend,7
  5586  0B03  03F3               	decf	___awmod@dividend+1,f
  5587  0B04  3064               	movlw	100
  5588  0B05  00F0               	movwf	___awmod@divisor
  5589  0B06  3000               	movlw	0
  5590  0B07  00F1               	movwf	___awmod@divisor+1
  5591  0B08  160A  158A  2526  120A  158A  	fcall	___awmod
  5592  0B0D  0871               	movf	?___awmod+1,w
  5593  0B0E  00FA               	movwf	___awdiv@dividend+1
  5594  0B0F  0870               	movf	?___awmod,w
  5595  0B10  00F9               	movwf	___awdiv@dividend
  5596  0B11  160A  158A  25E5  120A  158A  	fcall	___awdiv
  5597  0B16  0877               	movf	?___awdiv,w
  5598  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  5599  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  5600  0B19  00C2               	movwf	??_scale
  5601  0B1A  3001               	movlw	1
  5602  0B1B                     u442_25:
  5603  0B1B  1003               	clrc
  5604  0B1C  0DC2               	rlf	??_scale,f
  5605  0B1D  3EFF               	addlw	-1
  5606  0B1E  1D03               	skipz
  5607  0B1F  2B1B               	goto	u442_25
  5608  0B20  1003               	clrc
  5609  0B21  0D42               	rlf	??_scale,w
  5610  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5611  0B23  0084               	movwf	4
  5612  0B24  160A  158A  200A  120A  158A  	fcall	stringdir
  5613  0B29  00C3               	movwf	??_scale+1
  5614  0B2A  160A  158A  200A  120A  158A  	fcall	stringdir
  5615  0B2F  00C4               	movwf	??_scale+2
  5616  0B30  160A  158A  200A  120A  158A  	fcall	stringdir
  5617  0B35  00C5               	movwf	??_scale+3
  5618  0B36  160A  158A  200A  120A  158A  	fcall	stringdir
  5619  0B3B  00C6               	movwf	??_scale+4
  5620  0B3C  0846               	movf	??_scale+4,w
  5621  0B3D  00A7               	movwf	___flmul@b+3
  5622  0B3E  0845               	movf	??_scale+3,w
  5623  0B3F  00A6               	movwf	___flmul@b+2
  5624  0B40  0844               	movf	??_scale+2,w
  5625  0B41  00A5               	movwf	___flmul@b+1
  5626  0B42  0843               	movf	??_scale+1,w
  5627  0B43  00A4               	movwf	___flmul@b
  5628  0B44  3064               	movlw	100
  5629  0B45  00F7               	movwf	___awdiv@divisor
  5630  0B46  3000               	movlw	0
  5631  0B47  00F8               	movwf	___awdiv@divisor+1
  5632  0B48  0850               	movf	scale@scl,w
  5633  0B49  00F9               	movwf	___awdiv@dividend
  5634  0B4A  01FA               	clrf	___awdiv@dividend+1
  5635  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  5636  0B4C  03FA               	decf	___awdiv@dividend+1,f
  5637  0B4D  160A  158A  25E5  120A  158A  	fcall	___awdiv
  5638  0B52  0877               	movf	?___awdiv,w
  5639  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  5640  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  5641  0B55  00C7               	movwf	??_scale+5
  5642  0B56  3001               	movlw	1
  5643  0B57                     u443_25:
  5644  0B57  1003               	clrc
  5645  0B58  0DC7               	rlf	??_scale+5,f
  5646  0B59  3EFF               	addlw	-1
  5647  0B5A  1D03               	skipz
  5648  0B5B  2B57               	goto	u443_25
  5649  0B5C  1003               	clrc
  5650  0B5D  0D47               	rlf	??_scale+5,w
  5651  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  5652  0B5F  0084               	movwf	4
  5653  0B60  160A  158A  200A  120A  158A  	fcall	stringdir
  5654  0B65  00C8               	movwf	??_scale+6
  5655  0B66  160A  158A  200A  120A  158A  	fcall	stringdir
  5656  0B6B  00C9               	movwf	??_scale+7
  5657  0B6C  160A  158A  200A  120A  158A  	fcall	stringdir
  5658  0B71  00CA               	movwf	??_scale+8
  5659  0B72  160A  158A  200A  120A  158A  	fcall	stringdir
  5660  0B77  00CB               	movwf	??_scale+9
  5661  0B78  084B               	movf	??_scale+9,w
  5662  0B79  00AB               	movwf	___flmul@a+3
  5663  0B7A  084A               	movf	??_scale+8,w
  5664  0B7B  00AA               	movwf	___flmul@a+2
  5665  0B7C  0849               	movf	??_scale+7,w
  5666  0B7D  00A9               	movwf	___flmul@a+1
  5667  0B7E  0848               	movf	??_scale+6,w
  5668  0B7F  00A8               	movwf	___flmul@a
  5669  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  5670  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  5671  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  5672  0B87  0827               	movf	?___flmul+3,w
  5673  0B88  00CF               	movwf	_scale$1045+3
  5674  0B89  0826               	movf	?___flmul+2,w
  5675  0B8A  00CE               	movwf	_scale$1045+2
  5676  0B8B  0825               	movf	?___flmul+1,w
  5677  0B8C  00CD               	movwf	_scale$1045+1
  5678  0B8D  0824               	movf	?___flmul,w
  5679  0B8E  00CC               	movwf	_scale$1045
  5680                           
  5681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5682  0B8F  300A               	movlw	10
  5683  0B90  00F0               	movwf	___awmod@divisor
  5684  0B91  3000               	movlw	0
  5685  0B92  00F1               	movwf	___awmod@divisor+1
  5686  0B93  0850               	movf	scale@scl,w
  5687  0B94  00F2               	movwf	___awmod@dividend
  5688  0B95  01F3               	clrf	___awmod@dividend+1
  5689  0B96  1BF2               	btfsc	___awmod@dividend,7
  5690  0B97  03F3               	decf	___awmod@dividend+1,f
  5691  0B98  160A  158A  2526  120A  158A  	fcall	___awmod
  5692  0B9D  0870               	movf	?___awmod,w
  5693  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  5694  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  5695  0BA0  00C2               	movwf	??_scale
  5696  0BA1  3001               	movlw	1
  5697  0BA2                     u444_25:
  5698  0BA2  1003               	clrc
  5699  0BA3  0DC2               	rlf	??_scale,f
  5700  0BA4  3EFF               	addlw	-1
  5701  0BA5  1D03               	skipz
  5702  0BA6  2BA2               	goto	u444_25
  5703  0BA7  1003               	clrc
  5704  0BA8  0D42               	rlf	??_scale,w
  5705  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5706  0BAA  0084               	movwf	4
  5707  0BAB  160A  158A  200A  120A  158A  	fcall	stringdir
  5708  0BB0  00C3               	movwf	??_scale+1
  5709  0BB1  160A  158A  200A  120A  158A  	fcall	stringdir
  5710  0BB6  00C4               	movwf	??_scale+2
  5711  0BB7  160A  158A  200A  120A  158A  	fcall	stringdir
  5712  0BBC  00C5               	movwf	??_scale+3
  5713  0BBD  160A  158A  200A  120A  158A  	fcall	stringdir
  5714  0BC2  00C6               	movwf	??_scale+4
  5715  0BC3  0846               	movf	??_scale+4,w
  5716  0BC4  00A7               	movwf	___flmul@b+3
  5717  0BC5  0845               	movf	??_scale+3,w
  5718  0BC6  00A6               	movwf	___flmul@b+2
  5719  0BC7  0844               	movf	??_scale+2,w
  5720  0BC8  00A5               	movwf	___flmul@b+1
  5721  0BC9  0843               	movf	??_scale+1,w
  5722  0BCA  00A4               	movwf	___flmul@b
  5723  0BCB  084F               	movf	_scale$1045+3,w
  5724  0BCC  00AB               	movwf	___flmul@a+3
  5725  0BCD  084E               	movf	_scale$1045+2,w
  5726  0BCE  00AA               	movwf	___flmul@a+2
  5727  0BCF  084D               	movf	_scale$1045+1,w
  5728  0BD0  00A9               	movwf	___flmul@a+1
  5729  0BD1  084C               	movf	_scale$1045,w
  5730  0BD2  00A8               	movwf	___flmul@a
  5731  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  5732  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  5733  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  5734  0BDA  0827               	movf	?___flmul+3,w
  5735  0BDB  00C1               	movwf	?_scale+3
  5736  0BDC  0826               	movf	?___flmul+2,w
  5737  0BDD  00C0               	movwf	?_scale+2
  5738  0BDE  0825               	movf	?___flmul+1,w
  5739  0BDF  00BF               	movwf	?_scale+1
  5740  0BE0  0824               	movf	?___flmul,w
  5741  0BE1  00BE               	movwf	?_scale
  5742  0BE2  2C9E               	goto	i1l253
  5743  0BE3                     i1l2880:
  5744  0BE3  0850               	movf	scale@scl,w
  5745  0BE4  3A80               	xorlw	128
  5746  0BE5  3E75               	addlw	-139
  5747  0BE6  1C03               	skipc
  5748  0BE7  2BE9               	goto	u445_21
  5749  0BE8  2BEA               	goto	u445_20
  5750  0BE9                     u445_21:
  5751  0BE9  2C72               	goto	i1l2886
  5752  0BEA                     u445_20:
  5753  0BEA                     i1l2882:
  5754                           
  5755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  5756  0BEA  300A               	movlw	10
  5757  0BEB  00F0               	movwf	___awmod@divisor
  5758  0BEC  3000               	movlw	0
  5759  0BED  00F1               	movwf	___awmod@divisor+1
  5760  0BEE  0850               	movf	scale@scl,w
  5761  0BEF  00F2               	movwf	___awmod@dividend
  5762  0BF0  01F3               	clrf	___awmod@dividend+1
  5763  0BF1  1BF2               	btfsc	___awmod@dividend,7
  5764  0BF2  03F3               	decf	___awmod@dividend+1,f
  5765  0BF3  160A  158A  2526  120A  158A  	fcall	___awmod
  5766  0BF8  0870               	movf	?___awmod,w
  5767  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  5768  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  5769  0BFB  00C2               	movwf	??_scale
  5770  0BFC  3001               	movlw	1
  5771  0BFD                     u446_25:
  5772  0BFD  1003               	clrc
  5773  0BFE  0DC2               	rlf	??_scale,f
  5774  0BFF  3EFF               	addlw	-1
  5775  0C00  1D03               	skipz
  5776  0C01  2BFD               	goto	u446_25
  5777  0C02  1003               	clrc
  5778  0C03  0D42               	rlf	??_scale,w
  5779  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5780  0C05  0084               	movwf	4
  5781  0C06  160A  158A  200A  120A  158A  	fcall	stringdir
  5782  0C0B  00C3               	movwf	??_scale+1
  5783  0C0C  160A  158A  200A  120A  158A  	fcall	stringdir
  5784  0C11  00C4               	movwf	??_scale+2
  5785  0C12  160A  158A  200A  120A  158A  	fcall	stringdir
  5786  0C17  00C5               	movwf	??_scale+3
  5787  0C18  160A  158A  200A  120A  158A  	fcall	stringdir
  5788  0C1D  00C6               	movwf	??_scale+4
  5789  0C1E  0846               	movf	??_scale+4,w
  5790  0C1F  00A7               	movwf	___flmul@b+3
  5791  0C20  0845               	movf	??_scale+3,w
  5792  0C21  00A6               	movwf	___flmul@b+2
  5793  0C22  0844               	movf	??_scale+2,w
  5794  0C23  00A5               	movwf	___flmul@b+1
  5795  0C24  0843               	movf	??_scale+1,w
  5796  0C25  00A4               	movwf	___flmul@b
  5797  0C26  300A               	movlw	10
  5798  0C27  00F7               	movwf	___awdiv@divisor
  5799  0C28  3000               	movlw	0
  5800  0C29  00F8               	movwf	___awdiv@divisor+1
  5801  0C2A  0850               	movf	scale@scl,w
  5802  0C2B  00F9               	movwf	___awdiv@dividend
  5803  0C2C  01FA               	clrf	___awdiv@dividend+1
  5804  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  5805  0C2E  03FA               	decf	___awdiv@dividend+1,f
  5806  0C2F  160A  158A  25E5  120A  158A  	fcall	___awdiv
  5807  0C34  0877               	movf	?___awdiv,w
  5808  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  5809  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  5810  0C37  00C7               	movwf	??_scale+5
  5811  0C38  3001               	movlw	1
  5812  0C39                     u447_25:
  5813  0C39  1003               	clrc
  5814  0C3A  0DC7               	rlf	??_scale+5,f
  5815  0C3B  3EFF               	addlw	-1
  5816  0C3C  1D03               	skipz
  5817  0C3D  2C39               	goto	u447_25
  5818  0C3E  1003               	clrc
  5819  0C3F  0D47               	rlf	??_scale+5,w
  5820  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5821  0C41  0084               	movwf	4
  5822  0C42  160A  158A  200A  120A  158A  	fcall	stringdir
  5823  0C47  00C8               	movwf	??_scale+6
  5824  0C48  160A  158A  200A  120A  158A  	fcall	stringdir
  5825  0C4D  00C9               	movwf	??_scale+7
  5826  0C4E  160A  158A  200A  120A  158A  	fcall	stringdir
  5827  0C53  00CA               	movwf	??_scale+8
  5828  0C54  160A  158A  200A  120A  158A  	fcall	stringdir
  5829  0C59  00CB               	movwf	??_scale+9
  5830  0C5A  084B               	movf	??_scale+9,w
  5831  0C5B  00AB               	movwf	___flmul@a+3
  5832  0C5C  084A               	movf	??_scale+8,w
  5833  0C5D  00AA               	movwf	___flmul@a+2
  5834  0C5E  0849               	movf	??_scale+7,w
  5835  0C5F  00A9               	movwf	___flmul@a+1
  5836  0C60  0848               	movf	??_scale+6,w
  5837  0C61  00A8               	movwf	___flmul@a
  5838  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  5839  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  5840  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  5841  0C69  0827               	movf	?___flmul+3,w
  5842  0C6A  00C1               	movwf	?_scale+3
  5843  0C6B  0826               	movf	?___flmul+2,w
  5844  0C6C  00C0               	movwf	?_scale+2
  5845  0C6D  0825               	movf	?___flmul+1,w
  5846  0C6E  00BF               	movwf	?_scale+1
  5847  0C6F  0824               	movf	?___flmul,w
  5848  0C70  00BE               	movwf	?_scale
  5849  0C71  2C9E               	goto	i1l253
  5850  0C72                     i1l2886:
  5851                           
  5852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5853  0C72  0850               	movf	scale@scl,w
  5854  0C73  00C2               	movwf	??_scale
  5855  0C74  3001               	movlw	1
  5856  0C75                     u448_25:
  5857  0C75  1003               	clrc
  5858  0C76  0DC2               	rlf	??_scale,f
  5859  0C77  3EFF               	addlw	-1
  5860  0C78  1D03               	skipz
  5861  0C79  2C75               	goto	u448_25
  5862  0C7A  1003               	clrc
  5863  0C7B  0D42               	rlf	??_scale,w
  5864  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5865  0C7D  0084               	movwf	4
  5866  0C7E  160A  158A  200A  120A  158A  	fcall	stringdir
  5867  0C83  00C3               	movwf	??_scale+1
  5868  0C84  160A  158A  200A  120A  158A  	fcall	stringdir
  5869  0C89  00C4               	movwf	??_scale+2
  5870  0C8A  160A  158A  200A  120A  158A  	fcall	stringdir
  5871  0C8F  00C5               	movwf	??_scale+3
  5872  0C90  160A  158A  200A  120A  158A  	fcall	stringdir
  5873  0C95  00C6               	movwf	??_scale+4
  5874  0C96  0846               	movf	??_scale+4,w
  5875  0C97  00C1               	movwf	?_scale+3
  5876  0C98  0845               	movf	??_scale+3,w
  5877  0C99  00C0               	movwf	?_scale+2
  5878  0C9A  0844               	movf	??_scale+2,w
  5879  0C9B  00BF               	movwf	?_scale+1
  5880  0C9C  0843               	movf	??_scale+1,w
  5881  0C9D  00BE               	movwf	?_scale
  5882  0C9E                     i1l253:
  5883  0C9E  0008               	return
  5884  0C9F                     __end_of_scale:
  5885                           
  5886                           	psect	text19
  5887  1D26                     __ptext19:	
  5888 ;; *************** function ___awmod *****************
  5889 ;; Defined at:
  5890 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  divisor         2    0[COMMON] int 
  5893 ;;  dividend        2    2[COMMON] int 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;  sign            1    6[COMMON] unsigned char 
  5896 ;;  counter         1    5[COMMON] unsigned char 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  2    0[COMMON] int 
  5899 ;; Registers used:
  5900 ;;		wreg, status,2, status,0
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5906 ;;      Params:         4       0       0       0       0
  5907 ;;      Locals:         2       0       0       0       0
  5908 ;;      Temps:          1       0       0       0       0
  5909 ;;      Totals:         7       0       0       0       0
  5910 ;;Total ram usage:        7 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; This function calls:
  5913 ;;		Nothing
  5914 ;; This function is called by:
  5915 ;;		_scale
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           
  5920                           ;psect for function ___awmod
  5921  1D26                     ___awmod:
  5922  1D26                     i1l2390:	
  5923                           ;incstack = 0
  5924                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5925                           
  5926  1D26  01F6               	clrf	___awmod@sign
  5927  1D27                     i1l2392:
  5928  1D27  1FF3               	btfss	___awmod@dividend+1,7
  5929  1D28  2D2A               	goto	u319_21
  5930  1D29  2D2B               	goto	u319_20
  5931  1D2A                     u319_21:
  5932  1D2A  2D32               	goto	i1l2398
  5933  1D2B                     u319_20:
  5934  1D2B                     i1l2394:
  5935  1D2B  09F2               	comf	___awmod@dividend,f
  5936  1D2C  09F3               	comf	___awmod@dividend+1,f
  5937  1D2D  0AF2               	incf	___awmod@dividend,f
  5938  1D2E  1903               	skipnz
  5939  1D2F  0AF3               	incf	___awmod@dividend+1,f
  5940  1D30                     i1l2396:
  5941  1D30  01F6               	clrf	___awmod@sign
  5942  1D31  0AF6               	incf	___awmod@sign,f
  5943  1D32                     i1l2398:
  5944  1D32  1FF1               	btfss	___awmod@divisor+1,7
  5945  1D33  2D35               	goto	u320_21
  5946  1D34  2D36               	goto	u320_20
  5947  1D35                     u320_21:
  5948  1D35  2D3B               	goto	i1l2402
  5949  1D36                     u320_20:
  5950  1D36                     i1l2400:
  5951  1D36  09F0               	comf	___awmod@divisor,f
  5952  1D37  09F1               	comf	___awmod@divisor+1,f
  5953  1D38  0AF0               	incf	___awmod@divisor,f
  5954  1D39  1903               	skipnz
  5955  1D3A  0AF1               	incf	___awmod@divisor+1,f
  5956  1D3B                     i1l2402:
  5957  1D3B  0870               	movf	___awmod@divisor,w
  5958  1D3C  0471               	iorwf	___awmod@divisor+1,w
  5959  1D3D  1903               	btfsc	3,2
  5960  1D3E  2D40               	goto	u321_21
  5961  1D3F  2D41               	goto	u321_20
  5962  1D40                     u321_21:
  5963  1D40  2D70               	goto	i1l2420
  5964  1D41                     u321_20:
  5965  1D41                     i1l2404:
  5966  1D41  01F5               	clrf	___awmod@counter
  5967  1D42  0AF5               	incf	___awmod@counter,f
  5968  1D43  2D4F               	goto	i1l2410
  5969  1D44                     i1l2406:
  5970  1D44  3001               	movlw	1
  5971  1D45                     u322_25:
  5972  1D45  1003               	clrc
  5973  1D46  0DF0               	rlf	___awmod@divisor,f
  5974  1D47  0DF1               	rlf	___awmod@divisor+1,f
  5975  1D48  3EFF               	addlw	-1
  5976  1D49  1D03               	skipz
  5977  1D4A  2D45               	goto	u322_25
  5978  1D4B                     i1l2408:
  5979  1D4B  3001               	movlw	1
  5980  1D4C  00F4               	movwf	??___awmod
  5981  1D4D  0874               	movf	??___awmod,w
  5982  1D4E  07F5               	addwf	___awmod@counter,f
  5983  1D4F                     i1l2410:
  5984  1D4F  1FF1               	btfss	___awmod@divisor+1,7
  5985  1D50  2D52               	goto	u323_21
  5986  1D51  2D53               	goto	u323_20
  5987  1D52                     u323_21:
  5988  1D52  2D44               	goto	i1l2406
  5989  1D53                     u323_20:
  5990  1D53                     i1l2412:
  5991  1D53  0871               	movf	___awmod@divisor+1,w
  5992  1D54  0273               	subwf	___awmod@dividend+1,w
  5993  1D55  1D03               	skipz
  5994  1D56  2D59               	goto	u324_25
  5995  1D57  0870               	movf	___awmod@divisor,w
  5996  1D58  0272               	subwf	___awmod@dividend,w
  5997  1D59                     u324_25:
  5998  1D59  1C03               	skipc
  5999  1D5A  2D5C               	goto	u324_21
  6000  1D5B  2D5D               	goto	u324_20
  6001  1D5C                     u324_21:
  6002  1D5C  2D63               	goto	i1l2416
  6003  1D5D                     u324_20:
  6004  1D5D                     i1l2414:
  6005  1D5D  0870               	movf	___awmod@divisor,w
  6006  1D5E  02F2               	subwf	___awmod@dividend,f
  6007  1D5F  0871               	movf	___awmod@divisor+1,w
  6008  1D60  1C03               	skipc
  6009  1D61  03F3               	decf	___awmod@dividend+1,f
  6010  1D62  02F3               	subwf	___awmod@dividend+1,f
  6011  1D63                     i1l2416:
  6012  1D63  3001               	movlw	1
  6013  1D64                     u325_25:
  6014  1D64  1003               	clrc
  6015  1D65  0CF1               	rrf	___awmod@divisor+1,f
  6016  1D66  0CF0               	rrf	___awmod@divisor,f
  6017  1D67  3EFF               	addlw	-1
  6018  1D68  1D03               	skipz
  6019  1D69  2D64               	goto	u325_25
  6020  1D6A                     i1l2418:
  6021  1D6A  3001               	movlw	1
  6022  1D6B  02F5               	subwf	___awmod@counter,f
  6023  1D6C  1D03               	btfss	3,2
  6024  1D6D  2D6F               	goto	u326_21
  6025  1D6E  2D70               	goto	u326_20
  6026  1D6F                     u326_21:
  6027  1D6F  2D53               	goto	i1l2412
  6028  1D70                     u326_20:
  6029  1D70                     i1l2420:
  6030  1D70  0876               	movf	___awmod@sign,w
  6031  1D71  1903               	btfsc	3,2
  6032  1D72  2D74               	goto	u327_21
  6033  1D73  2D75               	goto	u327_20
  6034  1D74                     u327_21:
  6035  1D74  2D7A               	goto	i1l2424
  6036  1D75                     u327_20:
  6037  1D75                     i1l2422:
  6038  1D75  09F2               	comf	___awmod@dividend,f
  6039  1D76  09F3               	comf	___awmod@dividend+1,f
  6040  1D77  0AF2               	incf	___awmod@dividend,f
  6041  1D78  1903               	skipnz
  6042  1D79  0AF3               	incf	___awmod@dividend+1,f
  6043  1D7A                     i1l2424:
  6044  1D7A  0873               	movf	___awmod@dividend+1,w
  6045  1D7B  00F1               	movwf	?___awmod+1
  6046  1D7C  0872               	movf	___awmod@dividend,w
  6047  1D7D  00F0               	movwf	?___awmod
  6048  1D7E                     i1l489:
  6049  1D7E  0008               	return
  6050  1D7F                     __end_of___awmod:
  6051                           
  6052                           	psect	text20
  6053  1DE5                     __ptext20:	
  6054 ;; *************** function ___awdiv *****************
  6055 ;; Defined at:
  6056 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  divisor         2    7[COMMON] int 
  6059 ;;  dividend        2    9[COMMON] int 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  quotient        2    2[BANK0 ] int 
  6062 ;;  sign            1    1[BANK0 ] unsigned char 
  6063 ;;  counter         1    0[BANK0 ] unsigned char 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  2    7[COMMON] int 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6073 ;;      Params:         4       0       0       0       0
  6074 ;;      Locals:         0       4       0       0       0
  6075 ;;      Temps:          1       0       0       0       0
  6076 ;;      Totals:         5       4       0       0       0
  6077 ;;Total ram usage:        9 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_scale
  6083 ;;		_sprintf
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           
  6088                           ;psect for function ___awdiv
  6089  1DE5                     ___awdiv:
  6090  1DE5                     i1l2346:	
  6091                           ;incstack = 0
  6092                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6093                           
  6094  1DE5  1283               	bcf	3,5	;RP0=0, select bank0
  6095  1DE6  1303               	bcf	3,6	;RP1=0, select bank0
  6096  1DE7  01A1               	clrf	___awdiv@sign
  6097  1DE8                     i1l2348:
  6098  1DE8  1FF8               	btfss	___awdiv@divisor+1,7
  6099  1DE9  2DEB               	goto	u309_21
  6100  1DEA  2DEC               	goto	u309_20
  6101  1DEB                     u309_21:
  6102  1DEB  2DF3               	goto	i1l2354
  6103  1DEC                     u309_20:
  6104  1DEC                     i1l2350:
  6105  1DEC  09F7               	comf	___awdiv@divisor,f
  6106  1DED  09F8               	comf	___awdiv@divisor+1,f
  6107  1DEE  0AF7               	incf	___awdiv@divisor,f
  6108  1DEF  1903               	skipnz
  6109  1DF0  0AF8               	incf	___awdiv@divisor+1,f
  6110  1DF1                     i1l2352:
  6111  1DF1  01A1               	clrf	___awdiv@sign
  6112  1DF2  0AA1               	incf	___awdiv@sign,f
  6113  1DF3                     i1l2354:
  6114  1DF3  1FFA               	btfss	___awdiv@dividend+1,7
  6115  1DF4  2DF6               	goto	u310_21
  6116  1DF5  2DF7               	goto	u310_20
  6117  1DF6                     u310_21:
  6118  1DF6  2E00               	goto	i1l2360
  6119  1DF7                     u310_20:
  6120  1DF7                     i1l2356:
  6121  1DF7  09F9               	comf	___awdiv@dividend,f
  6122  1DF8  09FA               	comf	___awdiv@dividend+1,f
  6123  1DF9  0AF9               	incf	___awdiv@dividend,f
  6124  1DFA  1903               	skipnz
  6125  1DFB  0AFA               	incf	___awdiv@dividend+1,f
  6126  1DFC                     i1l2358:
  6127  1DFC  3001               	movlw	1
  6128  1DFD  00FB               	movwf	??___awdiv
  6129  1DFE  087B               	movf	??___awdiv,w
  6130  1DFF  06A1               	xorwf	___awdiv@sign,f
  6131  1E00                     i1l2360:
  6132  1E00  01A2               	clrf	___awdiv@quotient
  6133  1E01  01A3               	clrf	___awdiv@quotient+1
  6134  1E02                     i1l2362:
  6135  1E02  0877               	movf	___awdiv@divisor,w
  6136  1E03  0478               	iorwf	___awdiv@divisor+1,w
  6137  1E04  1903               	btfsc	3,2
  6138  1E05  2E07               	goto	u311_21
  6139  1E06  2E08               	goto	u311_20
  6140  1E07                     u311_21:
  6141  1E07  2E3F               	goto	i1l2382
  6142  1E08                     u311_20:
  6143  1E08                     i1l2364:
  6144  1E08  01A0               	clrf	___awdiv@counter
  6145  1E09  0AA0               	incf	___awdiv@counter,f
  6146  1E0A  2E16               	goto	i1l2370
  6147  1E0B                     i1l2366:
  6148  1E0B  3001               	movlw	1
  6149  1E0C                     u312_25:
  6150  1E0C  1003               	clrc
  6151  1E0D  0DF7               	rlf	___awdiv@divisor,f
  6152  1E0E  0DF8               	rlf	___awdiv@divisor+1,f
  6153  1E0F  3EFF               	addlw	-1
  6154  1E10  1D03               	skipz
  6155  1E11  2E0C               	goto	u312_25
  6156  1E12                     i1l2368:
  6157  1E12  3001               	movlw	1
  6158  1E13  00FB               	movwf	??___awdiv
  6159  1E14  087B               	movf	??___awdiv,w
  6160  1E15  07A0               	addwf	___awdiv@counter,f
  6161  1E16                     i1l2370:
  6162  1E16  1FF8               	btfss	___awdiv@divisor+1,7
  6163  1E17  2E19               	goto	u313_21
  6164  1E18  2E1A               	goto	u313_20
  6165  1E19                     u313_21:
  6166  1E19  2E0B               	goto	i1l2366
  6167  1E1A                     u313_20:
  6168  1E1A                     i1l2372:
  6169  1E1A  3001               	movlw	1
  6170  1E1B                     u314_25:
  6171  1E1B  1003               	clrc
  6172  1E1C  0DA2               	rlf	___awdiv@quotient,f
  6173  1E1D  0DA3               	rlf	___awdiv@quotient+1,f
  6174  1E1E  3EFF               	addlw	-1
  6175  1E1F  1D03               	skipz
  6176  1E20  2E1B               	goto	u314_25
  6177  1E21  0878               	movf	___awdiv@divisor+1,w
  6178  1E22  027A               	subwf	___awdiv@dividend+1,w
  6179  1E23  1D03               	skipz
  6180  1E24  2E27               	goto	u315_25
  6181  1E25  0877               	movf	___awdiv@divisor,w
  6182  1E26  0279               	subwf	___awdiv@dividend,w
  6183  1E27                     u315_25:
  6184  1E27  1C03               	skipc
  6185  1E28  2E2A               	goto	u315_21
  6186  1E29  2E2B               	goto	u315_20
  6187  1E2A                     u315_21:
  6188  1E2A  2E32               	goto	i1l2378
  6189  1E2B                     u315_20:
  6190  1E2B                     i1l2374:
  6191  1E2B  0877               	movf	___awdiv@divisor,w
  6192  1E2C  02F9               	subwf	___awdiv@dividend,f
  6193  1E2D  0878               	movf	___awdiv@divisor+1,w
  6194  1E2E  1C03               	skipc
  6195  1E2F  03FA               	decf	___awdiv@dividend+1,f
  6196  1E30  02FA               	subwf	___awdiv@dividend+1,f
  6197  1E31                     i1l2376:
  6198  1E31  1422               	bsf	___awdiv@quotient,0
  6199  1E32                     i1l2378:
  6200  1E32  3001               	movlw	1
  6201  1E33                     u316_25:
  6202  1E33  1003               	clrc
  6203  1E34  0CF8               	rrf	___awdiv@divisor+1,f
  6204  1E35  0CF7               	rrf	___awdiv@divisor,f
  6205  1E36  3EFF               	addlw	-1
  6206  1E37  1D03               	skipz
  6207  1E38  2E33               	goto	u316_25
  6208  1E39                     i1l2380:
  6209  1E39  3001               	movlw	1
  6210  1E3A  02A0               	subwf	___awdiv@counter,f
  6211  1E3B  1D03               	btfss	3,2
  6212  1E3C  2E3E               	goto	u317_21
  6213  1E3D  2E3F               	goto	u317_20
  6214  1E3E                     u317_21:
  6215  1E3E  2E1A               	goto	i1l2372
  6216  1E3F                     u317_20:
  6217  1E3F                     i1l2382:
  6218  1E3F  0821               	movf	___awdiv@sign,w
  6219  1E40  1903               	btfsc	3,2
  6220  1E41  2E43               	goto	u318_21
  6221  1E42  2E44               	goto	u318_20
  6222  1E43                     u318_21:
  6223  1E43  2E49               	goto	i1l2386
  6224  1E44                     u318_20:
  6225  1E44                     i1l2384:
  6226  1E44  09A2               	comf	___awdiv@quotient,f
  6227  1E45  09A3               	comf	___awdiv@quotient+1,f
  6228  1E46  0AA2               	incf	___awdiv@quotient,f
  6229  1E47  1903               	skipnz
  6230  1E48  0AA3               	incf	___awdiv@quotient+1,f
  6231  1E49                     i1l2386:
  6232  1E49  0823               	movf	___awdiv@quotient+1,w
  6233  1E4A  00F8               	movwf	?___awdiv+1
  6234  1E4B  0822               	movf	___awdiv@quotient,w
  6235  1E4C  00F7               	movwf	?___awdiv
  6236  1E4D                     i1l476:
  6237  1E4D  0008               	return
  6238  1E4E                     __end_of___awdiv:
  6239                           
  6240                           	psect	text21
  6241  1A2B                     __ptext21:	
  6242 ;; *************** function _isdigit *****************
  6243 ;; Defined at:
  6244 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  c               1    wreg     unsigned char 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  c               1    1[COMMON] unsigned char 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6258 ;;      Params:         0       0       0       0       0
  6259 ;;      Locals:         2       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0
  6261 ;;      Totals:         2       0       0       0       0
  6262 ;;Total ram usage:        2 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		_sprintf
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           
  6272                           ;psect for function _isdigit
  6273  1A2B                     _isdigit:
  6274                           
  6275                           ;incstack = 0
  6276                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6277                           ;isdigit@c stored from wreg
  6278  1A2B  00F1               	movwf	isdigit@c
  6279  1A2C                     i1l2890:
  6280  1A2C  01F0               	clrf	_isdigit$862
  6281  1A2D                     i1l2892:
  6282  1A2D  303A               	movlw	58
  6283  1A2E  0271               	subwf	isdigit@c,w
  6284  1A2F  1803               	skipnc
  6285  1A30  2A32               	goto	u449_21
  6286  1A31  2A33               	goto	u449_20
  6287  1A32                     u449_21:
  6288  1A32  2A3B               	goto	i1l2898
  6289  1A33                     u449_20:
  6290  1A33                     i1l2894:
  6291  1A33  3030               	movlw	48
  6292  1A34  0271               	subwf	isdigit@c,w
  6293  1A35  1C03               	skipc
  6294  1A36  2A38               	goto	u450_21
  6295  1A37  2A39               	goto	u450_20
  6296  1A38                     u450_21:
  6297  1A38  2A3B               	goto	i1l2898
  6298  1A39                     u450_20:
  6299  1A39                     i1l2896:
  6300  1A39  01F0               	clrf	_isdigit$862
  6301  1A3A  0AF0               	incf	_isdigit$862,f
  6302  1A3B                     i1l2898:
  6303  1A3B  0C70               	rrf	_isdigit$862,w
  6304  1A3C                     i1l810:
  6305  1A3C  0008               	return
  6306  1A3D                     __end_of_isdigit:
  6307                           
  6308                           	psect	text22
  6309  136D                     __ptext22:	
  6310 ;; *************** function _fround *****************
  6311 ;; Defined at:
  6312 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  prec            1    wreg     unsigned char 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  prec            1   49[BANK0 ] unsigned char 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  4   30[BANK0 ] unsigned char 
  6319 ;; Registers used:
  6320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6326 ;;      Params:         0       4       0       0       0
  6327 ;;      Locals:         0       9       0       0       0
  6328 ;;      Temps:          0       7       0       0       0
  6329 ;;      Totals:         0      20       0       0       0
  6330 ;;Total ram usage:       20 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    2
  6333 ;; This function calls:
  6334 ;;		___flmul
  6335 ;;		___lwdiv
  6336 ;;		___lwmod
  6337 ;; This function is called by:
  6338 ;;		_sprintf
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           
  6343                           ;psect for function _fround
  6344  136D                     _fround:
  6345                           
  6346                           ;incstack = 0
  6347 ;; using string table level
  6348                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6349                           ;fround@prec stored from wreg
  6350  136D  1283               	bcf	3,5	;RP0=0, select bank0
  6351  136E  1303               	bcf	3,6	;RP1=0, select bank0
  6352  136F  00D1               	movwf	fround@prec
  6353  1370                     i1l2832:
  6354                           
  6355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  6356  1370  306E               	movlw	110
  6357  1371  0251               	subwf	fround@prec,w
  6358  1372  1C03               	skipc
  6359  1373  2B75               	goto	u424_21
  6360  1374  2B76               	goto	u424_20
  6361  1375                     u424_21:
  6362  1375  2C83               	goto	i1l2840
  6363  1376                     u424_20:
  6364  1376                     i1l2834:
  6365                           
  6366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6367  1376  303F               	movlw	63
  6368  1377  00A7               	movwf	___flmul@b+3
  6369  1378  3000               	movlw	0
  6370  1379  00A6               	movwf	___flmul@b+2
  6371  137A  3000               	movlw	0
  6372  137B  00A5               	movwf	___flmul@b+1
  6373  137C  3000               	movlw	0
  6374  137D  00A4               	movwf	___flmul@b
  6375  137E  3064               	movlw	100
  6376  137F  00F6               	movwf	___lwdiv@divisor
  6377  1380  3000               	movlw	0
  6378  1381  00F7               	movwf	___lwdiv@divisor+1
  6379  1382  0851               	movf	fround@prec,w
  6380  1383  00C2               	movwf	??_fround
  6381  1384  01C3               	clrf	??_fround+1
  6382  1385  0842               	movf	??_fround,w
  6383  1386  00F8               	movwf	___lwdiv@dividend
  6384  1387  0843               	movf	??_fround+1,w
  6385  1388  00F9               	movwf	___lwdiv@dividend+1
  6386  1389  160A  158A  23EC  160A  118A  	fcall	___lwdiv
  6387  138E  0876               	movf	?___lwdiv,w
  6388  138F  1283               	bcf	3,5	;RP0=0, select bank0
  6389  1390  1303               	bcf	3,6	;RP1=0, select bank0
  6390  1391  00C4               	movwf	??_fround+2
  6391  1392  3001               	movlw	1
  6392  1393                     u425_25:
  6393  1393  1003               	clrc
  6394  1394  0DC4               	rlf	??_fround+2,f
  6395  1395  3EFF               	addlw	-1
  6396  1396  1D03               	skipz
  6397  1397  2B93               	goto	u425_25
  6398  1398  1003               	clrc
  6399  1399  0D44               	rlf	??_fround+2,w
  6400  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  6401  139B  0084               	movwf	4
  6402  139C  160A  158A  200A  160A  118A  	fcall	stringdir
  6403  13A1  00C5               	movwf	??_fround+3
  6404  13A2  160A  158A  200A  160A  118A  	fcall	stringdir
  6405  13A7  00C6               	movwf	??_fround+4
  6406  13A8  160A  158A  200A  160A  118A  	fcall	stringdir
  6407  13AD  00C7               	movwf	??_fround+5
  6408  13AE  160A  158A  200A  160A  118A  	fcall	stringdir
  6409  13B3  00C8               	movwf	??_fround+6
  6410  13B4  0848               	movf	??_fround+6,w
  6411  13B5  00AB               	movwf	___flmul@a+3
  6412  13B6  0847               	movf	??_fround+5,w
  6413  13B7  00AA               	movwf	___flmul@a+2
  6414  13B8  0846               	movf	??_fround+4,w
  6415  13B9  00A9               	movwf	___flmul@a+1
  6416  13BA  0845               	movf	??_fround+3,w
  6417  13BB  00A8               	movwf	___flmul@a
  6418  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  6419  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  6420  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  6421  13C3  0827               	movf	?___flmul+3,w
  6422  13C4  00D0               	movwf	_fround$1043+3
  6423  13C5  0826               	movf	?___flmul+2,w
  6424  13C6  00CF               	movwf	_fround$1043+2
  6425  13C7  0825               	movf	?___flmul+1,w
  6426  13C8  00CE               	movwf	_fround$1043+1
  6427  13C9  0824               	movf	?___flmul,w
  6428  13CA  00CD               	movwf	_fround$1043
  6429                           
  6430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6431  13CB  300A               	movlw	10
  6432  13CC  00F6               	movwf	___lwdiv@divisor
  6433  13CD  3000               	movlw	0
  6434  13CE  00F7               	movwf	___lwdiv@divisor+1
  6435  13CF  0851               	movf	fround@prec,w
  6436  13D0  00C2               	movwf	??_fround
  6437  13D1  01C3               	clrf	??_fround+1
  6438  13D2  0842               	movf	??_fround,w
  6439  13D3  00F2               	movwf	___lwmod@dividend
  6440  13D4  0843               	movf	??_fround+1,w
  6441  13D5  00F3               	movwf	___lwmod@dividend+1
  6442  13D6  3064               	movlw	100
  6443  13D7  00F0               	movwf	___lwmod@divisor
  6444  13D8  3000               	movlw	0
  6445  13D9  00F1               	movwf	___lwmod@divisor+1
  6446  13DA  160A  158A  2370  160A  118A  	fcall	___lwmod
  6447  13DF  0871               	movf	?___lwmod+1,w
  6448  13E0  00F9               	movwf	___lwdiv@dividend+1
  6449  13E1  0870               	movf	?___lwmod,w
  6450  13E2  00F8               	movwf	___lwdiv@dividend
  6451  13E3  160A  158A  23EC  160A  118A  	fcall	___lwdiv
  6452  13E8  0876               	movf	?___lwdiv,w
  6453  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  6454  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  6455  13EB  00C4               	movwf	??_fround+2
  6456  13EC  3001               	movlw	1
  6457  13ED                     u426_25:
  6458  13ED  1003               	clrc
  6459  13EE  0DC4               	rlf	??_fround+2,f
  6460  13EF  3EFF               	addlw	-1
  6461  13F0  1D03               	skipz
  6462  13F1  2BED               	goto	u426_25
  6463  13F2  1003               	clrc
  6464  13F3  0D44               	rlf	??_fround+2,w
  6465  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  6466  13F5  0084               	movwf	4
  6467  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  6468  13FB  00C5               	movwf	??_fround+3
  6469  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  6470  1401  00C6               	movwf	??_fround+4
  6471  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  6472  1407  00C7               	movwf	??_fround+5
  6473  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  6474  140D  00C8               	movwf	??_fround+6
  6475  140E  0848               	movf	??_fround+6,w
  6476  140F  00A7               	movwf	___flmul@b+3
  6477  1410  0847               	movf	??_fround+5,w
  6478  1411  00A6               	movwf	___flmul@b+2
  6479  1412  0846               	movf	??_fround+4,w
  6480  1413  00A5               	movwf	___flmul@b+1
  6481  1414  0845               	movf	??_fround+3,w
  6482  1415  00A4               	movwf	___flmul@b
  6483  1416  0850               	movf	_fround$1043+3,w
  6484  1417  00AB               	movwf	___flmul@a+3
  6485  1418  084F               	movf	_fround$1043+2,w
  6486  1419  00AA               	movwf	___flmul@a+2
  6487  141A  084E               	movf	_fround$1043+1,w
  6488  141B  00A9               	movwf	___flmul@a+1
  6489  141C  084D               	movf	_fround$1043,w
  6490  141D  00A8               	movwf	___flmul@a
  6491  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  6492  1423  1283               	bcf	3,5	;RP0=0, select bank0
  6493  1424  1303               	bcf	3,6	;RP1=0, select bank0
  6494  1425  0827               	movf	?___flmul+3,w
  6495  1426  00CC               	movwf	_fround$1044+3
  6496  1427  0826               	movf	?___flmul+2,w
  6497  1428  00CB               	movwf	_fround$1044+2
  6498  1429  0825               	movf	?___flmul+1,w
  6499  142A  00CA               	movwf	_fround$1044+1
  6500  142B  0824               	movf	?___flmul,w
  6501  142C  00C9               	movwf	_fround$1044
  6502                           
  6503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6504  142D  300A               	movlw	10
  6505  142E  00F0               	movwf	___lwmod@divisor
  6506  142F  3000               	movlw	0
  6507  1430  00F1               	movwf	___lwmod@divisor+1
  6508  1431  0851               	movf	fround@prec,w
  6509  1432  00C2               	movwf	??_fround
  6510  1433  01C3               	clrf	??_fround+1
  6511  1434  0842               	movf	??_fround,w
  6512  1435  00F2               	movwf	___lwmod@dividend
  6513  1436  0843               	movf	??_fround+1,w
  6514  1437  00F3               	movwf	___lwmod@dividend+1
  6515  1438  160A  158A  2370  160A  118A  	fcall	___lwmod
  6516  143D  0870               	movf	?___lwmod,w
  6517  143E  1283               	bcf	3,5	;RP0=0, select bank0
  6518  143F  1303               	bcf	3,6	;RP1=0, select bank0
  6519  1440  00C4               	movwf	??_fround+2
  6520  1441  3001               	movlw	1
  6521  1442                     u427_25:
  6522  1442  1003               	clrc
  6523  1443  0DC4               	rlf	??_fround+2,f
  6524  1444  3EFF               	addlw	-1
  6525  1445  1D03               	skipz
  6526  1446  2C42               	goto	u427_25
  6527  1447  1003               	clrc
  6528  1448  0D44               	rlf	??_fround+2,w
  6529  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6530  144A  0084               	movwf	4
  6531  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  6532  1450  00C5               	movwf	??_fround+3
  6533  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  6534  1456  00C6               	movwf	??_fround+4
  6535  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  6536  145C  00C7               	movwf	??_fround+5
  6537  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  6538  1462  00C8               	movwf	??_fround+6
  6539  1463  0848               	movf	??_fround+6,w
  6540  1464  00A7               	movwf	___flmul@b+3
  6541  1465  0847               	movf	??_fround+5,w
  6542  1466  00A6               	movwf	___flmul@b+2
  6543  1467  0846               	movf	??_fround+4,w
  6544  1468  00A5               	movwf	___flmul@b+1
  6545  1469  0845               	movf	??_fround+3,w
  6546  146A  00A4               	movwf	___flmul@b
  6547  146B  084C               	movf	_fround$1044+3,w
  6548  146C  00AB               	movwf	___flmul@a+3
  6549  146D  084B               	movf	_fround$1044+2,w
  6550  146E  00AA               	movwf	___flmul@a+2
  6551  146F  084A               	movf	_fround$1044+1,w
  6552  1470  00A9               	movwf	___flmul@a+1
  6553  1471  0849               	movf	_fround$1044,w
  6554  1472  00A8               	movwf	___flmul@a
  6555  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  6556  1478  1283               	bcf	3,5	;RP0=0, select bank0
  6557  1479  1303               	bcf	3,6	;RP1=0, select bank0
  6558  147A  0827               	movf	?___flmul+3,w
  6559  147B  00C1               	movwf	?_fround+3
  6560  147C  0826               	movf	?___flmul+2,w
  6561  147D  00C0               	movwf	?_fround+2
  6562  147E  0825               	movf	?___flmul+1,w
  6563  147F  00BF               	movwf	?_fround+1
  6564  1480  0824               	movf	?___flmul,w
  6565  1481  00BE               	movwf	?_fround
  6566  1482  2D77               	goto	i1l246
  6567  1483                     i1l2840:
  6568  1483  300B               	movlw	11
  6569  1484  0251               	subwf	fround@prec,w
  6570  1485  1C03               	skipc
  6571  1486  2C88               	goto	u428_21
  6572  1487  2C89               	goto	u428_20
  6573  1488                     u428_21:
  6574  1488  2D34               	goto	i1l2846
  6575  1489                     u428_20:
  6576  1489                     i1l2842:
  6577                           
  6578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6579  1489  303F               	movlw	63
  6580  148A  00A7               	movwf	___flmul@b+3
  6581  148B  3000               	movlw	0
  6582  148C  00A6               	movwf	___flmul@b+2
  6583  148D  3000               	movlw	0
  6584  148E  00A5               	movwf	___flmul@b+1
  6585  148F  3000               	movlw	0
  6586  1490  00A4               	movwf	___flmul@b
  6587  1491  300A               	movlw	10
  6588  1492  00F6               	movwf	___lwdiv@divisor
  6589  1493  3000               	movlw	0
  6590  1494  00F7               	movwf	___lwdiv@divisor+1
  6591  1495  0851               	movf	fround@prec,w
  6592  1496  00C2               	movwf	??_fround
  6593  1497  01C3               	clrf	??_fround+1
  6594  1498  0842               	movf	??_fround,w
  6595  1499  00F8               	movwf	___lwdiv@dividend
  6596  149A  0843               	movf	??_fround+1,w
  6597  149B  00F9               	movwf	___lwdiv@dividend+1
  6598  149C  160A  158A  23EC  160A  118A  	fcall	___lwdiv
  6599  14A1  0876               	movf	?___lwdiv,w
  6600  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  6601  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  6602  14A4  00C4               	movwf	??_fround+2
  6603  14A5  3001               	movlw	1
  6604  14A6                     u429_25:
  6605  14A6  1003               	clrc
  6606  14A7  0DC4               	rlf	??_fround+2,f
  6607  14A8  3EFF               	addlw	-1
  6608  14A9  1D03               	skipz
  6609  14AA  2CA6               	goto	u429_25
  6610  14AB  1003               	clrc
  6611  14AC  0D44               	rlf	??_fround+2,w
  6612  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  6613  14AE  0084               	movwf	4
  6614  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  6615  14B4  00C5               	movwf	??_fround+3
  6616  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  6617  14BA  00C6               	movwf	??_fround+4
  6618  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  6619  14C0  00C7               	movwf	??_fround+5
  6620  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  6621  14C6  00C8               	movwf	??_fround+6
  6622  14C7  0848               	movf	??_fround+6,w
  6623  14C8  00AB               	movwf	___flmul@a+3
  6624  14C9  0847               	movf	??_fround+5,w
  6625  14CA  00AA               	movwf	___flmul@a+2
  6626  14CB  0846               	movf	??_fround+4,w
  6627  14CC  00A9               	movwf	___flmul@a+1
  6628  14CD  0845               	movf	??_fround+3,w
  6629  14CE  00A8               	movwf	___flmul@a
  6630  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  6631  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  6632  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  6633  14D6  0827               	movf	?___flmul+3,w
  6634  14D7  00D0               	movwf	_fround$1043+3
  6635  14D8  0826               	movf	?___flmul+2,w
  6636  14D9  00CF               	movwf	_fround$1043+2
  6637  14DA  0825               	movf	?___flmul+1,w
  6638  14DB  00CE               	movwf	_fround$1043+1
  6639  14DC  0824               	movf	?___flmul,w
  6640  14DD  00CD               	movwf	_fround$1043
  6641                           
  6642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6643  14DE  300A               	movlw	10
  6644  14DF  00F0               	movwf	___lwmod@divisor
  6645  14E0  3000               	movlw	0
  6646  14E1  00F1               	movwf	___lwmod@divisor+1
  6647  14E2  0851               	movf	fround@prec,w
  6648  14E3  00C2               	movwf	??_fround
  6649  14E4  01C3               	clrf	??_fround+1
  6650  14E5  0842               	movf	??_fround,w
  6651  14E6  00F2               	movwf	___lwmod@dividend
  6652  14E7  0843               	movf	??_fround+1,w
  6653  14E8  00F3               	movwf	___lwmod@dividend+1
  6654  14E9  160A  158A  2370  160A  118A  	fcall	___lwmod
  6655  14EE  0870               	movf	?___lwmod,w
  6656  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  6657  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  6658  14F1  00C4               	movwf	??_fround+2
  6659  14F2  3001               	movlw	1
  6660  14F3                     u430_25:
  6661  14F3  1003               	clrc
  6662  14F4  0DC4               	rlf	??_fround+2,f
  6663  14F5  3EFF               	addlw	-1
  6664  14F6  1D03               	skipz
  6665  14F7  2CF3               	goto	u430_25
  6666  14F8  1003               	clrc
  6667  14F9  0D44               	rlf	??_fround+2,w
  6668  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6669  14FB  0084               	movwf	4
  6670  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  6671  1501  00C5               	movwf	??_fround+3
  6672  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  6673  1507  00C6               	movwf	??_fround+4
  6674  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  6675  150D  00C7               	movwf	??_fround+5
  6676  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  6677  1513  00C8               	movwf	??_fround+6
  6678  1514  0848               	movf	??_fround+6,w
  6679  1515  00A7               	movwf	___flmul@b+3
  6680  1516  0847               	movf	??_fround+5,w
  6681  1517  00A6               	movwf	___flmul@b+2
  6682  1518  0846               	movf	??_fround+4,w
  6683  1519  00A5               	movwf	___flmul@b+1
  6684  151A  0845               	movf	??_fround+3,w
  6685  151B  00A4               	movwf	___flmul@b
  6686  151C  0850               	movf	_fround$1043+3,w
  6687  151D  00AB               	movwf	___flmul@a+3
  6688  151E  084F               	movf	_fround$1043+2,w
  6689  151F  00AA               	movwf	___flmul@a+2
  6690  1520  084E               	movf	_fround$1043+1,w
  6691  1521  00A9               	movwf	___flmul@a+1
  6692  1522  084D               	movf	_fround$1043,w
  6693  1523  00A8               	movwf	___flmul@a
  6694  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  6695  1529  1283               	bcf	3,5	;RP0=0, select bank0
  6696  152A  1303               	bcf	3,6	;RP1=0, select bank0
  6697  152B  0827               	movf	?___flmul+3,w
  6698  152C  00C1               	movwf	?_fround+3
  6699  152D  0826               	movf	?___flmul+2,w
  6700  152E  00C0               	movwf	?_fround+2
  6701  152F  0825               	movf	?___flmul+1,w
  6702  1530  00BF               	movwf	?_fround+1
  6703  1531  0824               	movf	?___flmul,w
  6704  1532  00BE               	movwf	?_fround
  6705  1533  2D77               	goto	i1l246
  6706  1534                     i1l2846:
  6707                           
  6708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  6709  1534  303F               	movlw	63
  6710  1535  00A7               	movwf	___flmul@b+3
  6711  1536  3000               	movlw	0
  6712  1537  00A6               	movwf	___flmul@b+2
  6713  1538  3000               	movlw	0
  6714  1539  00A5               	movwf	___flmul@b+1
  6715  153A  3000               	movlw	0
  6716  153B  00A4               	movwf	___flmul@b
  6717  153C  0851               	movf	fround@prec,w
  6718  153D  00C2               	movwf	??_fround
  6719  153E  3001               	movlw	1
  6720  153F                     u431_25:
  6721  153F  1003               	clrc
  6722  1540  0DC2               	rlf	??_fround,f
  6723  1541  3EFF               	addlw	-1
  6724  1542  1D03               	skipz
  6725  1543  2D3F               	goto	u431_25
  6726  1544  1003               	clrc
  6727  1545  0D42               	rlf	??_fround,w
  6728  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6729  1547  0084               	movwf	4
  6730  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  6731  154D  00C3               	movwf	??_fround+1
  6732  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  6733  1553  00C4               	movwf	??_fround+2
  6734  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  6735  1559  00C5               	movwf	??_fround+3
  6736  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  6737  155F  00C6               	movwf	??_fround+4
  6738  1560  0846               	movf	??_fround+4,w
  6739  1561  00AB               	movwf	___flmul@a+3
  6740  1562  0845               	movf	??_fround+3,w
  6741  1563  00AA               	movwf	___flmul@a+2
  6742  1564  0844               	movf	??_fround+2,w
  6743  1565  00A9               	movwf	___flmul@a+1
  6744  1566  0843               	movf	??_fround+1,w
  6745  1567  00A8               	movwf	___flmul@a
  6746  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  6747  156D  1283               	bcf	3,5	;RP0=0, select bank0
  6748  156E  1303               	bcf	3,6	;RP1=0, select bank0
  6749  156F  0827               	movf	?___flmul+3,w
  6750  1570  00C1               	movwf	?_fround+3
  6751  1571  0826               	movf	?___flmul+2,w
  6752  1572  00C0               	movwf	?_fround+2
  6753  1573  0825               	movf	?___flmul+1,w
  6754  1574  00BF               	movwf	?_fround+1
  6755  1575  0824               	movf	?___flmul,w
  6756  1576  00BE               	movwf	?_fround
  6757  1577                     i1l246:
  6758  1577  0008               	return
  6759  1578                     __end_of_fround:
  6760                           
  6761                           	psect	text23
  6762  1B70                     __ptext23:	
  6763 ;; *************** function ___lwmod *****************
  6764 ;; Defined at:
  6765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  divisor         2    0[COMMON] unsigned int 
  6768 ;;  dividend        2    2[COMMON] unsigned int 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;  counter         1    5[COMMON] unsigned char 
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  2    0[COMMON] unsigned int 
  6773 ;; Registers used:
  6774 ;;		wreg, status,2, status,0
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6780 ;;      Params:         4       0       0       0       0
  6781 ;;      Locals:         1       0       0       0       0
  6782 ;;      Temps:          1       0       0       0       0
  6783 ;;      Totals:         6       0       0       0       0
  6784 ;;Total ram usage:        6 bytes
  6785 ;; Hardware stack levels used:    1
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_fround
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           
  6794                           ;psect for function ___lwmod
  6795  1B70                     ___lwmod:
  6796  1B70                     i1l2454:	
  6797                           ;incstack = 0
  6798                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6799                           
  6800  1B70  0870               	movf	___lwmod@divisor,w
  6801  1B71  0471               	iorwf	___lwmod@divisor+1,w
  6802  1B72  1903               	btfsc	3,2
  6803  1B73  2B75               	goto	u335_21
  6804  1B74  2B76               	goto	u335_20
  6805  1B75                     u335_21:
  6806  1B75  2BA5               	goto	i1l2472
  6807  1B76                     u335_20:
  6808  1B76                     i1l2456:
  6809  1B76  01F5               	clrf	___lwmod@counter
  6810  1B77  0AF5               	incf	___lwmod@counter,f
  6811  1B78  2B84               	goto	i1l2462
  6812  1B79                     i1l2458:
  6813  1B79  3001               	movlw	1
  6814  1B7A                     u336_25:
  6815  1B7A  1003               	clrc
  6816  1B7B  0DF0               	rlf	___lwmod@divisor,f
  6817  1B7C  0DF1               	rlf	___lwmod@divisor+1,f
  6818  1B7D  3EFF               	addlw	-1
  6819  1B7E  1D03               	skipz
  6820  1B7F  2B7A               	goto	u336_25
  6821  1B80                     i1l2460:
  6822  1B80  3001               	movlw	1
  6823  1B81  00F4               	movwf	??___lwmod
  6824  1B82  0874               	movf	??___lwmod,w
  6825  1B83  07F5               	addwf	___lwmod@counter,f
  6826  1B84                     i1l2462:
  6827  1B84  1FF1               	btfss	___lwmod@divisor+1,7
  6828  1B85  2B87               	goto	u337_21
  6829  1B86  2B88               	goto	u337_20
  6830  1B87                     u337_21:
  6831  1B87  2B79               	goto	i1l2458
  6832  1B88                     u337_20:
  6833  1B88                     i1l2464:
  6834  1B88  0871               	movf	___lwmod@divisor+1,w
  6835  1B89  0273               	subwf	___lwmod@dividend+1,w
  6836  1B8A  1D03               	skipz
  6837  1B8B  2B8E               	goto	u338_25
  6838  1B8C  0870               	movf	___lwmod@divisor,w
  6839  1B8D  0272               	subwf	___lwmod@dividend,w
  6840  1B8E                     u338_25:
  6841  1B8E  1C03               	skipc
  6842  1B8F  2B91               	goto	u338_21
  6843  1B90  2B92               	goto	u338_20
  6844  1B91                     u338_21:
  6845  1B91  2B98               	goto	i1l2468
  6846  1B92                     u338_20:
  6847  1B92                     i1l2466:
  6848  1B92  0870               	movf	___lwmod@divisor,w
  6849  1B93  02F2               	subwf	___lwmod@dividend,f
  6850  1B94  0871               	movf	___lwmod@divisor+1,w
  6851  1B95  1C03               	skipc
  6852  1B96  03F3               	decf	___lwmod@dividend+1,f
  6853  1B97  02F3               	subwf	___lwmod@dividend+1,f
  6854  1B98                     i1l2468:
  6855  1B98  3001               	movlw	1
  6856  1B99                     u339_25:
  6857  1B99  1003               	clrc
  6858  1B9A  0CF1               	rrf	___lwmod@divisor+1,f
  6859  1B9B  0CF0               	rrf	___lwmod@divisor,f
  6860  1B9C  3EFF               	addlw	-1
  6861  1B9D  1D03               	skipz
  6862  1B9E  2B99               	goto	u339_25
  6863  1B9F                     i1l2470:
  6864  1B9F  3001               	movlw	1
  6865  1BA0  02F5               	subwf	___lwmod@counter,f
  6866  1BA1  1D03               	btfss	3,2
  6867  1BA2  2BA4               	goto	u340_21
  6868  1BA3  2BA5               	goto	u340_20
  6869  1BA4                     u340_21:
  6870  1BA4  2B88               	goto	i1l2464
  6871  1BA5                     u340_20:
  6872  1BA5                     i1l2472:
  6873  1BA5  0873               	movf	___lwmod@dividend+1,w
  6874  1BA6  00F1               	movwf	?___lwmod+1
  6875  1BA7  0872               	movf	___lwmod@dividend,w
  6876  1BA8  00F0               	movwf	?___lwmod
  6877  1BA9                     i1l639:
  6878  1BA9  0008               	return
  6879  1BAA                     __end_of___lwmod:
  6880                           
  6881                           	psect	text24
  6882  1BEC                     __ptext24:	
  6883 ;; *************** function ___lwdiv *****************
  6884 ;; Defined at:
  6885 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  divisor         2    6[COMMON] unsigned int 
  6888 ;;  dividend        2    8[COMMON] unsigned int 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  quotient        2   11[COMMON] unsigned int 
  6891 ;;  counter         1   13[COMMON] unsigned char 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  2    6[COMMON] unsigned int 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2, status,0
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6901 ;;      Params:         4       0       0       0       0
  6902 ;;      Locals:         3       0       0       0       0
  6903 ;;      Temps:          1       0       0       0       0
  6904 ;;      Totals:         8       0       0       0       0
  6905 ;;Total ram usage:        8 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; This function calls:
  6908 ;;		Nothing
  6909 ;; This function is called by:
  6910 ;;		_fround
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           
  6915                           ;psect for function ___lwdiv
  6916  1BEC                     ___lwdiv:
  6917  1BEC                     i1l2428:	
  6918                           ;incstack = 0
  6919                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6920                           
  6921  1BEC  01FB               	clrf	___lwdiv@quotient
  6922  1BED  01FC               	clrf	___lwdiv@quotient+1
  6923  1BEE                     i1l2430:
  6924  1BEE  0876               	movf	___lwdiv@divisor,w
  6925  1BEF  0477               	iorwf	___lwdiv@divisor+1,w
  6926  1BF0  1903               	btfsc	3,2
  6927  1BF1  2BF3               	goto	u328_21
  6928  1BF2  2BF4               	goto	u328_20
  6929  1BF3                     u328_21:
  6930  1BF3  2C2B               	goto	i1l2450
  6931  1BF4                     u328_20:
  6932  1BF4                     i1l2432:
  6933  1BF4  01FD               	clrf	___lwdiv@counter
  6934  1BF5  0AFD               	incf	___lwdiv@counter,f
  6935  1BF6  2C02               	goto	i1l2438
  6936  1BF7                     i1l2434:
  6937  1BF7  3001               	movlw	1
  6938  1BF8                     u329_25:
  6939  1BF8  1003               	clrc
  6940  1BF9  0DF6               	rlf	___lwdiv@divisor,f
  6941  1BFA  0DF7               	rlf	___lwdiv@divisor+1,f
  6942  1BFB  3EFF               	addlw	-1
  6943  1BFC  1D03               	skipz
  6944  1BFD  2BF8               	goto	u329_25
  6945  1BFE                     i1l2436:
  6946  1BFE  3001               	movlw	1
  6947  1BFF  00FA               	movwf	??___lwdiv
  6948  1C00  087A               	movf	??___lwdiv,w
  6949  1C01  07FD               	addwf	___lwdiv@counter,f
  6950  1C02                     i1l2438:
  6951  1C02  1FF7               	btfss	___lwdiv@divisor+1,7
  6952  1C03  2C05               	goto	u330_21
  6953  1C04  2C06               	goto	u330_20
  6954  1C05                     u330_21:
  6955  1C05  2BF7               	goto	i1l2434
  6956  1C06                     u330_20:
  6957  1C06                     i1l2440:
  6958  1C06  3001               	movlw	1
  6959  1C07                     u331_25:
  6960  1C07  1003               	clrc
  6961  1C08  0DFB               	rlf	___lwdiv@quotient,f
  6962  1C09  0DFC               	rlf	___lwdiv@quotient+1,f
  6963  1C0A  3EFF               	addlw	-1
  6964  1C0B  1D03               	skipz
  6965  1C0C  2C07               	goto	u331_25
  6966  1C0D  0877               	movf	___lwdiv@divisor+1,w
  6967  1C0E  0279               	subwf	___lwdiv@dividend+1,w
  6968  1C0F  1D03               	skipz
  6969  1C10  2C13               	goto	u332_25
  6970  1C11  0876               	movf	___lwdiv@divisor,w
  6971  1C12  0278               	subwf	___lwdiv@dividend,w
  6972  1C13                     u332_25:
  6973  1C13  1C03               	skipc
  6974  1C14  2C16               	goto	u332_21
  6975  1C15  2C17               	goto	u332_20
  6976  1C16                     u332_21:
  6977  1C16  2C1E               	goto	i1l2446
  6978  1C17                     u332_20:
  6979  1C17                     i1l2442:
  6980  1C17  0876               	movf	___lwdiv@divisor,w
  6981  1C18  02F8               	subwf	___lwdiv@dividend,f
  6982  1C19  0877               	movf	___lwdiv@divisor+1,w
  6983  1C1A  1C03               	skipc
  6984  1C1B  03F9               	decf	___lwdiv@dividend+1,f
  6985  1C1C  02F9               	subwf	___lwdiv@dividend+1,f
  6986  1C1D                     i1l2444:
  6987  1C1D  147B               	bsf	___lwdiv@quotient,0
  6988  1C1E                     i1l2446:
  6989  1C1E  3001               	movlw	1
  6990  1C1F                     u333_25:
  6991  1C1F  1003               	clrc
  6992  1C20  0CF7               	rrf	___lwdiv@divisor+1,f
  6993  1C21  0CF6               	rrf	___lwdiv@divisor,f
  6994  1C22  3EFF               	addlw	-1
  6995  1C23  1D03               	skipz
  6996  1C24  2C1F               	goto	u333_25
  6997  1C25                     i1l2448:
  6998  1C25  3001               	movlw	1
  6999  1C26  02FD               	subwf	___lwdiv@counter,f
  7000  1C27  1D03               	btfss	3,2
  7001  1C28  2C2A               	goto	u334_21
  7002  1C29  2C2B               	goto	u334_20
  7003  1C2A                     u334_21:
  7004  1C2A  2C06               	goto	i1l2440
  7005  1C2B                     u334_20:
  7006  1C2B                     i1l2450:
  7007  1C2B  087C               	movf	___lwdiv@quotient+1,w
  7008  1C2C  00F7               	movwf	?___lwdiv+1
  7009  1C2D  087B               	movf	___lwdiv@quotient,w
  7010  1C2E  00F6               	movwf	?___lwdiv
  7011  1C2F                     i1l629:
  7012  1C2F  0008               	return
  7013  1C30                     __end_of___lwdiv:
  7014                           
  7015                           	psect	text25
  7016  0C9F                     __ptext25:	
  7017 ;; *************** function ___flmul *****************
  7018 ;; Defined at:
  7019 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  b               4    4[BANK0 ] unsigned int 
  7022 ;;  a               4    8[BANK0 ] unsigned int 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  prod            4   24[BANK0 ] struct .
  7025 ;;  grs             4   18[BANK0 ] unsigned long 
  7026 ;;  temp            2   28[BANK0 ] struct .
  7027 ;;  bexp            1   23[BANK0 ] unsigned char 
  7028 ;;  aexp            1   22[BANK0 ] unsigned char 
  7029 ;;  sign            1   17[BANK0 ] unsigned char 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  4    4[BANK0 ] unsigned char 
  7032 ;; Registers used:
  7033 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7039 ;;      Params:         0       8       0       0       0
  7040 ;;      Locals:         0      13       0       0       0
  7041 ;;      Temps:          0       5       0       0       0
  7042 ;;      Totals:         0      26       0       0       0
  7043 ;;Total ram usage:       26 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    1
  7046 ;; This function calls:
  7047 ;;		__Umul8_16
  7048 ;; This function is called by:
  7049 ;;		_ISR
  7050 ;;		_fround
  7051 ;;		_scale
  7052 ;;		_sprintf
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           
  7057                           ;psect for function ___flmul
  7058  0C9F                     ___flmul:
  7059  0C9F                     i1l2670:	
  7060                           ;incstack = 0
  7061                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7062                           
  7063  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  7064  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  7065  0CA1  0827               	movf	___flmul@b+3,w
  7066  0CA2  3980               	andlw	128
  7067  0CA3  00AC               	movwf	??___flmul
  7068  0CA4  082C               	movf	??___flmul,w
  7069  0CA5  00B1               	movwf	___flmul@sign
  7070  0CA6                     i1l2672:
  7071  0CA6  0827               	movf	___flmul@b+3,w
  7072  0CA7  00AC               	movwf	??___flmul
  7073  0CA8  072C               	addwf	??___flmul,w
  7074  0CA9  00AD               	movwf	??___flmul+1
  7075  0CAA  082D               	movf	??___flmul+1,w
  7076  0CAB  00B7               	movwf	___flmul@bexp
  7077  0CAC                     i1l2674:
  7078  0CAC  1FA6               	btfss	___flmul@b+2,7
  7079  0CAD  2CAF               	goto	u387_21
  7080  0CAE  2CB0               	goto	u387_20
  7081  0CAF                     u387_21:
  7082  0CAF  2CB1               	goto	i1l2678
  7083  0CB0                     u387_20:
  7084  0CB0                     i1l2676:
  7085  0CB0  1437               	bsf	___flmul@bexp,0
  7086  0CB1                     i1l2678:
  7087  0CB1  0837               	movf	___flmul@bexp,w
  7088  0CB2  1903               	btfsc	3,2
  7089  0CB3  2CB5               	goto	u388_21
  7090  0CB4  2CB6               	goto	u388_20
  7091  0CB5                     u388_21:
  7092  0CB5  2CC5               	goto	i1l2686
  7093  0CB6                     u388_20:
  7094  0CB6                     i1l2680:
  7095  0CB6  0A37               	incf	___flmul@bexp,w
  7096  0CB7  1D03               	btfss	3,2
  7097  0CB8  2CBA               	goto	u389_21
  7098  0CB9  2CBB               	goto	u389_20
  7099  0CBA                     u389_21:
  7100  0CBA  2CC3               	goto	i1l2684
  7101  0CBB                     u389_20:
  7102  0CBB                     i1l2682:
  7103  0CBB  3000               	movlw	0
  7104  0CBC  00A7               	movwf	___flmul@b+3
  7105  0CBD  3000               	movlw	0
  7106  0CBE  00A6               	movwf	___flmul@b+2
  7107  0CBF  3000               	movlw	0
  7108  0CC0  00A5               	movwf	___flmul@b+1
  7109  0CC1  3000               	movlw	0
  7110  0CC2  00A4               	movwf	___flmul@b
  7111  0CC3                     i1l2684:
  7112  0CC3  17A6               	bsf	___flmul@b+2,7
  7113  0CC4  2CCD               	goto	i1l2688
  7114  0CC5                     i1l2686:
  7115  0CC5  3000               	movlw	0
  7116  0CC6  00A7               	movwf	___flmul@b+3
  7117  0CC7  3000               	movlw	0
  7118  0CC8  00A6               	movwf	___flmul@b+2
  7119  0CC9  3000               	movlw	0
  7120  0CCA  00A5               	movwf	___flmul@b+1
  7121  0CCB  3000               	movlw	0
  7122  0CCC  00A4               	movwf	___flmul@b
  7123  0CCD                     i1l2688:
  7124  0CCD  082B               	movf	___flmul@a+3,w
  7125  0CCE  3980               	andlw	128
  7126  0CCF  00AC               	movwf	??___flmul
  7127  0CD0  082C               	movf	??___flmul,w
  7128  0CD1  06B1               	xorwf	___flmul@sign,f
  7129  0CD2                     i1l2690:
  7130  0CD2  082B               	movf	___flmul@a+3,w
  7131  0CD3  00AC               	movwf	??___flmul
  7132  0CD4  072C               	addwf	??___flmul,w
  7133  0CD5  00AD               	movwf	??___flmul+1
  7134  0CD6  082D               	movf	??___flmul+1,w
  7135  0CD7  00B6               	movwf	___flmul@aexp
  7136  0CD8                     i1l2692:
  7137  0CD8  1FAA               	btfss	___flmul@a+2,7
  7138  0CD9  2CDB               	goto	u390_21
  7139  0CDA  2CDC               	goto	u390_20
  7140  0CDB                     u390_21:
  7141  0CDB  2CDD               	goto	i1l2696
  7142  0CDC                     u390_20:
  7143  0CDC                     i1l2694:
  7144  0CDC  1436               	bsf	___flmul@aexp,0
  7145  0CDD                     i1l2696:
  7146  0CDD  0836               	movf	___flmul@aexp,w
  7147  0CDE  1903               	btfsc	3,2
  7148  0CDF  2CE1               	goto	u391_21
  7149  0CE0  2CE2               	goto	u391_20
  7150  0CE1                     u391_21:
  7151  0CE1  2CF1               	goto	i1l2704
  7152  0CE2                     u391_20:
  7153  0CE2                     i1l2698:
  7154  0CE2  0A36               	incf	___flmul@aexp,w
  7155  0CE3  1D03               	btfss	3,2
  7156  0CE4  2CE6               	goto	u392_21
  7157  0CE5  2CE7               	goto	u392_20
  7158  0CE6                     u392_21:
  7159  0CE6  2CEF               	goto	i1l2702
  7160  0CE7                     u392_20:
  7161  0CE7                     i1l2700:
  7162  0CE7  3000               	movlw	0
  7163  0CE8  00AB               	movwf	___flmul@a+3
  7164  0CE9  3000               	movlw	0
  7165  0CEA  00AA               	movwf	___flmul@a+2
  7166  0CEB  3000               	movlw	0
  7167  0CEC  00A9               	movwf	___flmul@a+1
  7168  0CED  3000               	movlw	0
  7169  0CEE  00A8               	movwf	___flmul@a
  7170  0CEF                     i1l2702:
  7171  0CEF  17AA               	bsf	___flmul@a+2,7
  7172  0CF0  2CF9               	goto	i1l2706
  7173  0CF1                     i1l2704:
  7174  0CF1  3000               	movlw	0
  7175  0CF2  00AB               	movwf	___flmul@a+3
  7176  0CF3  3000               	movlw	0
  7177  0CF4  00AA               	movwf	___flmul@a+2
  7178  0CF5  3000               	movlw	0
  7179  0CF6  00A9               	movwf	___flmul@a+1
  7180  0CF7  3000               	movlw	0
  7181  0CF8  00A8               	movwf	___flmul@a
  7182  0CF9                     i1l2706:
  7183  0CF9  0836               	movf	___flmul@aexp,w
  7184  0CFA  1903               	btfsc	3,2
  7185  0CFB  2CFD               	goto	u393_21
  7186  0CFC  2CFE               	goto	u393_20
  7187  0CFD                     u393_21:
  7188  0CFD  2D03               	goto	i1l2710
  7189  0CFE                     u393_20:
  7190  0CFE                     i1l2708:
  7191  0CFE  0837               	movf	___flmul@bexp,w
  7192  0CFF  1D03               	btfss	3,2
  7193  0D00  2D02               	goto	u394_21
  7194  0D01  2D03               	goto	u394_20
  7195  0D02                     u394_21:
  7196  0D02  2D0C               	goto	i1l2714
  7197  0D03                     u394_20:
  7198  0D03                     i1l2710:
  7199  0D03  3000               	movlw	0
  7200  0D04  00A7               	movwf	?___flmul+3
  7201  0D05  3000               	movlw	0
  7202  0D06  00A6               	movwf	?___flmul+2
  7203  0D07  3000               	movlw	0
  7204  0D08  00A5               	movwf	?___flmul+1
  7205  0D09  3000               	movlw	0
  7206  0D0A  00A4               	movwf	?___flmul
  7207  0D0B  2FFF               	goto	i1l746
  7208  0D0C                     i1l2714:
  7209  0D0C  0824               	movf	___flmul@b,w
  7210  0D0D  00AC               	movwf	??___flmul
  7211  0D0E  082C               	movf	??___flmul,w
  7212  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  7213  0D10  082A               	movf	___flmul@a+2,w
  7214  0D11  120A  118A  27C9  120A  158A  	fcall	__Umul8_16
  7215  0D16  0871               	movf	?__Umul8_16+1,w
  7216  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  7217  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  7218  0D19  00BD               	movwf	___flmul@temp+1
  7219  0D1A  0870               	movf	?__Umul8_16,w
  7220  0D1B  00BC               	movwf	___flmul@temp
  7221  0D1C                     i1l2716:
  7222  0D1C  083C               	movf	___flmul@temp,w
  7223  0D1D  00AC               	movwf	??___flmul
  7224  0D1E  01AD               	clrf	??___flmul+1
  7225  0D1F  01AE               	clrf	??___flmul+2
  7226  0D20  01AF               	clrf	??___flmul+3
  7227  0D21  082F               	movf	??___flmul+3,w
  7228  0D22  00B5               	movwf	___flmul@grs+3
  7229  0D23  082E               	movf	??___flmul+2,w
  7230  0D24  00B4               	movwf	___flmul@grs+2
  7231  0D25  082D               	movf	??___flmul+1,w
  7232  0D26  00B3               	movwf	___flmul@grs+1
  7233  0D27  082C               	movf	??___flmul,w
  7234  0D28  00B2               	movwf	___flmul@grs
  7235  0D29                     i1l2718:
  7236  0D29  083D               	movf	___flmul@temp+1,w
  7237  0D2A  00AC               	movwf	??___flmul
  7238  0D2B  01AD               	clrf	??___flmul+1
  7239  0D2C  01AE               	clrf	??___flmul+2
  7240  0D2D  01AF               	clrf	??___flmul+3
  7241  0D2E  082F               	movf	??___flmul+3,w
  7242  0D2F  00BB               	movwf	___flmul@prod+3
  7243  0D30  082E               	movf	??___flmul+2,w
  7244  0D31  00BA               	movwf	___flmul@prod+2
  7245  0D32  082D               	movf	??___flmul+1,w
  7246  0D33  00B9               	movwf	___flmul@prod+1
  7247  0D34  082C               	movf	??___flmul,w
  7248  0D35  00B8               	movwf	___flmul@prod
  7249  0D36  0825               	movf	___flmul@b+1,w
  7250  0D37  00AC               	movwf	??___flmul
  7251  0D38  082C               	movf	??___flmul,w
  7252  0D39  00F0               	movwf	__Umul8_16@multiplicand
  7253  0D3A  0829               	movf	___flmul@a+1,w
  7254  0D3B  120A  118A  27C9  120A  158A  	fcall	__Umul8_16
  7255  0D40  0871               	movf	?__Umul8_16+1,w
  7256  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  7257  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  7258  0D43  00BD               	movwf	___flmul@temp+1
  7259  0D44  0870               	movf	?__Umul8_16,w
  7260  0D45  00BC               	movwf	___flmul@temp
  7261  0D46                     i1l2720:
  7262  0D46  083C               	movf	___flmul@temp,w
  7263  0D47  00AC               	movwf	??___flmul
  7264  0D48  01AD               	clrf	??___flmul+1
  7265  0D49  01AE               	clrf	??___flmul+2
  7266  0D4A  01AF               	clrf	??___flmul+3
  7267  0D4B  082C               	movf	??___flmul,w
  7268  0D4C  07B2               	addwf	___flmul@grs,f
  7269  0D4D  082D               	movf	??___flmul+1,w
  7270  0D4E  1103               	clrz
  7271  0D4F  1803               	skipnc
  7272  0D50  3E01               	addlw	1
  7273  0D51  1903               	skipnz
  7274  0D52  2D54               	goto	u395_21
  7275  0D53  07B3               	addwf	___flmul@grs+1,f
  7276  0D54                     u395_21:
  7277  0D54  082E               	movf	??___flmul+2,w
  7278  0D55  1103               	clrz
  7279  0D56  1803               	skipnc
  7280  0D57  3E01               	addlw	1
  7281  0D58  1903               	skipnz
  7282  0D59  2D5B               	goto	u395_22
  7283  0D5A  07B4               	addwf	___flmul@grs+2,f
  7284  0D5B                     u395_22:
  7285  0D5B  082F               	movf	??___flmul+3,w
  7286  0D5C  1103               	clrz
  7287  0D5D  1803               	skipnc
  7288  0D5E  3E01               	addlw	1
  7289  0D5F  1903               	skipnz
  7290  0D60  2D62               	goto	u395_23
  7291  0D61  07B5               	addwf	___flmul@grs+3,f
  7292  0D62                     u395_23:
  7293  0D62                     i1l2722:
  7294  0D62  083D               	movf	___flmul@temp+1,w
  7295  0D63  00AC               	movwf	??___flmul
  7296  0D64  01AD               	clrf	??___flmul+1
  7297  0D65  01AE               	clrf	??___flmul+2
  7298  0D66  01AF               	clrf	??___flmul+3
  7299  0D67  082C               	movf	??___flmul,w
  7300  0D68  07B8               	addwf	___flmul@prod,f
  7301  0D69  082D               	movf	??___flmul+1,w
  7302  0D6A  1103               	clrz
  7303  0D6B  1803               	skipnc
  7304  0D6C  3E01               	addlw	1
  7305  0D6D  1903               	skipnz
  7306  0D6E  2D70               	goto	u396_21
  7307  0D6F  07B9               	addwf	___flmul@prod+1,f
  7308  0D70                     u396_21:
  7309  0D70  082E               	movf	??___flmul+2,w
  7310  0D71  1103               	clrz
  7311  0D72  1803               	skipnc
  7312  0D73  3E01               	addlw	1
  7313  0D74  1903               	skipnz
  7314  0D75  2D77               	goto	u396_22
  7315  0D76  07BA               	addwf	___flmul@prod+2,f
  7316  0D77                     u396_22:
  7317  0D77  082F               	movf	??___flmul+3,w
  7318  0D78  1103               	clrz
  7319  0D79  1803               	skipnc
  7320  0D7A  3E01               	addlw	1
  7321  0D7B  1903               	skipnz
  7322  0D7C  2D7E               	goto	u396_23
  7323  0D7D  07BB               	addwf	___flmul@prod+3,f
  7324  0D7E                     u396_23:
  7325  0D7E  0826               	movf	___flmul@b+2,w
  7326  0D7F  00AC               	movwf	??___flmul
  7327  0D80  082C               	movf	??___flmul,w
  7328  0D81  00F0               	movwf	__Umul8_16@multiplicand
  7329  0D82  0828               	movf	___flmul@a,w
  7330  0D83  120A  118A  27C9  120A  158A  	fcall	__Umul8_16
  7331  0D88  0871               	movf	?__Umul8_16+1,w
  7332  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  7333  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  7334  0D8B  00BD               	movwf	___flmul@temp+1
  7335  0D8C  0870               	movf	?__Umul8_16,w
  7336  0D8D  00BC               	movwf	___flmul@temp
  7337  0D8E                     i1l2724:
  7338  0D8E  083C               	movf	___flmul@temp,w
  7339  0D8F  00AC               	movwf	??___flmul
  7340  0D90  01AD               	clrf	??___flmul+1
  7341  0D91  01AE               	clrf	??___flmul+2
  7342  0D92  01AF               	clrf	??___flmul+3
  7343  0D93  082C               	movf	??___flmul,w
  7344  0D94  07B2               	addwf	___flmul@grs,f
  7345  0D95  082D               	movf	??___flmul+1,w
  7346  0D96  1103               	clrz
  7347  0D97  1803               	skipnc
  7348  0D98  3E01               	addlw	1
  7349  0D99  1903               	skipnz
  7350  0D9A  2D9C               	goto	u397_21
  7351  0D9B  07B3               	addwf	___flmul@grs+1,f
  7352  0D9C                     u397_21:
  7353  0D9C  082E               	movf	??___flmul+2,w
  7354  0D9D  1103               	clrz
  7355  0D9E  1803               	skipnc
  7356  0D9F  3E01               	addlw	1
  7357  0DA0  1903               	skipnz
  7358  0DA1  2DA3               	goto	u397_22
  7359  0DA2  07B4               	addwf	___flmul@grs+2,f
  7360  0DA3                     u397_22:
  7361  0DA3  082F               	movf	??___flmul+3,w
  7362  0DA4  1103               	clrz
  7363  0DA5  1803               	skipnc
  7364  0DA6  3E01               	addlw	1
  7365  0DA7  1903               	skipnz
  7366  0DA8  2DAA               	goto	u397_23
  7367  0DA9  07B5               	addwf	___flmul@grs+3,f
  7368  0DAA                     u397_23:
  7369  0DAA                     i1l2726:
  7370  0DAA  083D               	movf	___flmul@temp+1,w
  7371  0DAB  00AC               	movwf	??___flmul
  7372  0DAC  01AD               	clrf	??___flmul+1
  7373  0DAD  01AE               	clrf	??___flmul+2
  7374  0DAE  01AF               	clrf	??___flmul+3
  7375  0DAF  082C               	movf	??___flmul,w
  7376  0DB0  07B8               	addwf	___flmul@prod,f
  7377  0DB1  082D               	movf	??___flmul+1,w
  7378  0DB2  1103               	clrz
  7379  0DB3  1803               	skipnc
  7380  0DB4  3E01               	addlw	1
  7381  0DB5  1903               	skipnz
  7382  0DB6  2DB8               	goto	u398_21
  7383  0DB7  07B9               	addwf	___flmul@prod+1,f
  7384  0DB8                     u398_21:
  7385  0DB8  082E               	movf	??___flmul+2,w
  7386  0DB9  1103               	clrz
  7387  0DBA  1803               	skipnc
  7388  0DBB  3E01               	addlw	1
  7389  0DBC  1903               	skipnz
  7390  0DBD  2DBF               	goto	u398_22
  7391  0DBE  07BA               	addwf	___flmul@prod+2,f
  7392  0DBF                     u398_22:
  7393  0DBF  082F               	movf	??___flmul+3,w
  7394  0DC0  1103               	clrz
  7395  0DC1  1803               	skipnc
  7396  0DC2  3E01               	addlw	1
  7397  0DC3  1903               	skipnz
  7398  0DC4  2DC6               	goto	u398_23
  7399  0DC5  07BB               	addwf	___flmul@prod+3,f
  7400  0DC6                     u398_23:
  7401  0DC6                     i1l2728:
  7402  0DC6  3008               	movlw	8
  7403  0DC7  00AC               	movwf	??___flmul
  7404  0DC8                     u399_25:
  7405  0DC8  1003               	clrc
  7406  0DC9  0DB2               	rlf	___flmul@grs,f
  7407  0DCA  0DB3               	rlf	___flmul@grs+1,f
  7408  0DCB  0DB4               	rlf	___flmul@grs+2,f
  7409  0DCC  0DB5               	rlf	___flmul@grs+3,f
  7410  0DCD  0BAC               	decfsz	??___flmul,f
  7411  0DCE  2DC8               	goto	u399_25
  7412  0DCF                     i1l2730:
  7413  0DCF  0825               	movf	___flmul@b+1,w
  7414  0DD0  00AC               	movwf	??___flmul
  7415  0DD1  082C               	movf	??___flmul,w
  7416  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  7417  0DD3  0828               	movf	___flmul@a,w
  7418  0DD4  120A  118A  27C9  120A  158A  	fcall	__Umul8_16
  7419  0DD9  0871               	movf	?__Umul8_16+1,w
  7420  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  7421  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  7422  0DDC  00BD               	movwf	___flmul@temp+1
  7423  0DDD  0870               	movf	?__Umul8_16,w
  7424  0DDE  00BC               	movwf	___flmul@temp
  7425  0DDF                     i1l2732:
  7426  0DDF  083C               	movf	___flmul@temp,w
  7427  0DE0  00AC               	movwf	??___flmul
  7428  0DE1  083D               	movf	___flmul@temp+1,w
  7429  0DE2  00AD               	movwf	??___flmul+1
  7430  0DE3  01AE               	clrf	??___flmul+2
  7431  0DE4  01AF               	clrf	??___flmul+3
  7432  0DE5  082C               	movf	??___flmul,w
  7433  0DE6  07B2               	addwf	___flmul@grs,f
  7434  0DE7  082D               	movf	??___flmul+1,w
  7435  0DE8  1103               	clrz
  7436  0DE9  1803               	skipnc
  7437  0DEA  3E01               	addlw	1
  7438  0DEB  1903               	skipnz
  7439  0DEC  2DEE               	goto	u400_21
  7440  0DED  07B3               	addwf	___flmul@grs+1,f
  7441  0DEE                     u400_21:
  7442  0DEE  082E               	movf	??___flmul+2,w
  7443  0DEF  1103               	clrz
  7444  0DF0  1803               	skipnc
  7445  0DF1  3E01               	addlw	1
  7446  0DF2  1903               	skipnz
  7447  0DF3  2DF5               	goto	u400_22
  7448  0DF4  07B4               	addwf	___flmul@grs+2,f
  7449  0DF5                     u400_22:
  7450  0DF5  082F               	movf	??___flmul+3,w
  7451  0DF6  1103               	clrz
  7452  0DF7  1803               	skipnc
  7453  0DF8  3E01               	addlw	1
  7454  0DF9  1903               	skipnz
  7455  0DFA  2DFC               	goto	u400_23
  7456  0DFB  07B5               	addwf	___flmul@grs+3,f
  7457  0DFC                     u400_23:
  7458  0DFC                     i1l2734:
  7459  0DFC  0824               	movf	___flmul@b,w
  7460  0DFD  00AC               	movwf	??___flmul
  7461  0DFE  082C               	movf	??___flmul,w
  7462  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  7463  0E00  0829               	movf	___flmul@a+1,w
  7464  0E01  120A  118A  27C9  120A  158A  	fcall	__Umul8_16
  7465  0E06  0871               	movf	?__Umul8_16+1,w
  7466  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  7467  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  7468  0E09  00BD               	movwf	___flmul@temp+1
  7469  0E0A  0870               	movf	?__Umul8_16,w
  7470  0E0B  00BC               	movwf	___flmul@temp
  7471  0E0C                     i1l2736:
  7472  0E0C  083C               	movf	___flmul@temp,w
  7473  0E0D  00AC               	movwf	??___flmul
  7474  0E0E  083D               	movf	___flmul@temp+1,w
  7475  0E0F  00AD               	movwf	??___flmul+1
  7476  0E10  01AE               	clrf	??___flmul+2
  7477  0E11  01AF               	clrf	??___flmul+3
  7478  0E12  082C               	movf	??___flmul,w
  7479  0E13  07B2               	addwf	___flmul@grs,f
  7480  0E14  082D               	movf	??___flmul+1,w
  7481  0E15  1103               	clrz
  7482  0E16  1803               	skipnc
  7483  0E17  3E01               	addlw	1
  7484  0E18  1903               	skipnz
  7485  0E19  2E1B               	goto	u401_21
  7486  0E1A  07B3               	addwf	___flmul@grs+1,f
  7487  0E1B                     u401_21:
  7488  0E1B  082E               	movf	??___flmul+2,w
  7489  0E1C  1103               	clrz
  7490  0E1D  1803               	skipnc
  7491  0E1E  3E01               	addlw	1
  7492  0E1F  1903               	skipnz
  7493  0E20  2E22               	goto	u401_22
  7494  0E21  07B4               	addwf	___flmul@grs+2,f
  7495  0E22                     u401_22:
  7496  0E22  082F               	movf	??___flmul+3,w
  7497  0E23  1103               	clrz
  7498  0E24  1803               	skipnc
  7499  0E25  3E01               	addlw	1
  7500  0E26  1903               	skipnz
  7501  0E27  2E29               	goto	u401_23
  7502  0E28  07B5               	addwf	___flmul@grs+3,f
  7503  0E29                     u401_23:
  7504  0E29                     i1l2738:
  7505  0E29  3008               	movlw	8
  7506  0E2A  00AC               	movwf	??___flmul
  7507  0E2B                     u402_25:
  7508  0E2B  1003               	clrc
  7509  0E2C  0DB2               	rlf	___flmul@grs,f
  7510  0E2D  0DB3               	rlf	___flmul@grs+1,f
  7511  0E2E  0DB4               	rlf	___flmul@grs+2,f
  7512  0E2F  0DB5               	rlf	___flmul@grs+3,f
  7513  0E30  0BAC               	decfsz	??___flmul,f
  7514  0E31  2E2B               	goto	u402_25
  7515  0E32  0824               	movf	___flmul@b,w
  7516  0E33  00AC               	movwf	??___flmul
  7517  0E34  082C               	movf	??___flmul,w
  7518  0E35  00F0               	movwf	__Umul8_16@multiplicand
  7519  0E36  0828               	movf	___flmul@a,w
  7520  0E37  120A  118A  27C9  120A  158A  	fcall	__Umul8_16
  7521  0E3C  0871               	movf	?__Umul8_16+1,w
  7522  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  7523  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  7524  0E3F  00BD               	movwf	___flmul@temp+1
  7525  0E40  0870               	movf	?__Umul8_16,w
  7526  0E41  00BC               	movwf	___flmul@temp
  7527  0E42                     i1l2740:
  7528  0E42  083C               	movf	___flmul@temp,w
  7529  0E43  00AC               	movwf	??___flmul
  7530  0E44  083D               	movf	___flmul@temp+1,w
  7531  0E45  00AD               	movwf	??___flmul+1
  7532  0E46  01AE               	clrf	??___flmul+2
  7533  0E47  01AF               	clrf	??___flmul+3
  7534  0E48  082C               	movf	??___flmul,w
  7535  0E49  07B2               	addwf	___flmul@grs,f
  7536  0E4A  082D               	movf	??___flmul+1,w
  7537  0E4B  1103               	clrz
  7538  0E4C  1803               	skipnc
  7539  0E4D  3E01               	addlw	1
  7540  0E4E  1903               	skipnz
  7541  0E4F  2E51               	goto	u403_21
  7542  0E50  07B3               	addwf	___flmul@grs+1,f
  7543  0E51                     u403_21:
  7544  0E51  082E               	movf	??___flmul+2,w
  7545  0E52  1103               	clrz
  7546  0E53  1803               	skipnc
  7547  0E54  3E01               	addlw	1
  7548  0E55  1903               	skipnz
  7549  0E56  2E58               	goto	u403_22
  7550  0E57  07B4               	addwf	___flmul@grs+2,f
  7551  0E58                     u403_22:
  7552  0E58  082F               	movf	??___flmul+3,w
  7553  0E59  1103               	clrz
  7554  0E5A  1803               	skipnc
  7555  0E5B  3E01               	addlw	1
  7556  0E5C  1903               	skipnz
  7557  0E5D  2E5F               	goto	u403_23
  7558  0E5E  07B5               	addwf	___flmul@grs+3,f
  7559  0E5F                     u403_23:
  7560  0E5F                     i1l2742:
  7561  0E5F  0825               	movf	___flmul@b+1,w
  7562  0E60  00AC               	movwf	??___flmul
  7563  0E61  082C               	movf	??___flmul,w
  7564  0E62  00F0               	movwf	__Umul8_16@multiplicand
  7565  0E63  082A               	movf	___flmul@a+2,w
  7566  0E64  120A  118A  27C9  120A  158A  	fcall	__Umul8_16
  7567  0E69  0871               	movf	?__Umul8_16+1,w
  7568  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  7569  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  7570  0E6C  00BD               	movwf	___flmul@temp+1
  7571  0E6D  0870               	movf	?__Umul8_16,w
  7572  0E6E  00BC               	movwf	___flmul@temp
  7573  0E6F  083C               	movf	___flmul@temp,w
  7574  0E70  00AC               	movwf	??___flmul
  7575  0E71  083D               	movf	___flmul@temp+1,w
  7576  0E72  00AD               	movwf	??___flmul+1
  7577  0E73  01AE               	clrf	??___flmul+2
  7578  0E74  01AF               	clrf	??___flmul+3
  7579  0E75  082C               	movf	??___flmul,w
  7580  0E76  07B8               	addwf	___flmul@prod,f
  7581  0E77  082D               	movf	??___flmul+1,w
  7582  0E78  1103               	clrz
  7583  0E79  1803               	skipnc
  7584  0E7A  3E01               	addlw	1
  7585  0E7B  1903               	skipnz
  7586  0E7C  2E7E               	goto	u404_21
  7587  0E7D  07B9               	addwf	___flmul@prod+1,f
  7588  0E7E                     u404_21:
  7589  0E7E  082E               	movf	??___flmul+2,w
  7590  0E7F  1103               	clrz
  7591  0E80  1803               	skipnc
  7592  0E81  3E01               	addlw	1
  7593  0E82  1903               	skipnz
  7594  0E83  2E85               	goto	u404_22
  7595  0E84  07BA               	addwf	___flmul@prod+2,f
  7596  0E85                     u404_22:
  7597  0E85  082F               	movf	??___flmul+3,w
  7598  0E86  1103               	clrz
  7599  0E87  1803               	skipnc
  7600  0E88  3E01               	addlw	1
  7601  0E89  1903               	skipnz
  7602  0E8A  2E8C               	goto	u404_23
  7603  0E8B  07BB               	addwf	___flmul@prod+3,f
  7604  0E8C                     u404_23:
  7605  0E8C                     i1l2744:
  7606  0E8C  0826               	movf	___flmul@b+2,w
  7607  0E8D  00AC               	movwf	??___flmul
  7608  0E8E  082C               	movf	??___flmul,w
  7609  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  7610  0E90  0829               	movf	___flmul@a+1,w
  7611  0E91  120A  118A  27C9  120A  158A  	fcall	__Umul8_16
  7612  0E96  0871               	movf	?__Umul8_16+1,w
  7613  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  7614  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  7615  0E99  00BD               	movwf	___flmul@temp+1
  7616  0E9A  0870               	movf	?__Umul8_16,w
  7617  0E9B  00BC               	movwf	___flmul@temp
  7618  0E9C                     i1l2746:
  7619  0E9C  083C               	movf	___flmul@temp,w
  7620  0E9D  00AC               	movwf	??___flmul
  7621  0E9E  083D               	movf	___flmul@temp+1,w
  7622  0E9F  00AD               	movwf	??___flmul+1
  7623  0EA0  01AE               	clrf	??___flmul+2
  7624  0EA1  01AF               	clrf	??___flmul+3
  7625  0EA2  082C               	movf	??___flmul,w
  7626  0EA3  07B8               	addwf	___flmul@prod,f
  7627  0EA4  082D               	movf	??___flmul+1,w
  7628  0EA5  1103               	clrz
  7629  0EA6  1803               	skipnc
  7630  0EA7  3E01               	addlw	1
  7631  0EA8  1903               	skipnz
  7632  0EA9  2EAB               	goto	u405_21
  7633  0EAA  07B9               	addwf	___flmul@prod+1,f
  7634  0EAB                     u405_21:
  7635  0EAB  082E               	movf	??___flmul+2,w
  7636  0EAC  1103               	clrz
  7637  0EAD  1803               	skipnc
  7638  0EAE  3E01               	addlw	1
  7639  0EAF  1903               	skipnz
  7640  0EB0  2EB2               	goto	u405_22
  7641  0EB1  07BA               	addwf	___flmul@prod+2,f
  7642  0EB2                     u405_22:
  7643  0EB2  082F               	movf	??___flmul+3,w
  7644  0EB3  1103               	clrz
  7645  0EB4  1803               	skipnc
  7646  0EB5  3E01               	addlw	1
  7647  0EB6  1903               	skipnz
  7648  0EB7  2EB9               	goto	u405_23
  7649  0EB8  07BB               	addwf	___flmul@prod+3,f
  7650  0EB9                     u405_23:
  7651  0EB9  0826               	movf	___flmul@b+2,w
  7652  0EBA  00AC               	movwf	??___flmul
  7653  0EBB  082C               	movf	??___flmul,w
  7654  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  7655  0EBD  082A               	movf	___flmul@a+2,w
  7656  0EBE  120A  118A  27C9  120A  158A  	fcall	__Umul8_16
  7657  0EC3  0871               	movf	?__Umul8_16+1,w
  7658  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  7659  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  7660  0EC6  00BD               	movwf	___flmul@temp+1
  7661  0EC7  0870               	movf	?__Umul8_16,w
  7662  0EC8  00BC               	movwf	___flmul@temp
  7663  0EC9                     i1l2748:
  7664  0EC9  083C               	movf	___flmul@temp,w
  7665  0ECA  00AC               	movwf	??___flmul
  7666  0ECB  083D               	movf	___flmul@temp+1,w
  7667  0ECC  00AD               	movwf	??___flmul+1
  7668  0ECD  01AE               	clrf	??___flmul+2
  7669  0ECE  01AF               	clrf	??___flmul+3
  7670  0ECF  3008               	movlw	8
  7671  0ED0                     u406_25:
  7672  0ED0  1003               	clrc
  7673  0ED1  0DAC               	rlf	??___flmul,f
  7674  0ED2  0DAD               	rlf	??___flmul+1,f
  7675  0ED3  0DAE               	rlf	??___flmul+2,f
  7676  0ED4  0DAF               	rlf	??___flmul+3,f
  7677  0ED5                     u406_20:
  7678  0ED5  3EFF               	addlw	-1
  7679  0ED6  1D03               	skipz
  7680  0ED7  2ED0               	goto	u406_25
  7681  0ED8  082C               	movf	??___flmul,w
  7682  0ED9  07B8               	addwf	___flmul@prod,f
  7683  0EDA  082D               	movf	??___flmul+1,w
  7684  0EDB  1103               	clrz
  7685  0EDC  1803               	skipnc
  7686  0EDD  3E01               	addlw	1
  7687  0EDE  1903               	skipnz
  7688  0EDF  2EE1               	goto	u407_21
  7689  0EE0  07B9               	addwf	___flmul@prod+1,f
  7690  0EE1                     u407_21:
  7691  0EE1  082E               	movf	??___flmul+2,w
  7692  0EE2  1103               	clrz
  7693  0EE3  1803               	skipnc
  7694  0EE4  3E01               	addlw	1
  7695  0EE5  1903               	skipnz
  7696  0EE6  2EE8               	goto	u407_22
  7697  0EE7  07BA               	addwf	___flmul@prod+2,f
  7698  0EE8                     u407_22:
  7699  0EE8  082F               	movf	??___flmul+3,w
  7700  0EE9  1103               	clrz
  7701  0EEA  1803               	skipnc
  7702  0EEB  3E01               	addlw	1
  7703  0EEC  1903               	skipnz
  7704  0EED  2EEF               	goto	u407_23
  7705  0EEE  07BB               	addwf	___flmul@prod+3,f
  7706  0EEF                     u407_23:
  7707  0EEF                     i1l2750:
  7708  0EEF  0832               	movf	___flmul@grs,w
  7709  0EF0  00AC               	movwf	??___flmul
  7710  0EF1  0833               	movf	___flmul@grs+1,w
  7711  0EF2  00AD               	movwf	??___flmul+1
  7712  0EF3  0834               	movf	___flmul@grs+2,w
  7713  0EF4  00AE               	movwf	??___flmul+2
  7714  0EF5  0835               	movf	___flmul@grs+3,w
  7715  0EF6  00AF               	movwf	??___flmul+3
  7716  0EF7  3018               	movlw	24
  7717  0EF8                     u408_25:
  7718  0EF8  1003               	clrc
  7719  0EF9  0CAF               	rrf	??___flmul+3,f
  7720  0EFA  0CAE               	rrf	??___flmul+2,f
  7721  0EFB  0CAD               	rrf	??___flmul+1,f
  7722  0EFC  0CAC               	rrf	??___flmul,f
  7723  0EFD                     u408_20:
  7724  0EFD  3EFF               	addlw	-1
  7725  0EFE  1D03               	skipz
  7726  0EFF  2EF8               	goto	u408_25
  7727  0F00  082C               	movf	??___flmul,w
  7728  0F01  07B8               	addwf	___flmul@prod,f
  7729  0F02  082D               	movf	??___flmul+1,w
  7730  0F03  1103               	clrz
  7731  0F04  1803               	skipnc
  7732  0F05  3E01               	addlw	1
  7733  0F06  1903               	skipnz
  7734  0F07  2F09               	goto	u409_21
  7735  0F08  07B9               	addwf	___flmul@prod+1,f
  7736  0F09                     u409_21:
  7737  0F09  082E               	movf	??___flmul+2,w
  7738  0F0A  1103               	clrz
  7739  0F0B  1803               	skipnc
  7740  0F0C  3E01               	addlw	1
  7741  0F0D  1903               	skipnz
  7742  0F0E  2F10               	goto	u409_22
  7743  0F0F  07BA               	addwf	___flmul@prod+2,f
  7744  0F10                     u409_22:
  7745  0F10  082F               	movf	??___flmul+3,w
  7746  0F11  1103               	clrz
  7747  0F12  1803               	skipnc
  7748  0F13  3E01               	addlw	1
  7749  0F14  1903               	skipnz
  7750  0F15  2F17               	goto	u409_23
  7751  0F16  07BB               	addwf	___flmul@prod+3,f
  7752  0F17                     u409_23:
  7753  0F17                     i1l2752:
  7754  0F17  3008               	movlw	8
  7755  0F18  00AC               	movwf	??___flmul
  7756  0F19                     u410_25:
  7757  0F19  1003               	clrc
  7758  0F1A  0DB2               	rlf	___flmul@grs,f
  7759  0F1B  0DB3               	rlf	___flmul@grs+1,f
  7760  0F1C  0DB4               	rlf	___flmul@grs+2,f
  7761  0F1D  0DB5               	rlf	___flmul@grs+3,f
  7762  0F1E  0BAC               	decfsz	??___flmul,f
  7763  0F1F  2F19               	goto	u410_25
  7764  0F20                     i1l2754:
  7765  0F20  0837               	movf	___flmul@bexp,w
  7766  0F21  0736               	addwf	___flmul@aexp,w
  7767  0F22  00AC               	movwf	??___flmul
  7768  0F23  01AD               	clrf	??___flmul+1
  7769  0F24  0DAD               	rlf	??___flmul+1,f
  7770  0F25  082C               	movf	??___flmul,w
  7771  0F26  3E82               	addlw	130
  7772  0F27  00BC               	movwf	___flmul@temp
  7773  0F28  082D               	movf	??___flmul+1,w
  7774  0F29  1803               	skipnc
  7775  0F2A  3E01               	addlw	1
  7776  0F2B  3EFF               	addlw	255
  7777  0F2C  00BD               	movwf	___flmul@temp+1
  7778  0F2D  2F4B               	goto	i1l2766
  7779  0F2E                     i1l2756:
  7780  0F2E  3001               	movlw	1
  7781  0F2F  00AC               	movwf	??___flmul
  7782  0F30                     u411_25:
  7783  0F30  1003               	clrc
  7784  0F31  0DB8               	rlf	___flmul@prod,f
  7785  0F32  0DB9               	rlf	___flmul@prod+1,f
  7786  0F33  0DBA               	rlf	___flmul@prod+2,f
  7787  0F34  0DBB               	rlf	___flmul@prod+3,f
  7788  0F35  0BAC               	decfsz	??___flmul,f
  7789  0F36  2F30               	goto	u411_25
  7790  0F37                     i1l2758:
  7791  0F37  1FB5               	btfss	___flmul@grs+3,7
  7792  0F38  2F3A               	goto	u412_21
  7793  0F39  2F3B               	goto	u412_20
  7794  0F3A                     u412_21:
  7795  0F3A  2F3C               	goto	i1l2762
  7796  0F3B                     u412_20:
  7797  0F3B                     i1l2760:
  7798  0F3B  1438               	bsf	___flmul@prod,0
  7799  0F3C                     i1l2762:
  7800  0F3C  3001               	movlw	1
  7801  0F3D  00AC               	movwf	??___flmul
  7802  0F3E                     u413_25:
  7803  0F3E  1003               	clrc
  7804  0F3F  0DB2               	rlf	___flmul@grs,f
  7805  0F40  0DB3               	rlf	___flmul@grs+1,f
  7806  0F41  0DB4               	rlf	___flmul@grs+2,f
  7807  0F42  0DB5               	rlf	___flmul@grs+3,f
  7808  0F43  0BAC               	decfsz	??___flmul,f
  7809  0F44  2F3E               	goto	u413_25
  7810  0F45                     i1l2764:
  7811  0F45  30FF               	movlw	255
  7812  0F46  07BC               	addwf	___flmul@temp,f
  7813  0F47  1803               	skipnc
  7814  0F48  0ABD               	incf	___flmul@temp+1,f
  7815  0F49  30FF               	movlw	255
  7816  0F4A  07BD               	addwf	___flmul@temp+1,f
  7817  0F4B                     i1l2766:
  7818  0F4B  1FBA               	btfss	___flmul@prod+2,7
  7819  0F4C  2F4E               	goto	u414_21
  7820  0F4D  2F4F               	goto	u414_20
  7821  0F4E                     u414_21:
  7822  0F4E  2F2E               	goto	i1l2756
  7823  0F4F                     u414_20:
  7824  0F4F                     i1l2768:
  7825  0F4F  01B6               	clrf	___flmul@aexp
  7826  0F50                     i1l2770:
  7827  0F50  1FB5               	btfss	___flmul@grs+3,7
  7828  0F51  2F53               	goto	u415_21
  7829  0F52  2F54               	goto	u415_20
  7830  0F53                     u415_21:
  7831  0F53  2F70               	goto	i1l2778
  7832  0F54                     u415_20:
  7833  0F54                     i1l2772:
  7834  0F54  30FF               	movlw	255
  7835  0F55  0532               	andwf	___flmul@grs,w
  7836  0F56  00AC               	movwf	??___flmul
  7837  0F57  30FF               	movlw	255
  7838  0F58  0533               	andwf	___flmul@grs+1,w
  7839  0F59  00AD               	movwf	??___flmul+1
  7840  0F5A  30FF               	movlw	255
  7841  0F5B  0534               	andwf	___flmul@grs+2,w
  7842  0F5C  00AE               	movwf	??___flmul+2
  7843  0F5D  307F               	movlw	127
  7844  0F5E  0535               	andwf	___flmul@grs+3,w
  7845  0F5F  00AF               	movwf	??___flmul+3
  7846  0F60  082F               	movf	??___flmul+3,w
  7847  0F61  042E               	iorwf	??___flmul+2,w
  7848  0F62  042D               	iorwf	??___flmul+1,w
  7849  0F63  042C               	iorwf	??___flmul,w
  7850  0F64  1903               	skipnz
  7851  0F65  2F67               	goto	u416_21
  7852  0F66  2F68               	goto	u416_20
  7853  0F67                     u416_21:
  7854  0F67  2F6B               	goto	i1l752
  7855  0F68                     u416_20:
  7856  0F68                     i1l2774:
  7857  0F68  01B6               	clrf	___flmul@aexp
  7858  0F69  0AB6               	incf	___flmul@aexp,f
  7859  0F6A  2F70               	goto	i1l2778
  7860  0F6B                     i1l752:
  7861  0F6B  1C38               	btfss	___flmul@prod,0
  7862  0F6C  2F6E               	goto	u417_21
  7863  0F6D  2F6F               	goto	u417_20
  7864  0F6E                     u417_21:
  7865  0F6E  2F70               	goto	i1l2778
  7866  0F6F                     u417_20:
  7867  0F6F  2F68               	goto	i1l2774
  7868  0F70                     i1l2778:
  7869  0F70  0836               	movf	___flmul@aexp,w
  7870  0F71  1903               	btfsc	3,2
  7871  0F72  2F74               	goto	u418_21
  7872  0F73  2F75               	goto	u418_20
  7873  0F74                     u418_21:
  7874  0F74  2FA6               	goto	i1l2788
  7875  0F75                     u418_20:
  7876  0F75                     i1l2780:
  7877  0F75  3001               	movlw	1
  7878  0F76  07B8               	addwf	___flmul@prod,f
  7879  0F77  3000               	movlw	0
  7880  0F78  1803               	skipnc
  7881  0F79  3001               	movlw	1
  7882  0F7A  07B9               	addwf	___flmul@prod+1,f
  7883  0F7B  3000               	movlw	0
  7884  0F7C  1803               	skipnc
  7885  0F7D  3001               	movlw	1
  7886  0F7E  07BA               	addwf	___flmul@prod+2,f
  7887  0F7F  3000               	movlw	0
  7888  0F80  1803               	skipnc
  7889  0F81  3001               	movlw	1
  7890  0F82  07BB               	addwf	___flmul@prod+3,f
  7891  0F83                     i1l2782:
  7892  0F83  1C3B               	btfss	___flmul@prod+3,0
  7893  0F84  2F86               	goto	u419_21
  7894  0F85  2F87               	goto	u419_20
  7895  0F86                     u419_21:
  7896  0F86  2FA6               	goto	i1l2788
  7897  0F87                     u419_20:
  7898  0F87                     i1l2784:
  7899  0F87  0838               	movf	___flmul@prod,w
  7900  0F88  00AC               	movwf	??___flmul
  7901  0F89  0839               	movf	___flmul@prod+1,w
  7902  0F8A  00AD               	movwf	??___flmul+1
  7903  0F8B  083A               	movf	___flmul@prod+2,w
  7904  0F8C  00AE               	movwf	??___flmul+2
  7905  0F8D  083B               	movf	___flmul@prod+3,w
  7906  0F8E  00AF               	movwf	??___flmul+3
  7907  0F8F  3001               	movlw	1
  7908  0F90  00B0               	movwf	??___flmul+4
  7909  0F91                     u420_25:
  7910  0F91  0D2F               	rlf	??___flmul+3,w
  7911  0F92  0CAF               	rrf	??___flmul+3,f
  7912  0F93  0CAE               	rrf	??___flmul+2,f
  7913  0F94  0CAD               	rrf	??___flmul+1,f
  7914  0F95  0CAC               	rrf	??___flmul,f
  7915  0F96                     u420_20:
  7916  0F96  0BB0               	decfsz	??___flmul+4,f
  7917  0F97  2F91               	goto	u420_25
  7918  0F98  082F               	movf	??___flmul+3,w
  7919  0F99  00BB               	movwf	___flmul@prod+3
  7920  0F9A  082E               	movf	??___flmul+2,w
  7921  0F9B  00BA               	movwf	___flmul@prod+2
  7922  0F9C  082D               	movf	??___flmul+1,w
  7923  0F9D  00B9               	movwf	___flmul@prod+1
  7924  0F9E  082C               	movf	??___flmul,w
  7925  0F9F  00B8               	movwf	___flmul@prod
  7926  0FA0                     i1l2786:
  7927  0FA0  3001               	movlw	1
  7928  0FA1  07BC               	addwf	___flmul@temp,f
  7929  0FA2  1803               	skipnc
  7930  0FA3  0ABD               	incf	___flmul@temp+1,f
  7931  0FA4  3000               	movlw	0
  7932  0FA5  07BD               	addwf	___flmul@temp+1,f
  7933  0FA6                     i1l2788:
  7934  0FA6  083D               	movf	___flmul@temp+1,w
  7935  0FA7  3A80               	xorlw	128
  7936  0FA8  00FF               	movwf	btemp+1
  7937  0FA9  3080               	movlw	128
  7938  0FAA  027F               	subwf	btemp+1,w
  7939  0FAB  1D03               	skipz
  7940  0FAC  2FAF               	goto	u421_25
  7941  0FAD  30FF               	movlw	255
  7942  0FAE  023C               	subwf	___flmul@temp,w
  7943  0FAF                     u421_25:
  7944  0FAF  1C03               	skipc
  7945  0FB0  2FB2               	goto	u421_21
  7946  0FB1  2FB3               	goto	u421_20
  7947  0FB2                     u421_21:
  7948  0FB2  2FBE               	goto	i1l2792
  7949  0FB3                     u421_20:
  7950  0FB3                     i1l2790:
  7951  0FB3  307F               	movlw	127
  7952  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  7953  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  7954  0FB6  00BB               	movwf	___flmul@prod+3
  7955  0FB7  3080               	movlw	128
  7956  0FB8  00BA               	movwf	___flmul@prod+2
  7957  0FB9  3000               	movlw	0
  7958  0FBA  00B9               	movwf	___flmul@prod+1
  7959  0FBB  3000               	movlw	0
  7960  0FBC  00B8               	movwf	___flmul@prod
  7961  0FBD  2FF3               	goto	i1l758
  7962  0FBE                     i1l2792:
  7963  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  7964  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  7965  0FC0  083D               	movf	___flmul@temp+1,w
  7966  0FC1  3A80               	xorlw	128
  7967  0FC2  00FF               	movwf	btemp+1
  7968  0FC3  3080               	movlw	128
  7969  0FC4  027F               	subwf	btemp+1,w
  7970  0FC5  1D03               	skipz
  7971  0FC6  2FC9               	goto	u422_25
  7972  0FC7  3001               	movlw	1
  7973  0FC8  023C               	subwf	___flmul@temp,w
  7974  0FC9                     u422_25:
  7975  0FC9  1803               	skipnc
  7976  0FCA  2FCC               	goto	u422_21
  7977  0FCB  2FCD               	goto	u422_20
  7978  0FCC                     u422_21:
  7979  0FCC  2FD9               	goto	i1l2798
  7980  0FCD                     u422_20:
  7981  0FCD                     i1l2794:
  7982  0FCD  3000               	movlw	0
  7983  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  7984  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  7985  0FD0  00BB               	movwf	___flmul@prod+3
  7986  0FD1  3000               	movlw	0
  7987  0FD2  00BA               	movwf	___flmul@prod+2
  7988  0FD3  3000               	movlw	0
  7989  0FD4  00B9               	movwf	___flmul@prod+1
  7990  0FD5  3000               	movlw	0
  7991  0FD6  00B8               	movwf	___flmul@prod
  7992  0FD7                     i1l2796:
  7993  0FD7  01B1               	clrf	___flmul@sign
  7994  0FD8  2FF3               	goto	i1l758
  7995  0FD9                     i1l2798:
  7996  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  7997  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  7998  0FDB  083C               	movf	___flmul@temp,w
  7999  0FDC  00AC               	movwf	??___flmul
  8000  0FDD  082C               	movf	??___flmul,w
  8001  0FDE  00B7               	movwf	___flmul@bexp
  8002  0FDF  30FF               	movlw	255
  8003  0FE0  05B8               	andwf	___flmul@prod,f
  8004  0FE1  30FF               	movlw	255
  8005  0FE2  05B9               	andwf	___flmul@prod+1,f
  8006  0FE3  307F               	movlw	127
  8007  0FE4  05BA               	andwf	___flmul@prod+2,f
  8008  0FE5  3000               	movlw	0
  8009  0FE6  05BB               	andwf	___flmul@prod+3,f
  8010  0FE7                     i1l2800:
  8011  0FE7  1C37               	btfss	___flmul@bexp,0
  8012  0FE8  2FEA               	goto	u423_21
  8013  0FE9  2FEB               	goto	u423_20
  8014  0FEA                     u423_21:
  8015  0FEA  2FEC               	goto	i1l2804
  8016  0FEB                     u423_20:
  8017  0FEB                     i1l2802:
  8018  0FEB  17BA               	bsf	___flmul@prod+2,7
  8019  0FEC                     i1l2804:
  8020  0FEC  0837               	movf	___flmul@bexp,w
  8021  0FED  00AC               	movwf	??___flmul
  8022  0FEE  1003               	clrc
  8023  0FEF  0C2C               	rrf	??___flmul,w
  8024  0FF0  00AD               	movwf	??___flmul+1
  8025  0FF1  082D               	movf	??___flmul+1,w
  8026  0FF2  00BB               	movwf	___flmul@prod+3
  8027  0FF3                     i1l758:
  8028  0FF3  0831               	movf	___flmul@sign,w
  8029  0FF4  00AC               	movwf	??___flmul
  8030  0FF5  082C               	movf	??___flmul,w
  8031  0FF6  04BB               	iorwf	___flmul@prod+3,f
  8032  0FF7                     i1l2806:
  8033  0FF7  083B               	movf	___flmul@prod+3,w
  8034  0FF8  00A7               	movwf	?___flmul+3
  8035  0FF9  083A               	movf	___flmul@prod+2,w
  8036  0FFA  00A6               	movwf	?___flmul+2
  8037  0FFB  0839               	movf	___flmul@prod+1,w
  8038  0FFC  00A5               	movwf	?___flmul+1
  8039  0FFD  0838               	movf	___flmul@prod,w
  8040  0FFE  00A4               	movwf	?___flmul
  8041  0FFF                     i1l746:
  8042  0FFF  0008               	return
  8043  1000                     __end_of___flmul:
  8044                           
  8045                           	psect	text26
  8046  07C9                     __ptext26:	
  8047 ;; *************** function __Umul8_16 *****************
  8048 ;; Defined at:
  8049 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  multiplier      1    wreg     unsigned char 
  8052 ;;  multiplicand    1    0[COMMON] unsigned char 
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;  multiplier      1    8[COMMON] unsigned char 
  8055 ;;  word_mpld       2    6[COMMON] unsigned int 
  8056 ;;  product         2    4[COMMON] unsigned int 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  2    0[COMMON] unsigned int 
  8059 ;; Registers used:
  8060 ;;		wreg, status,2, status,0
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8066 ;;      Params:         2       0       0       0       0
  8067 ;;      Locals:         5       0       0       0       0
  8068 ;;      Temps:          2       0       0       0       0
  8069 ;;      Totals:         9       0       0       0       0
  8070 ;;Total ram usage:        9 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		___flmul
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           
  8080                           ;psect for function __Umul8_16
  8081  07C9                     __Umul8_16:
  8082                           
  8083                           ;incstack = 0
  8084                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8085                           ;__Umul8_16@multiplier stored from wreg
  8086  07C9  00F8               	movwf	__Umul8_16@multiplier
  8087  07CA                     i1l2330:
  8088  07CA  01F4               	clrf	__Umul8_16@product
  8089  07CB  01F5               	clrf	__Umul8_16@product+1
  8090  07CC                     i1l2332:
  8091  07CC  0870               	movf	__Umul8_16@multiplicand,w
  8092  07CD  00F2               	movwf	??__Umul8_16
  8093  07CE  01F3               	clrf	??__Umul8_16+1
  8094  07CF  0872               	movf	??__Umul8_16,w
  8095  07D0  00F6               	movwf	__Umul8_16@word_mpld
  8096  07D1  0873               	movf	??__Umul8_16+1,w
  8097  07D2  00F7               	movwf	__Umul8_16@word_mpld+1
  8098  07D3                     i1l2334:
  8099  07D3  1C78               	btfss	__Umul8_16@multiplier,0
  8100  07D4  2FD6               	goto	u306_21
  8101  07D5  2FD7               	goto	u306_20
  8102  07D6                     u306_21:
  8103  07D6  2FDD               	goto	i1l765
  8104  07D7                     u306_20:
  8105  07D7                     i1l2336:
  8106  07D7  0876               	movf	__Umul8_16@word_mpld,w
  8107  07D8  07F4               	addwf	__Umul8_16@product,f
  8108  07D9  1803               	skipnc
  8109  07DA  0AF5               	incf	__Umul8_16@product+1,f
  8110  07DB  0877               	movf	__Umul8_16@word_mpld+1,w
  8111  07DC  07F5               	addwf	__Umul8_16@product+1,f
  8112  07DD                     i1l765:
  8113  07DD  3001               	movlw	1
  8114  07DE                     u307_25:
  8115  07DE  1003               	clrc
  8116  07DF  0DF6               	rlf	__Umul8_16@word_mpld,f
  8117  07E0  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8118  07E1  3EFF               	addlw	-1
  8119  07E2  1D03               	skipz
  8120  07E3  2FDE               	goto	u307_25
  8121  07E4  1003               	clrc
  8122  07E5  0CF8               	rrf	__Umul8_16@multiplier,f
  8123  07E6                     i1l2338:
  8124  07E6  0878               	movf	__Umul8_16@multiplier,w
  8125  07E7  1D03               	btfss	3,2
  8126  07E8  2FEA               	goto	u308_21
  8127  07E9  2FEB               	goto	u308_20
  8128  07EA                     u308_21:
  8129  07EA  2FD3               	goto	i1l2334
  8130  07EB                     u308_20:
  8131  07EB                     i1l2340:
  8132  07EB  0875               	movf	__Umul8_16@product+1,w
  8133  07EC  00F1               	movwf	?__Umul8_16+1
  8134  07ED  0874               	movf	__Umul8_16@product,w
  8135  07EE  00F0               	movwf	?__Umul8_16
  8136  07EF                     i1l767:
  8137  07EF  0008               	return
  8138  07F0                     __end_of__Umul8_16:
  8139                           
  8140                           	psect	text27
  8141  10D3                     __ptext27:	
  8142 ;; *************** function __tdiv_to_l_ *****************
  8143 ;; Defined at:
  8144 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;  f1              4    0[COMMON] float 
  8147 ;;  f2              4    4[COMMON] float 
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;  quot            4    0[BANK0 ] unsigned long 
  8150 ;;  exp1            1    5[BANK0 ] unsigned char 
  8151 ;;  cntr            1    4[BANK0 ] unsigned char 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  4    0[COMMON] unsigned long 
  8154 ;; Registers used:
  8155 ;;		wreg, status,2, status,0
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8161 ;;      Params:         8       0       0       0       0
  8162 ;;      Locals:         0       6       0       0       0
  8163 ;;      Temps:          4       0       0       0       0
  8164 ;;      Totals:        12       6       0       0       0
  8165 ;;Total ram usage:       18 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; This function calls:
  8168 ;;		Nothing
  8169 ;; This function is called by:
  8170 ;;		_sprintf
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           
  8175                           ;psect for function __tdiv_to_l_
  8176  10D3                     __tdiv_to_l_:
  8177  10D3                     i1l2902:	
  8178                           ;incstack = 0
  8179                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  8180                           
  8181  10D3  0870               	movf	__tdiv_to_l_@f1,w
  8182  10D4  00F8               	movwf	??__tdiv_to_l_
  8183  10D5  0871               	movf	__tdiv_to_l_@f1+1,w
  8184  10D6  00F9               	movwf	??__tdiv_to_l_+1
  8185  10D7  0872               	movf	__tdiv_to_l_@f1+2,w
  8186  10D8  00FA               	movwf	??__tdiv_to_l_+2
  8187  10D9  1003               	clrc
  8188  10DA  0D79               	rlf	??__tdiv_to_l_+1,w
  8189  10DB  0D7A               	rlf	??__tdiv_to_l_+2,w
  8190  10DC  00FB               	movwf	??__tdiv_to_l_+3
  8191  10DD  087B               	movf	??__tdiv_to_l_+3,w
  8192  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  8193  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  8194  10E0  00A5               	movwf	__tdiv_to_l_@exp1
  8195  10E1  0825               	movf	__tdiv_to_l_@exp1,w
  8196  10E2  1D03               	btfss	3,2
  8197  10E3  28E5               	goto	u451_21
  8198  10E4  28E6               	goto	u451_20
  8199  10E5                     u451_21:
  8200  10E5  28EF               	goto	i1l2908
  8201  10E6                     u451_20:
  8202  10E6                     i1l2904:
  8203  10E6  3000               	movlw	0
  8204  10E7  00F3               	movwf	?__tdiv_to_l_+3
  8205  10E8  3000               	movlw	0
  8206  10E9  00F2               	movwf	?__tdiv_to_l_+2
  8207  10EA  3000               	movlw	0
  8208  10EB  00F1               	movwf	?__tdiv_to_l_+1
  8209  10EC  3000               	movlw	0
  8210  10ED  00F0               	movwf	?__tdiv_to_l_
  8211  10EE  298F               	goto	i1l540
  8212  10EF                     i1l2908:
  8213  10EF  0874               	movf	__tdiv_to_l_@f2,w
  8214  10F0  00F8               	movwf	??__tdiv_to_l_
  8215  10F1  0875               	movf	__tdiv_to_l_@f2+1,w
  8216  10F2  00F9               	movwf	??__tdiv_to_l_+1
  8217  10F3  0876               	movf	__tdiv_to_l_@f2+2,w
  8218  10F4  00FA               	movwf	??__tdiv_to_l_+2
  8219  10F5  1003               	clrc
  8220  10F6  0D79               	rlf	??__tdiv_to_l_+1,w
  8221  10F7  0D7A               	rlf	??__tdiv_to_l_+2,w
  8222  10F8  00FB               	movwf	??__tdiv_to_l_+3
  8223  10F9  087B               	movf	??__tdiv_to_l_+3,w
  8224  10FA  00A4               	movwf	__tdiv_to_l_@cntr
  8225  10FB  0824               	movf	__tdiv_to_l_@cntr,w
  8226  10FC  1D03               	btfss	3,2
  8227  10FD  28FF               	goto	u452_21
  8228  10FE  2900               	goto	u452_20
  8229  10FF                     u452_21:
  8230  10FF  2901               	goto	i1l541
  8231  1100                     u452_20:
  8232  1100  28E6               	goto	i1l2904
  8233  1101                     i1l541:
  8234  1101  17F1               	bsf	__tdiv_to_l_@f1+1,7
  8235  1102                     i1l2914:
  8236  1102  30FF               	movlw	255
  8237  1103  05F0               	andwf	__tdiv_to_l_@f1,f
  8238  1104  30FF               	movlw	255
  8239  1105  05F1               	andwf	__tdiv_to_l_@f1+1,f
  8240  1106  3000               	movlw	0
  8241  1107  05F2               	andwf	__tdiv_to_l_@f1+2,f
  8242  1108                     i1l2916:
  8243  1108  17F5               	bsf	__tdiv_to_l_@f2+1,7
  8244  1109  30FF               	movlw	255
  8245  110A  05F4               	andwf	__tdiv_to_l_@f2,f
  8246  110B  30FF               	movlw	255
  8247  110C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  8248  110D  3000               	movlw	0
  8249  110E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  8250  110F  3000               	movlw	0
  8251  1110  00A3               	movwf	__tdiv_to_l_@quot+3
  8252  1111  3000               	movlw	0
  8253  1112  00A2               	movwf	__tdiv_to_l_@quot+2
  8254  1113  3000               	movlw	0
  8255  1114  00A1               	movwf	__tdiv_to_l_@quot+1
  8256  1115  3000               	movlw	0
  8257  1116  00A0               	movwf	__tdiv_to_l_@quot
  8258  1117                     i1l2918:
  8259  1117  307F               	movlw	127
  8260  1118  02A5               	subwf	__tdiv_to_l_@exp1,f
  8261  1119                     i1l2920:
  8262  1119  3098               	movlw	152
  8263  111A  0724               	addwf	__tdiv_to_l_@cntr,w
  8264  111B  00F8               	movwf	??__tdiv_to_l_
  8265  111C  0878               	movf	??__tdiv_to_l_,w
  8266  111D  02A5               	subwf	__tdiv_to_l_@exp1,f
  8267  111E  3018               	movlw	24
  8268  111F  00F8               	movwf	??__tdiv_to_l_
  8269  1120  0878               	movf	??__tdiv_to_l_,w
  8270  1121  00A4               	movwf	__tdiv_to_l_@cntr
  8271  1122                     i1l2922:
  8272  1122  3001               	movlw	1
  8273  1123  00F8               	movwf	??__tdiv_to_l_
  8274  1124                     u453_25:
  8275  1124  1003               	clrc
  8276  1125  0DA0               	rlf	__tdiv_to_l_@quot,f
  8277  1126  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  8278  1127  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  8279  1128  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  8280  1129  0BF8               	decfsz	??__tdiv_to_l_,f
  8281  112A  2924               	goto	u453_25
  8282  112B                     i1l2924:
  8283  112B  0876               	movf	__tdiv_to_l_@f2+2,w
  8284  112C  0272               	subwf	__tdiv_to_l_@f1+2,w
  8285  112D  1D03               	skipz
  8286  112E  2935               	goto	u454_25
  8287  112F  0875               	movf	__tdiv_to_l_@f2+1,w
  8288  1130  0271               	subwf	__tdiv_to_l_@f1+1,w
  8289  1131  1D03               	skipz
  8290  1132  2935               	goto	u454_25
  8291  1133  0874               	movf	__tdiv_to_l_@f2,w
  8292  1134  0270               	subwf	__tdiv_to_l_@f1,w
  8293  1135                     u454_25:
  8294  1135  1C03               	skipc
  8295  1136  2938               	goto	u454_21
  8296  1137  2939               	goto	u454_20
  8297  1138                     u454_21:
  8298  1138  2944               	goto	i1l2930
  8299  1139                     u454_20:
  8300  1139                     i1l2926:
  8301  1139  0874               	movf	__tdiv_to_l_@f2,w
  8302  113A  02F0               	subwf	__tdiv_to_l_@f1,f
  8303  113B  0875               	movf	__tdiv_to_l_@f2+1,w
  8304  113C  1C03               	skipc
  8305  113D  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  8306  113E  02F1               	subwf	__tdiv_to_l_@f1+1,f
  8307  113F  0876               	movf	__tdiv_to_l_@f2+2,w
  8308  1140  1C03               	skipc
  8309  1141  0A76               	incf	__tdiv_to_l_@f2+2,w
  8310  1142  02F2               	subwf	__tdiv_to_l_@f1+2,f
  8311  1143                     i1l2928:
  8312  1143  1420               	bsf	__tdiv_to_l_@quot,0
  8313  1144                     i1l2930:
  8314  1144  3001               	movlw	1
  8315  1145                     u455_25:
  8316  1145  1003               	clrc
  8317  1146  0DF0               	rlf	__tdiv_to_l_@f1,f
  8318  1147  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  8319  1148  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  8320  1149  3EFF               	addlw	-1
  8321  114A  1D03               	skipz
  8322  114B  2945               	goto	u455_25
  8323  114C                     i1l2932:
  8324  114C  3001               	movlw	1
  8325  114D  02A4               	subwf	__tdiv_to_l_@cntr,f
  8326  114E  1D03               	btfss	3,2
  8327  114F  2951               	goto	u456_21
  8328  1150  2952               	goto	u456_20
  8329  1151                     u456_21:
  8330  1151  2922               	goto	i1l2922
  8331  1152                     u456_20:
  8332  1152                     i1l544:
  8333  1152  1FA5               	btfss	__tdiv_to_l_@exp1,7
  8334  1153  2955               	goto	u457_21
  8335  1154  2956               	goto	u457_20
  8336  1155                     u457_21:
  8337  1155  2970               	goto	i1l2942
  8338  1156                     u457_20:
  8339  1156                     i1l2934:
  8340  1156  0825               	movf	__tdiv_to_l_@exp1,w
  8341  1157  3A80               	xorlw	128
  8342  1158  3E97               	addlw	151
  8343  1159  1803               	skipnc
  8344  115A  295C               	goto	u458_21
  8345  115B  295D               	goto	u458_20
  8346  115C                     u458_21:
  8347  115C  295E               	goto	i1l2940
  8348  115D                     u458_20:
  8349  115D  28E6               	goto	i1l2904
  8350  115E                     i1l2940:
  8351  115E  3001               	movlw	1
  8352  115F                     u459_25:
  8353  115F  1003               	clrc
  8354  1160  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  8355  1161  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  8356  1162  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  8357  1163  0CA0               	rrf	__tdiv_to_l_@quot,f
  8358  1164  3EFF               	addlw	-1
  8359  1165  1D03               	skipz
  8360  1166  295F               	goto	u459_25
  8361  1167  3001               	movlw	1
  8362  1168  00F8               	movwf	??__tdiv_to_l_
  8363  1169  0878               	movf	??__tdiv_to_l_,w
  8364  116A  07A5               	addwf	__tdiv_to_l_@exp1,f
  8365  116B  1D03               	btfss	3,2
  8366  116C  296E               	goto	u460_21
  8367  116D  296F               	goto	u460_20
  8368  116E                     u460_21:
  8369  116E  295E               	goto	i1l2940
  8370  116F                     u460_20:
  8371  116F  2987               	goto	i1l2950
  8372  1170                     i1l2942:
  8373  1170  3018               	movlw	24
  8374  1171  0225               	subwf	__tdiv_to_l_@exp1,w
  8375  1172  1C03               	skipc
  8376  1173  2975               	goto	u461_21
  8377  1174  2976               	goto	u461_20
  8378  1175                     u461_21:
  8379  1175  2982               	goto	i1l551
  8380  1176                     u461_20:
  8381  1176  28E6               	goto	i1l2904
  8382  1177                     i1l2948:
  8383  1177  3001               	movlw	1
  8384  1178  00F8               	movwf	??__tdiv_to_l_
  8385  1179                     u462_25:
  8386  1179  1003               	clrc
  8387  117A  0DA0               	rlf	__tdiv_to_l_@quot,f
  8388  117B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  8389  117C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  8390  117D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  8391  117E  0BF8               	decfsz	??__tdiv_to_l_,f
  8392  117F  2979               	goto	u462_25
  8393  1180  3001               	movlw	1
  8394  1181  02A5               	subwf	__tdiv_to_l_@exp1,f
  8395  1182                     i1l551:
  8396  1182  0825               	movf	__tdiv_to_l_@exp1,w
  8397  1183  1D03               	btfss	3,2
  8398  1184  2986               	goto	u463_21
  8399  1185  2987               	goto	u463_20
  8400  1186                     u463_21:
  8401  1186  2977               	goto	i1l2948
  8402  1187                     u463_20:
  8403  1187                     i1l2950:
  8404  1187  0823               	movf	__tdiv_to_l_@quot+3,w
  8405  1188  00F3               	movwf	?__tdiv_to_l_+3
  8406  1189  0822               	movf	__tdiv_to_l_@quot+2,w
  8407  118A  00F2               	movwf	?__tdiv_to_l_+2
  8408  118B  0821               	movf	__tdiv_to_l_@quot+1,w
  8409  118C  00F1               	movwf	?__tdiv_to_l_+1
  8410  118D  0820               	movf	__tdiv_to_l_@quot,w
  8411  118E  00F0               	movwf	?__tdiv_to_l_
  8412  118F                     i1l540:
  8413  118F  0008               	return
  8414  1190                     __end_of__tdiv_to_l_:
  8415                           
  8416                           	psect	text28
  8417  0882                     __ptext28:	
  8418 ;; *************** function __div_to_l_ *****************
  8419 ;; Defined at:
  8420 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;  f1              4    0[COMMON] unsigned long 
  8423 ;;  f2              4    4[COMMON] unsigned long 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  quot            4    0[BANK0 ] unsigned long 
  8426 ;;  exp1            1    5[BANK0 ] unsigned char 
  8427 ;;  cntr            1    4[BANK0 ] unsigned char 
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  4    0[COMMON] unsigned long 
  8430 ;; Registers used:
  8431 ;;		wreg, status,2, status,0
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8437 ;;      Params:         8       0       0       0       0
  8438 ;;      Locals:         0       6       0       0       0
  8439 ;;      Temps:          1       0       0       0       0
  8440 ;;      Totals:         9       6       0       0       0
  8441 ;;Total ram usage:       15 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; This function calls:
  8444 ;;		Nothing
  8445 ;; This function is called by:
  8446 ;;		_sprintf
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           
  8451                           ;psect for function __div_to_l_
  8452  0882                     __div_to_l_:
  8453  0882                     i1l2954:	
  8454                           ;incstack = 0
  8455                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  8456                           
  8457  0882  1003               	clrc
  8458  0883  0D72               	rlf	__div_to_l_@f1+2,w
  8459  0884  0D73               	rlf	__div_to_l_@f1+3,w
  8460  0885  00F8               	movwf	??__div_to_l_
  8461  0886  0878               	movf	??__div_to_l_,w
  8462  0887  1283               	bcf	3,5	;RP0=0, select bank0
  8463  0888  1303               	bcf	3,6	;RP1=0, select bank0
  8464  0889  00A5               	movwf	__div_to_l_@exp1
  8465  088A  0825               	movf	__div_to_l_@exp1,w
  8466  088B  1D03               	btfss	3,2
  8467  088C  288E               	goto	u464_21
  8468  088D  288F               	goto	u464_20
  8469  088E                     u464_21:
  8470  088E  2898               	goto	i1l2960
  8471  088F                     u464_20:
  8472  088F                     i1l2956:
  8473  088F  3000               	movlw	0
  8474  0890  00F3               	movwf	?__div_to_l_+3
  8475  0891  3000               	movlw	0
  8476  0892  00F2               	movwf	?__div_to_l_+2
  8477  0893  3000               	movlw	0
  8478  0894  00F1               	movwf	?__div_to_l_+1
  8479  0895  3000               	movlw	0
  8480  0896  00F0               	movwf	?__div_to_l_
  8481  0897  293F               	goto	i1l493
  8482  0898                     i1l2960:
  8483  0898  1003               	clrc
  8484  0899  0D76               	rlf	__div_to_l_@f2+2,w
  8485  089A  0D77               	rlf	__div_to_l_@f2+3,w
  8486  089B  00F8               	movwf	??__div_to_l_
  8487  089C  0878               	movf	??__div_to_l_,w
  8488  089D  00A4               	movwf	__div_to_l_@cntr
  8489  089E  0824               	movf	__div_to_l_@cntr,w
  8490  089F  1D03               	btfss	3,2
  8491  08A0  28A2               	goto	u465_21
  8492  08A1  28A3               	goto	u465_20
  8493  08A2                     u465_21:
  8494  08A2  28A4               	goto	i1l494
  8495  08A3                     u465_20:
  8496  08A3  288F               	goto	i1l2956
  8497  08A4                     i1l494:
  8498  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  8499  08A5                     i1l2966:
  8500  08A5  30FF               	movlw	255
  8501  08A6  05F0               	andwf	__div_to_l_@f1,f
  8502  08A7  30FF               	movlw	255
  8503  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  8504  08A9  30FF               	movlw	255
  8505  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  8506  08AB  3000               	movlw	0
  8507  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  8508  08AD                     i1l2968:
  8509  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  8510  08AE  30FF               	movlw	255
  8511  08AF  05F4               	andwf	__div_to_l_@f2,f
  8512  08B0  30FF               	movlw	255
  8513  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  8514  08B2  30FF               	movlw	255
  8515  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  8516  08B4  3000               	movlw	0
  8517  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  8518  08B6  3000               	movlw	0
  8519  08B7  00A3               	movwf	__div_to_l_@quot+3
  8520  08B8  3000               	movlw	0
  8521  08B9  00A2               	movwf	__div_to_l_@quot+2
  8522  08BA  3000               	movlw	0
  8523  08BB  00A1               	movwf	__div_to_l_@quot+1
  8524  08BC  3000               	movlw	0
  8525  08BD  00A0               	movwf	__div_to_l_@quot
  8526  08BE                     i1l2970:
  8527  08BE  307F               	movlw	127
  8528  08BF  02A5               	subwf	__div_to_l_@exp1,f
  8529  08C0                     i1l2972:
  8530  08C0  30A0               	movlw	160
  8531  08C1  0724               	addwf	__div_to_l_@cntr,w
  8532  08C2  00F8               	movwf	??__div_to_l_
  8533  08C3  0878               	movf	??__div_to_l_,w
  8534  08C4  02A5               	subwf	__div_to_l_@exp1,f
  8535  08C5  3020               	movlw	32
  8536  08C6  00F8               	movwf	??__div_to_l_
  8537  08C7  0878               	movf	??__div_to_l_,w
  8538  08C8  00A4               	movwf	__div_to_l_@cntr
  8539  08C9                     i1l2974:
  8540  08C9  3001               	movlw	1
  8541  08CA  00F8               	movwf	??__div_to_l_
  8542  08CB                     u466_25:
  8543  08CB  1003               	clrc
  8544  08CC  0DA0               	rlf	__div_to_l_@quot,f
  8545  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  8546  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  8547  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  8548  08D0  0BF8               	decfsz	??__div_to_l_,f
  8549  08D1  28CB               	goto	u466_25
  8550  08D2                     i1l2976:
  8551  08D2  0877               	movf	__div_to_l_@f2+3,w
  8552  08D3  0273               	subwf	__div_to_l_@f1+3,w
  8553  08D4  1D03               	skipz
  8554  08D5  28E0               	goto	u467_25
  8555  08D6  0876               	movf	__div_to_l_@f2+2,w
  8556  08D7  0272               	subwf	__div_to_l_@f1+2,w
  8557  08D8  1D03               	skipz
  8558  08D9  28E0               	goto	u467_25
  8559  08DA  0875               	movf	__div_to_l_@f2+1,w
  8560  08DB  0271               	subwf	__div_to_l_@f1+1,w
  8561  08DC  1D03               	skipz
  8562  08DD  28E0               	goto	u467_25
  8563  08DE  0874               	movf	__div_to_l_@f2,w
  8564  08DF  0270               	subwf	__div_to_l_@f1,w
  8565  08E0                     u467_25:
  8566  08E0  1C03               	skipc
  8567  08E1  28E3               	goto	u467_21
  8568  08E2  28E4               	goto	u467_20
  8569  08E3                     u467_21:
  8570  08E3  28F3               	goto	i1l2982
  8571  08E4                     u467_20:
  8572  08E4                     i1l2978:
  8573  08E4  0874               	movf	__div_to_l_@f2,w
  8574  08E5  02F0               	subwf	__div_to_l_@f1,f
  8575  08E6  0875               	movf	__div_to_l_@f2+1,w
  8576  08E7  1C03               	skipc
  8577  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  8578  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  8579  08EA  0876               	movf	__div_to_l_@f2+2,w
  8580  08EB  1C03               	skipc
  8581  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  8582  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  8583  08EE  0877               	movf	__div_to_l_@f2+3,w
  8584  08EF  1C03               	skipc
  8585  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  8586  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  8587  08F2                     i1l2980:
  8588  08F2  1420               	bsf	__div_to_l_@quot,0
  8589  08F3                     i1l2982:
  8590  08F3  3001               	movlw	1
  8591  08F4  00F8               	movwf	??__div_to_l_
  8592  08F5                     u468_25:
  8593  08F5  1003               	clrc
  8594  08F6  0DF0               	rlf	__div_to_l_@f1,f
  8595  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  8596  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  8597  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  8598  08FA  0BF8               	decfsz	??__div_to_l_,f
  8599  08FB  28F5               	goto	u468_25
  8600  08FC                     i1l2984:
  8601  08FC  3001               	movlw	1
  8602  08FD  02A4               	subwf	__div_to_l_@cntr,f
  8603  08FE  1D03               	btfss	3,2
  8604  08FF  2901               	goto	u469_21
  8605  0900  2902               	goto	u469_20
  8606  0901                     u469_21:
  8607  0901  28C9               	goto	i1l2974
  8608  0902                     u469_20:
  8609  0902                     i1l497:
  8610  0902  1FA5               	btfss	__div_to_l_@exp1,7
  8611  0903  2905               	goto	u470_21
  8612  0904  2906               	goto	u470_20
  8613  0905                     u470_21:
  8614  0905  2920               	goto	i1l2994
  8615  0906                     u470_20:
  8616  0906                     i1l2986:
  8617  0906  0825               	movf	__div_to_l_@exp1,w
  8618  0907  3A80               	xorlw	128
  8619  0908  3E9F               	addlw	159
  8620  0909  1803               	skipnc
  8621  090A  290C               	goto	u471_21
  8622  090B  290D               	goto	u471_20
  8623  090C                     u471_21:
  8624  090C  290E               	goto	i1l2992
  8625  090D                     u471_20:
  8626  090D  288F               	goto	i1l2956
  8627  090E                     i1l2992:
  8628  090E  3001               	movlw	1
  8629  090F                     u472_25:
  8630  090F  1003               	clrc
  8631  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  8632  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  8633  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  8634  0913  0CA0               	rrf	__div_to_l_@quot,f
  8635  0914  3EFF               	addlw	-1
  8636  0915  1D03               	skipz
  8637  0916  290F               	goto	u472_25
  8638  0917  3001               	movlw	1
  8639  0918  00F8               	movwf	??__div_to_l_
  8640  0919  0878               	movf	??__div_to_l_,w
  8641  091A  07A5               	addwf	__div_to_l_@exp1,f
  8642  091B  1D03               	btfss	3,2
  8643  091C  291E               	goto	u473_21
  8644  091D  291F               	goto	u473_20
  8645  091E                     u473_21:
  8646  091E  290E               	goto	i1l2992
  8647  091F                     u473_20:
  8648  091F  2937               	goto	i1l3002
  8649  0920                     i1l2994:
  8650  0920  3020               	movlw	32
  8651  0921  0225               	subwf	__div_to_l_@exp1,w
  8652  0922  1C03               	skipc
  8653  0923  2925               	goto	u474_21
  8654  0924  2926               	goto	u474_20
  8655  0925                     u474_21:
  8656  0925  2932               	goto	i1l504
  8657  0926                     u474_20:
  8658  0926  288F               	goto	i1l2956
  8659  0927                     i1l3000:
  8660  0927  3001               	movlw	1
  8661  0928  00F8               	movwf	??__div_to_l_
  8662  0929                     u475_25:
  8663  0929  1003               	clrc
  8664  092A  0DA0               	rlf	__div_to_l_@quot,f
  8665  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  8666  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  8667  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  8668  092E  0BF8               	decfsz	??__div_to_l_,f
  8669  092F  2929               	goto	u475_25
  8670  0930  3001               	movlw	1
  8671  0931  02A5               	subwf	__div_to_l_@exp1,f
  8672  0932                     i1l504:
  8673  0932  0825               	movf	__div_to_l_@exp1,w
  8674  0933  1D03               	btfss	3,2
  8675  0934  2936               	goto	u476_21
  8676  0935  2937               	goto	u476_20
  8677  0936                     u476_21:
  8678  0936  2927               	goto	i1l3000
  8679  0937                     u476_20:
  8680  0937                     i1l3002:
  8681  0937  0823               	movf	__div_to_l_@quot+3,w
  8682  0938  00F3               	movwf	?__div_to_l_+3
  8683  0939  0822               	movf	__div_to_l_@quot+2,w
  8684  093A  00F2               	movwf	?__div_to_l_+2
  8685  093B  0821               	movf	__div_to_l_@quot+1,w
  8686  093C  00F1               	movwf	?__div_to_l_+1
  8687  093D  0820               	movf	__div_to_l_@quot,w
  8688  093E  00F0               	movwf	?__div_to_l_
  8689  093F                     i1l493:
  8690  093F  0008               	return
  8691  0940                     __end_of__div_to_l_:
  8692                           
  8693                           	psect	text29
  8694  1019                     __ptext29:	
  8695 ;; *************** function ___xxtofl *****************
  8696 ;; Defined at:
  8697 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  sign            1    wreg     unsigned char 
  8700 ;;  val             4    0[COMMON] long 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;  sign            1    8[COMMON] unsigned char 
  8703 ;;  arg             4   10[COMMON] unsigned long 
  8704 ;;  exp             1    9[COMMON] unsigned char 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  4    0[COMMON] unsigned char 
  8707 ;; Registers used:
  8708 ;;		wreg, status,2, status,0
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8714 ;;      Params:         4       0       0       0       0
  8715 ;;      Locals:         6       0       0       0       0
  8716 ;;      Temps:          4       0       0       0       0
  8717 ;;      Totals:        14       0       0       0       0
  8718 ;;Total ram usage:       14 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; This function calls:
  8721 ;;		Nothing
  8722 ;; This function is called by:
  8723 ;;		_ISR
  8724 ;;		_sprintf
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           
  8729                           ;psect for function ___xxtofl
  8730  1019                     ___xxtofl:
  8731                           
  8732                           ;incstack = 0
  8733                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8734                           ;___xxtofl@sign stored from wreg
  8735  1019  00F8               	movwf	___xxtofl@sign
  8736  101A                     i1l3146:
  8737  101A  0878               	movf	___xxtofl@sign,w
  8738  101B  1903               	btfsc	3,2
  8739  101C  281E               	goto	u515_21
  8740  101D  281F               	goto	u515_20
  8741  101E                     u515_21:
  8742  101E  2833               	goto	i1l3152
  8743  101F                     u515_20:
  8744  101F                     i1l3148:
  8745  101F  1FF3               	btfss	___xxtofl@val+3,7
  8746  1020  2822               	goto	u516_21
  8747  1021  2823               	goto	u516_20
  8748  1022                     u516_21:
  8749  1022  2833               	goto	i1l3152
  8750  1023                     u516_20:
  8751  1023                     i1l3150:
  8752  1023  0970               	comf	___xxtofl@val,w
  8753  1024  00FA               	movwf	___xxtofl@arg
  8754  1025  0971               	comf	___xxtofl@val+1,w
  8755  1026  00FB               	movwf	___xxtofl@arg+1
  8756  1027  0972               	comf	___xxtofl@val+2,w
  8757  1028  00FC               	movwf	___xxtofl@arg+2
  8758  1029  0973               	comf	___xxtofl@val+3,w
  8759  102A  00FD               	movwf	___xxtofl@arg+3
  8760  102B  0AFA               	incf	___xxtofl@arg,f
  8761  102C  1903               	skipnz
  8762  102D  0AFB               	incf	___xxtofl@arg+1,f
  8763  102E  1903               	skipnz
  8764  102F  0AFC               	incf	___xxtofl@arg+2,f
  8765  1030  1903               	skipnz
  8766  1031  0AFD               	incf	___xxtofl@arg+3,f
  8767  1032  283B               	goto	i1l790
  8768  1033                     i1l3152:
  8769  1033  0873               	movf	___xxtofl@val+3,w
  8770  1034  00FD               	movwf	___xxtofl@arg+3
  8771  1035  0872               	movf	___xxtofl@val+2,w
  8772  1036  00FC               	movwf	___xxtofl@arg+2
  8773  1037  0871               	movf	___xxtofl@val+1,w
  8774  1038  00FB               	movwf	___xxtofl@arg+1
  8775  1039  0870               	movf	___xxtofl@val,w
  8776  103A  00FA               	movwf	___xxtofl@arg
  8777  103B                     i1l790:
  8778  103B  0873               	movf	___xxtofl@val+3,w
  8779  103C  0472               	iorwf	___xxtofl@val+2,w
  8780  103D  0471               	iorwf	___xxtofl@val+1,w
  8781  103E  0470               	iorwf	___xxtofl@val,w
  8782  103F  1D03               	skipz
  8783  1040  2842               	goto	u517_21
  8784  1041  2843               	goto	u517_20
  8785  1042                     u517_21:
  8786  1042  284C               	goto	i1l3158
  8787  1043                     u517_20:
  8788  1043                     i1l3154:
  8789  1043  3000               	movlw	0
  8790  1044  00F3               	movwf	?___xxtofl+3
  8791  1045  3000               	movlw	0
  8792  1046  00F2               	movwf	?___xxtofl+2
  8793  1047  3000               	movlw	0
  8794  1048  00F1               	movwf	?___xxtofl+1
  8795  1049  3000               	movlw	0
  8796  104A  00F0               	movwf	?___xxtofl
  8797  104B  28D2               	goto	i1l792
  8798  104C                     i1l3158:
  8799  104C  3096               	movlw	150
  8800  104D  00F4               	movwf	??___xxtofl
  8801  104E  0874               	movf	??___xxtofl,w
  8802  104F  00F9               	movwf	___xxtofl@exp
  8803  1050  285E               	goto	i1l3162
  8804  1051                     i1l3160:
  8805  1051  3001               	movlw	1
  8806  1052  00F4               	movwf	??___xxtofl
  8807  1053  0874               	movf	??___xxtofl,w
  8808  1054  07F9               	addwf	___xxtofl@exp,f
  8809  1055  3001               	movlw	1
  8810  1056                     u518_25:
  8811  1056  1003               	clrc
  8812  1057  0CFD               	rrf	___xxtofl@arg+3,f
  8813  1058  0CFC               	rrf	___xxtofl@arg+2,f
  8814  1059  0CFB               	rrf	___xxtofl@arg+1,f
  8815  105A  0CFA               	rrf	___xxtofl@arg,f
  8816  105B  3EFF               	addlw	-1
  8817  105C  1D03               	skipz
  8818  105D  2856               	goto	u518_25
  8819  105E                     i1l3162:
  8820  105E  30FE               	movlw	254
  8821  105F  057D               	andwf	___xxtofl@arg+3,w
  8822  1060  1D03               	btfss	3,2
  8823  1061  2863               	goto	u519_21
  8824  1062  2864               	goto	u519_20
  8825  1063                     u519_21:
  8826  1063  2851               	goto	i1l3160
  8827  1064                     u519_20:
  8828  1064  2880               	goto	i1l796
  8829  1065                     i1l3164:
  8830  1065  3001               	movlw	1
  8831  1066  00F4               	movwf	??___xxtofl
  8832  1067  0874               	movf	??___xxtofl,w
  8833  1068  07F9               	addwf	___xxtofl@exp,f
  8834  1069                     i1l3166:
  8835  1069  3001               	movlw	1
  8836  106A  07FA               	addwf	___xxtofl@arg,f
  8837  106B  3000               	movlw	0
  8838  106C  1803               	skipnc
  8839  106D  3001               	movlw	1
  8840  106E  07FB               	addwf	___xxtofl@arg+1,f
  8841  106F  3000               	movlw	0
  8842  1070  1803               	skipnc
  8843  1071  3001               	movlw	1
  8844  1072  07FC               	addwf	___xxtofl@arg+2,f
  8845  1073  3000               	movlw	0
  8846  1074  1803               	skipnc
  8847  1075  3001               	movlw	1
  8848  1076  07FD               	addwf	___xxtofl@arg+3,f
  8849  1077                     i1l3168:
  8850  1077  3001               	movlw	1
  8851  1078                     u520_25:
  8852  1078  1003               	clrc
  8853  1079  0CFD               	rrf	___xxtofl@arg+3,f
  8854  107A  0CFC               	rrf	___xxtofl@arg+2,f
  8855  107B  0CFB               	rrf	___xxtofl@arg+1,f
  8856  107C  0CFA               	rrf	___xxtofl@arg,f
  8857  107D  3EFF               	addlw	-1
  8858  107E  1D03               	skipz
  8859  107F  2878               	goto	u520_25
  8860  1080                     i1l796:
  8861  1080  30FF               	movlw	255
  8862  1081  057D               	andwf	___xxtofl@arg+3,w
  8863  1082  1D03               	btfss	3,2
  8864  1083  2885               	goto	u521_21
  8865  1084  2886               	goto	u521_20
  8866  1085                     u521_21:
  8867  1085  2865               	goto	i1l3164
  8868  1086                     u521_20:
  8869  1086  2892               	goto	i1l3172
  8870  1087                     i1l3170:
  8871  1087  3001               	movlw	1
  8872  1088  02F9               	subwf	___xxtofl@exp,f
  8873  1089  3001               	movlw	1
  8874  108A  00F4               	movwf	??___xxtofl
  8875  108B                     u522_25:
  8876  108B  1003               	clrc
  8877  108C  0DFA               	rlf	___xxtofl@arg,f
  8878  108D  0DFB               	rlf	___xxtofl@arg+1,f
  8879  108E  0DFC               	rlf	___xxtofl@arg+2,f
  8880  108F  0DFD               	rlf	___xxtofl@arg+3,f
  8881  1090  0BF4               	decfsz	??___xxtofl,f
  8882  1091  288B               	goto	u522_25
  8883  1092                     i1l3172:
  8884  1092  1BFC               	btfsc	___xxtofl@arg+2,7
  8885  1093  2895               	goto	u523_21
  8886  1094  2896               	goto	u523_20
  8887  1095                     u523_21:
  8888  1095  289C               	goto	i1l803
  8889  1096                     u523_20:
  8890  1096                     i1l3174:
  8891  1096  3002               	movlw	2
  8892  1097  0279               	subwf	___xxtofl@exp,w
  8893  1098  1803               	skipnc
  8894  1099  289B               	goto	u524_21
  8895  109A  289C               	goto	u524_20
  8896  109B                     u524_21:
  8897  109B  2887               	goto	i1l3170
  8898  109C                     u524_20:
  8899  109C                     i1l803:
  8900  109C  1879               	btfsc	___xxtofl@exp,0
  8901  109D  289F               	goto	u525_21
  8902  109E  28A0               	goto	u525_20
  8903  109F                     u525_21:
  8904  109F  28A8               	goto	i1l804
  8905  10A0                     u525_20:
  8906  10A0                     i1l3176:
  8907  10A0  30FF               	movlw	255
  8908  10A1  05FA               	andwf	___xxtofl@arg,f
  8909  10A2  30FF               	movlw	255
  8910  10A3  05FB               	andwf	___xxtofl@arg+1,f
  8911  10A4  307F               	movlw	127
  8912  10A5  05FC               	andwf	___xxtofl@arg+2,f
  8913  10A6  30FF               	movlw	255
  8914  10A7  05FD               	andwf	___xxtofl@arg+3,f
  8915  10A8                     i1l804:
  8916  10A8  1003               	clrc
  8917  10A9  0CF9               	rrf	___xxtofl@exp,f
  8918  10AA                     i1l3178:
  8919  10AA  0879               	movf	___xxtofl@exp,w
  8920  10AB  00F4               	movwf	??___xxtofl
  8921  10AC  01F5               	clrf	??___xxtofl+1
  8922  10AD  01F6               	clrf	??___xxtofl+2
  8923  10AE  01F7               	clrf	??___xxtofl+3
  8924  10AF  3018               	movlw	24
  8925  10B0                     u526_25:
  8926  10B0  1003               	clrc
  8927  10B1  0DF4               	rlf	??___xxtofl,f
  8928  10B2  0DF5               	rlf	??___xxtofl+1,f
  8929  10B3  0DF6               	rlf	??___xxtofl+2,f
  8930  10B4  0DF7               	rlf	??___xxtofl+3,f
  8931  10B5                     u526_20:
  8932  10B5  3EFF               	addlw	-1
  8933  10B6  1D03               	skipz
  8934  10B7  28B0               	goto	u526_25
  8935  10B8  0874               	movf	??___xxtofl,w
  8936  10B9  04FA               	iorwf	___xxtofl@arg,f
  8937  10BA  0875               	movf	??___xxtofl+1,w
  8938  10BB  04FB               	iorwf	___xxtofl@arg+1,f
  8939  10BC  0876               	movf	??___xxtofl+2,w
  8940  10BD  04FC               	iorwf	___xxtofl@arg+2,f
  8941  10BE  0877               	movf	??___xxtofl+3,w
  8942  10BF  04FD               	iorwf	___xxtofl@arg+3,f
  8943  10C0                     i1l3180:
  8944  10C0  0878               	movf	___xxtofl@sign,w
  8945  10C1  1903               	btfsc	3,2
  8946  10C2  28C4               	goto	u527_21
  8947  10C3  28C5               	goto	u527_20
  8948  10C4                     u527_21:
  8949  10C4  28CA               	goto	i1l3186
  8950  10C5                     u527_20:
  8951  10C5                     i1l3182:
  8952  10C5  1FF3               	btfss	___xxtofl@val+3,7
  8953  10C6  28C8               	goto	u528_21
  8954  10C7  28C9               	goto	u528_20
  8955  10C8                     u528_21:
  8956  10C8  28CA               	goto	i1l3186
  8957  10C9                     u528_20:
  8958  10C9                     i1l3184:
  8959  10C9  17FD               	bsf	___xxtofl@arg+3,7
  8960  10CA                     i1l3186:
  8961  10CA  087D               	movf	___xxtofl@arg+3,w
  8962  10CB  00F3               	movwf	?___xxtofl+3
  8963  10CC  087C               	movf	___xxtofl@arg+2,w
  8964  10CD  00F2               	movwf	?___xxtofl+2
  8965  10CE  087B               	movf	___xxtofl@arg+1,w
  8966  10CF  00F1               	movwf	?___xxtofl+1
  8967  10D0  087A               	movf	___xxtofl@arg,w
  8968  10D1  00F0               	movwf	?___xxtofl
  8969  10D2                     i1l792:
  8970  10D2  0008               	return
  8971  10D3                     __end_of___xxtofl:
  8972                           
  8973                           	psect	text30
  8974  1B25                     __ptext30:	
  8975 ;; *************** function ___wmul *****************
  8976 ;; Defined at:
  8977 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;  multiplier      2    0[COMMON] unsigned int 
  8980 ;;  multiplicand    2    2[COMMON] unsigned int 
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;  product         2    4[COMMON] unsigned int 
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  2    0[COMMON] unsigned int 
  8985 ;; Registers used:
  8986 ;;		wreg, status,2, status,0
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8992 ;;      Params:         4       0       0       0       0
  8993 ;;      Locals:         2       0       0       0       0
  8994 ;;      Temps:          0       0       0       0       0
  8995 ;;      Totals:         6       0       0       0       0
  8996 ;;Total ram usage:        6 bytes
  8997 ;; Hardware stack levels used:    1
  8998 ;; This function calls:
  8999 ;;		Nothing
  9000 ;; This function is called by:
  9001 ;;		_sprintf
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           
  9006                           ;psect for function ___wmul
  9007  1B25                     ___wmul:
  9008  1B25                     i1l3006:	
  9009                           ;incstack = 0
  9010                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9011                           
  9012  1B25  01F4               	clrf	___wmul@product
  9013  1B26  01F5               	clrf	___wmul@product+1
  9014  1B27                     i1l3008:
  9015  1B27  1C70               	btfss	___wmul@multiplier,0
  9016  1B28  2B2A               	goto	u477_21
  9017  1B29  2B2B               	goto	u477_20
  9018  1B2A                     u477_21:
  9019  1B2A  2B31               	goto	i1l323
  9020  1B2B                     u477_20:
  9021  1B2B                     i1l3010:
  9022  1B2B  0872               	movf	___wmul@multiplicand,w
  9023  1B2C  07F4               	addwf	___wmul@product,f
  9024  1B2D  1803               	skipnc
  9025  1B2E  0AF5               	incf	___wmul@product+1,f
  9026  1B2F  0873               	movf	___wmul@multiplicand+1,w
  9027  1B30  07F5               	addwf	___wmul@product+1,f
  9028  1B31                     i1l323:
  9029  1B31  3001               	movlw	1
  9030  1B32                     u478_25:
  9031  1B32  1003               	clrc
  9032  1B33  0DF2               	rlf	___wmul@multiplicand,f
  9033  1B34  0DF3               	rlf	___wmul@multiplicand+1,f
  9034  1B35  3EFF               	addlw	-1
  9035  1B36  1D03               	skipz
  9036  1B37  2B32               	goto	u478_25
  9037  1B38                     i1l3012:
  9038  1B38  3001               	movlw	1
  9039  1B39                     u479_25:
  9040  1B39  1003               	clrc
  9041  1B3A  0CF1               	rrf	___wmul@multiplier+1,f
  9042  1B3B  0CF0               	rrf	___wmul@multiplier,f
  9043  1B3C  3EFF               	addlw	-1
  9044  1B3D  1D03               	skipz
  9045  1B3E  2B39               	goto	u479_25
  9046  1B3F                     i1l3014:
  9047  1B3F  0870               	movf	___wmul@multiplier,w
  9048  1B40  0471               	iorwf	___wmul@multiplier+1,w
  9049  1B41  1D03               	btfss	3,2
  9050  1B42  2B44               	goto	u480_21
  9051  1B43  2B45               	goto	u480_20
  9052  1B44                     u480_21:
  9053  1B44  2B27               	goto	i1l3008
  9054  1B45                     u480_20:
  9055  1B45                     i1l3016:
  9056  1B45  0875               	movf	___wmul@product+1,w
  9057  1B46  00F1               	movwf	?___wmul+1
  9058  1B47  0874               	movf	___wmul@product,w
  9059  1B48  00F0               	movwf	?___wmul
  9060  1B49                     i1l325:
  9061  1B49  0008               	return
  9062  1B4A                     __end_of___wmul:
  9063                           
  9064                           	psect	text31
  9065  1C7E                     __ptext31:	
  9066 ;; *************** function ___llmod *****************
  9067 ;; Defined at:
  9068 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  divisor         4    0[COMMON] unsigned long 
  9071 ;;  dividend        4    4[COMMON] unsigned long 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  counter         1    9[COMMON] unsigned char 
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  4    0[COMMON] unsigned long 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9083 ;;      Params:         8       0       0       0       0
  9084 ;;      Locals:         1       0       0       0       0
  9085 ;;      Temps:          1       0       0       0       0
  9086 ;;      Totals:        10       0       0       0       0
  9087 ;;Total ram usage:       10 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		_sprintf
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           
  9097                           ;psect for function ___llmod
  9098  1C7E                     ___llmod:
  9099  1C7E                     i1l3120:	
  9100                           ;incstack = 0
  9101                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  9102                           
  9103  1C7E  0873               	movf	___llmod@divisor+3,w
  9104  1C7F  0472               	iorwf	___llmod@divisor+2,w
  9105  1C80  0471               	iorwf	___llmod@divisor+1,w
  9106  1C81  0470               	iorwf	___llmod@divisor,w
  9107  1C82  1903               	skipnz
  9108  1C83  2C85               	goto	u509_21
  9109  1C84  2C86               	goto	u509_20
  9110  1C85                     u509_21:
  9111  1C85  2CC9               	goto	i1l3136
  9112  1C86                     u509_20:
  9113  1C86                     i1l3122:
  9114  1C86  01F9               	clrf	___llmod@counter
  9115  1C87  0AF9               	incf	___llmod@counter,f
  9116  1C88  2C96               	goto	i1l3126
  9117  1C89                     i1l3124:
  9118  1C89  3001               	movlw	1
  9119  1C8A  00F8               	movwf	??___llmod
  9120  1C8B                     u510_25:
  9121  1C8B  1003               	clrc
  9122  1C8C  0DF0               	rlf	___llmod@divisor,f
  9123  1C8D  0DF1               	rlf	___llmod@divisor+1,f
  9124  1C8E  0DF2               	rlf	___llmod@divisor+2,f
  9125  1C8F  0DF3               	rlf	___llmod@divisor+3,f
  9126  1C90  0BF8               	decfsz	??___llmod,f
  9127  1C91  2C8B               	goto	u510_25
  9128  1C92  3001               	movlw	1
  9129  1C93  00F8               	movwf	??___llmod
  9130  1C94  0878               	movf	??___llmod,w
  9131  1C95  07F9               	addwf	___llmod@counter,f
  9132  1C96                     i1l3126:
  9133  1C96  1FF3               	btfss	___llmod@divisor+3,7
  9134  1C97  2C99               	goto	u511_21
  9135  1C98  2C9A               	goto	u511_20
  9136  1C99                     u511_21:
  9137  1C99  2C89               	goto	i1l3124
  9138  1C9A                     u511_20:
  9139  1C9A                     i1l3128:
  9140  1C9A  0873               	movf	___llmod@divisor+3,w
  9141  1C9B  0277               	subwf	___llmod@dividend+3,w
  9142  1C9C  1D03               	skipz
  9143  1C9D  2CA8               	goto	u512_25
  9144  1C9E  0872               	movf	___llmod@divisor+2,w
  9145  1C9F  0276               	subwf	___llmod@dividend+2,w
  9146  1CA0  1D03               	skipz
  9147  1CA1  2CA8               	goto	u512_25
  9148  1CA2  0871               	movf	___llmod@divisor+1,w
  9149  1CA3  0275               	subwf	___llmod@dividend+1,w
  9150  1CA4  1D03               	skipz
  9151  1CA5  2CA8               	goto	u512_25
  9152  1CA6  0870               	movf	___llmod@divisor,w
  9153  1CA7  0274               	subwf	___llmod@dividend,w
  9154  1CA8                     u512_25:
  9155  1CA8  1C03               	skipc
  9156  1CA9  2CAB               	goto	u512_21
  9157  1CAA  2CAC               	goto	u512_20
  9158  1CAB                     u512_21:
  9159  1CAB  2CBA               	goto	i1l3132
  9160  1CAC                     u512_20:
  9161  1CAC                     i1l3130:
  9162  1CAC  0870               	movf	___llmod@divisor,w
  9163  1CAD  02F4               	subwf	___llmod@dividend,f
  9164  1CAE  0871               	movf	___llmod@divisor+1,w
  9165  1CAF  1C03               	skipc
  9166  1CB0  0F71               	incfsz	___llmod@divisor+1,w
  9167  1CB1  02F5               	subwf	___llmod@dividend+1,f
  9168  1CB2  0872               	movf	___llmod@divisor+2,w
  9169  1CB3  1C03               	skipc
  9170  1CB4  0F72               	incfsz	___llmod@divisor+2,w
  9171  1CB5  02F6               	subwf	___llmod@dividend+2,f
  9172  1CB6  0873               	movf	___llmod@divisor+3,w
  9173  1CB7  1C03               	skipc
  9174  1CB8  0F73               	incfsz	___llmod@divisor+3,w
  9175  1CB9  02F7               	subwf	___llmod@dividend+3,f
  9176  1CBA                     i1l3132:
  9177  1CBA  3001               	movlw	1
  9178  1CBB                     u513_25:
  9179  1CBB  1003               	clrc
  9180  1CBC  0CF3               	rrf	___llmod@divisor+3,f
  9181  1CBD  0CF2               	rrf	___llmod@divisor+2,f
  9182  1CBE  0CF1               	rrf	___llmod@divisor+1,f
  9183  1CBF  0CF0               	rrf	___llmod@divisor,f
  9184  1CC0  3EFF               	addlw	-1
  9185  1CC1  1D03               	skipz
  9186  1CC2  2CBB               	goto	u513_25
  9187  1CC3                     i1l3134:
  9188  1CC3  3001               	movlw	1
  9189  1CC4  02F9               	subwf	___llmod@counter,f
  9190  1CC5  1D03               	btfss	3,2
  9191  1CC6  2CC8               	goto	u514_21
  9192  1CC7  2CC9               	goto	u514_20
  9193  1CC8                     u514_21:
  9194  1CC8  2C9A               	goto	i1l3128
  9195  1CC9                     u514_20:
  9196  1CC9                     i1l3136:
  9197  1CC9  0877               	movf	___llmod@dividend+3,w
  9198  1CCA  00F3               	movwf	?___llmod+3
  9199  1CCB  0876               	movf	___llmod@dividend+2,w
  9200  1CCC  00F2               	movwf	?___llmod+2
  9201  1CCD  0875               	movf	___llmod@dividend+1,w
  9202  1CCE  00F1               	movwf	?___llmod+1
  9203  1CCF  0874               	movf	___llmod@dividend,w
  9204  1CD0  00F0               	movwf	?___llmod
  9205  1CD1                     i1l579:
  9206  1CD1  0008               	return
  9207  1CD2                     __end_of___llmod:
  9208                           
  9209                           	psect	text32
  9210  1D7F                     __ptext32:	
  9211 ;; *************** function ___lldiv *****************
  9212 ;; Defined at:
  9213 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  divisor         4    0[COMMON] unsigned long 
  9216 ;;  dividend        4    4[COMMON] unsigned long 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;  quotient        4    9[COMMON] unsigned long 
  9219 ;;  counter         1   13[COMMON] unsigned char 
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  4    0[COMMON] unsigned long 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9229 ;;      Params:         8       0       0       0       0
  9230 ;;      Locals:         5       0       0       0       0
  9231 ;;      Temps:          1       0       0       0       0
  9232 ;;      Totals:        14       0       0       0       0
  9233 ;;Total ram usage:       14 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_sprintf
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function ___lldiv
  9244  1D7F                     ___lldiv:
  9245  1D7F                     i1l3020:	
  9246                           ;incstack = 0
  9247                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9248                           
  9249  1D7F  3000               	movlw	0
  9250  1D80  00FC               	movwf	___lldiv@quotient+3
  9251  1D81  3000               	movlw	0
  9252  1D82  00FB               	movwf	___lldiv@quotient+2
  9253  1D83  3000               	movlw	0
  9254  1D84  00FA               	movwf	___lldiv@quotient+1
  9255  1D85  3000               	movlw	0
  9256  1D86  00F9               	movwf	___lldiv@quotient
  9257  1D87  0873               	movf	___lldiv@divisor+3,w
  9258  1D88  0472               	iorwf	___lldiv@divisor+2,w
  9259  1D89  0471               	iorwf	___lldiv@divisor+1,w
  9260  1D8A  0470               	iorwf	___lldiv@divisor,w
  9261  1D8B  1903               	skipnz
  9262  1D8C  2D8E               	goto	u481_21
  9263  1D8D  2D8F               	goto	u481_20
  9264  1D8E                     u481_21:
  9265  1D8E  2DDC               	goto	i1l3040
  9266  1D8F                     u481_20:
  9267  1D8F                     i1l3022:
  9268  1D8F  01FD               	clrf	___lldiv@counter
  9269  1D90  0AFD               	incf	___lldiv@counter,f
  9270  1D91  2D9F               	goto	i1l3026
  9271  1D92                     i1l3024:
  9272  1D92  3001               	movlw	1
  9273  1D93  00F8               	movwf	??___lldiv
  9274  1D94                     u482_25:
  9275  1D94  1003               	clrc
  9276  1D95  0DF0               	rlf	___lldiv@divisor,f
  9277  1D96  0DF1               	rlf	___lldiv@divisor+1,f
  9278  1D97  0DF2               	rlf	___lldiv@divisor+2,f
  9279  1D98  0DF3               	rlf	___lldiv@divisor+3,f
  9280  1D99  0BF8               	decfsz	??___lldiv,f
  9281  1D9A  2D94               	goto	u482_25
  9282  1D9B  3001               	movlw	1
  9283  1D9C  00F8               	movwf	??___lldiv
  9284  1D9D  0878               	movf	??___lldiv,w
  9285  1D9E  07FD               	addwf	___lldiv@counter,f
  9286  1D9F                     i1l3026:
  9287  1D9F  1FF3               	btfss	___lldiv@divisor+3,7
  9288  1DA0  2DA2               	goto	u483_21
  9289  1DA1  2DA3               	goto	u483_20
  9290  1DA2                     u483_21:
  9291  1DA2  2D92               	goto	i1l3024
  9292  1DA3                     u483_20:
  9293  1DA3                     i1l3028:
  9294  1DA3  3001               	movlw	1
  9295  1DA4  00F8               	movwf	??___lldiv
  9296  1DA5                     u484_25:
  9297  1DA5  1003               	clrc
  9298  1DA6  0DF9               	rlf	___lldiv@quotient,f
  9299  1DA7  0DFA               	rlf	___lldiv@quotient+1,f
  9300  1DA8  0DFB               	rlf	___lldiv@quotient+2,f
  9301  1DA9  0DFC               	rlf	___lldiv@quotient+3,f
  9302  1DAA  0BF8               	decfsz	??___lldiv,f
  9303  1DAB  2DA5               	goto	u484_25
  9304  1DAC                     i1l3030:
  9305  1DAC  0873               	movf	___lldiv@divisor+3,w
  9306  1DAD  0277               	subwf	___lldiv@dividend+3,w
  9307  1DAE  1D03               	skipz
  9308  1DAF  2DBA               	goto	u485_25
  9309  1DB0  0872               	movf	___lldiv@divisor+2,w
  9310  1DB1  0276               	subwf	___lldiv@dividend+2,w
  9311  1DB2  1D03               	skipz
  9312  1DB3  2DBA               	goto	u485_25
  9313  1DB4  0871               	movf	___lldiv@divisor+1,w
  9314  1DB5  0275               	subwf	___lldiv@dividend+1,w
  9315  1DB6  1D03               	skipz
  9316  1DB7  2DBA               	goto	u485_25
  9317  1DB8  0870               	movf	___lldiv@divisor,w
  9318  1DB9  0274               	subwf	___lldiv@dividend,w
  9319  1DBA                     u485_25:
  9320  1DBA  1C03               	skipc
  9321  1DBB  2DBD               	goto	u485_21
  9322  1DBC  2DBE               	goto	u485_20
  9323  1DBD                     u485_21:
  9324  1DBD  2DCD               	goto	i1l3036
  9325  1DBE                     u485_20:
  9326  1DBE                     i1l3032:
  9327  1DBE  0870               	movf	___lldiv@divisor,w
  9328  1DBF  02F4               	subwf	___lldiv@dividend,f
  9329  1DC0  0871               	movf	___lldiv@divisor+1,w
  9330  1DC1  1C03               	skipc
  9331  1DC2  0F71               	incfsz	___lldiv@divisor+1,w
  9332  1DC3  02F5               	subwf	___lldiv@dividend+1,f
  9333  1DC4  0872               	movf	___lldiv@divisor+2,w
  9334  1DC5  1C03               	skipc
  9335  1DC6  0F72               	incfsz	___lldiv@divisor+2,w
  9336  1DC7  02F6               	subwf	___lldiv@dividend+2,f
  9337  1DC8  0873               	movf	___lldiv@divisor+3,w
  9338  1DC9  1C03               	skipc
  9339  1DCA  0F73               	incfsz	___lldiv@divisor+3,w
  9340  1DCB  02F7               	subwf	___lldiv@dividend+3,f
  9341  1DCC                     i1l3034:
  9342  1DCC  1479               	bsf	___lldiv@quotient,0
  9343  1DCD                     i1l3036:
  9344  1DCD  3001               	movlw	1
  9345  1DCE                     u486_25:
  9346  1DCE  1003               	clrc
  9347  1DCF  0CF3               	rrf	___lldiv@divisor+3,f
  9348  1DD0  0CF2               	rrf	___lldiv@divisor+2,f
  9349  1DD1  0CF1               	rrf	___lldiv@divisor+1,f
  9350  1DD2  0CF0               	rrf	___lldiv@divisor,f
  9351  1DD3  3EFF               	addlw	-1
  9352  1DD4  1D03               	skipz
  9353  1DD5  2DCE               	goto	u486_25
  9354  1DD6                     i1l3038:
  9355  1DD6  3001               	movlw	1
  9356  1DD7  02FD               	subwf	___lldiv@counter,f
  9357  1DD8  1D03               	btfss	3,2
  9358  1DD9  2DDB               	goto	u487_21
  9359  1DDA  2DDC               	goto	u487_20
  9360  1DDB                     u487_21:
  9361  1DDB  2DA3               	goto	i1l3028
  9362  1DDC                     u487_20:
  9363  1DDC                     i1l3040:
  9364  1DDC  087C               	movf	___lldiv@quotient+3,w
  9365  1DDD  00F3               	movwf	?___lldiv+3
  9366  1DDE  087B               	movf	___lldiv@quotient+2,w
  9367  1DDF  00F2               	movwf	?___lldiv+2
  9368  1DE0  087A               	movf	___lldiv@quotient+1,w
  9369  1DE1  00F1               	movwf	?___lldiv+1
  9370  1DE2  0879               	movf	___lldiv@quotient,w
  9371  1DE3  00F0               	movwf	?___lldiv
  9372  1DE4                     i1l359:
  9373  1DE4  0008               	return
  9374  1DE5                     __end_of___lldiv:
  9375                           
  9376                           	psect	text33
  9377  0806                     __ptext33:	
  9378 ;; *************** function ___fltol *****************
  9379 ;; Defined at:
  9380 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;  f1              4   49[BANK0 ] unsigned long 
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;  exp1            1   59[BANK0 ] unsigned char 
  9385 ;;  sign1           1   58[BANK0 ] unsigned char 
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  4   49[BANK0 ] long 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2, status,0
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9395 ;;      Params:         0       4       0       0       0
  9396 ;;      Locals:         0       2       0       0       0
  9397 ;;      Temps:          0       5       0       0       0
  9398 ;;      Totals:         0      11       0       0       0
  9399 ;;Total ram usage:       11 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; This function calls:
  9402 ;;		Nothing
  9403 ;; This function is called by:
  9404 ;;		_sprintf
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           
  9409                           ;psect for function ___fltol
  9410  0806                     ___fltol:
  9411  0806                     i1l3084:	
  9412                           ;incstack = 0
  9413                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9414                           
  9415  0806  1003               	clrc
  9416  0807  1283               	bcf	3,5	;RP0=0, select bank0
  9417  0808  1303               	bcf	3,6	;RP1=0, select bank0
  9418  0809  0D53               	rlf	___fltol@f1+2,w
  9419  080A  0D54               	rlf	___fltol@f1+3,w
  9420  080B  00D5               	movwf	??___fltol
  9421  080C  0855               	movf	??___fltol,w
  9422  080D  00DB               	movwf	___fltol@exp1
  9423  080E  085B               	movf	___fltol@exp1,w
  9424  080F  1D03               	btfss	3,2
  9425  0810  2812               	goto	u499_21
  9426  0811  2813               	goto	u499_20
  9427  0812                     u499_21:
  9428  0812  281C               	goto	i1l3090
  9429  0813                     u499_20:
  9430  0813                     i1l3086:
  9431  0813  3000               	movlw	0
  9432  0814  00D4               	movwf	?___fltol+3
  9433  0815  3000               	movlw	0
  9434  0816  00D3               	movwf	?___fltol+2
  9435  0817  3000               	movlw	0
  9436  0818  00D2               	movwf	?___fltol+1
  9437  0819  3000               	movlw	0
  9438  081A  00D1               	movwf	?___fltol
  9439  081B  2881               	goto	i1l526
  9440  081C                     i1l3090:
  9441  081C  0851               	movf	___fltol@f1,w
  9442  081D  00D5               	movwf	??___fltol
  9443  081E  0852               	movf	___fltol@f1+1,w
  9444  081F  00D6               	movwf	??___fltol+1
  9445  0820  0853               	movf	___fltol@f1+2,w
  9446  0821  00D7               	movwf	??___fltol+2
  9447  0822  0854               	movf	___fltol@f1+3,w
  9448  0823  00D8               	movwf	??___fltol+3
  9449  0824  301F               	movlw	31
  9450  0825                     u500_25:
  9451  0825  1003               	clrc
  9452  0826  0CD8               	rrf	??___fltol+3,f
  9453  0827  0CD7               	rrf	??___fltol+2,f
  9454  0828  0CD6               	rrf	??___fltol+1,f
  9455  0829  0CD5               	rrf	??___fltol,f
  9456  082A                     u500_20:
  9457  082A  3EFF               	addlw	-1
  9458  082B  1D03               	skipz
  9459  082C  2825               	goto	u500_25
  9460  082D  0855               	movf	??___fltol,w
  9461  082E  00D9               	movwf	??___fltol+4
  9462  082F  0859               	movf	??___fltol+4,w
  9463  0830  00DA               	movwf	___fltol@sign1
  9464  0831                     i1l3092:
  9465  0831  17D3               	bsf	___fltol@f1+2,7
  9466  0832                     i1l3094:
  9467  0832  30FF               	movlw	255
  9468  0833  05D1               	andwf	___fltol@f1,f
  9469  0834  30FF               	movlw	255
  9470  0835  05D2               	andwf	___fltol@f1+1,f
  9471  0836  30FF               	movlw	255
  9472  0837  05D3               	andwf	___fltol@f1+2,f
  9473  0838  3000               	movlw	0
  9474  0839  05D4               	andwf	___fltol@f1+3,f
  9475  083A                     i1l3096:
  9476  083A  3096               	movlw	150
  9477  083B  02DB               	subwf	___fltol@exp1,f
  9478  083C                     i1l3098:
  9479  083C  1FDB               	btfss	___fltol@exp1,7
  9480  083D  283F               	goto	u501_21
  9481  083E  2840               	goto	u501_20
  9482  083F                     u501_21:
  9483  083F  285A               	goto	i1l3108
  9484  0840                     u501_20:
  9485  0840                     i1l3100:
  9486  0840  085B               	movf	___fltol@exp1,w
  9487  0841  3A80               	xorlw	128
  9488  0842  3E97               	addlw	151
  9489  0843  1803               	skipnc
  9490  0844  2846               	goto	u502_21
  9491  0845  2847               	goto	u502_20
  9492  0846                     u502_21:
  9493  0846  2848               	goto	i1l3106
  9494  0847                     u502_20:
  9495  0847  2813               	goto	i1l3086
  9496  0848                     i1l3106:
  9497  0848  3001               	movlw	1
  9498  0849                     u503_25:
  9499  0849  1003               	clrc
  9500  084A  0CD4               	rrf	___fltol@f1+3,f
  9501  084B  0CD3               	rrf	___fltol@f1+2,f
  9502  084C  0CD2               	rrf	___fltol@f1+1,f
  9503  084D  0CD1               	rrf	___fltol@f1,f
  9504  084E  3EFF               	addlw	-1
  9505  084F  1D03               	skipz
  9506  0850  2849               	goto	u503_25
  9507  0851  3001               	movlw	1
  9508  0852  00D5               	movwf	??___fltol
  9509  0853  0855               	movf	??___fltol,w
  9510  0854  07DB               	addwf	___fltol@exp1,f
  9511  0855  1D03               	btfss	3,2
  9512  0856  2858               	goto	u504_21
  9513  0857  2859               	goto	u504_20
  9514  0858                     u504_21:
  9515  0858  2848               	goto	i1l3106
  9516  0859                     u504_20:
  9517  0859  2871               	goto	i1l3116
  9518  085A                     i1l3108:
  9519  085A  3020               	movlw	32
  9520  085B  025B               	subwf	___fltol@exp1,w
  9521  085C  1C03               	skipc
  9522  085D  285F               	goto	u505_21
  9523  085E  2860               	goto	u505_20
  9524  085F                     u505_21:
  9525  085F  286C               	goto	i1l533
  9526  0860                     u505_20:
  9527  0860  2813               	goto	i1l3086
  9528  0861                     i1l3114:
  9529  0861  3001               	movlw	1
  9530  0862  00D5               	movwf	??___fltol
  9531  0863                     u506_25:
  9532  0863  1003               	clrc
  9533  0864  0DD1               	rlf	___fltol@f1,f
  9534  0865  0DD2               	rlf	___fltol@f1+1,f
  9535  0866  0DD3               	rlf	___fltol@f1+2,f
  9536  0867  0DD4               	rlf	___fltol@f1+3,f
  9537  0868  0BD5               	decfsz	??___fltol,f
  9538  0869  2863               	goto	u506_25
  9539  086A  3001               	movlw	1
  9540  086B  02DB               	subwf	___fltol@exp1,f
  9541  086C                     i1l533:
  9542  086C  085B               	movf	___fltol@exp1,w
  9543  086D  1D03               	btfss	3,2
  9544  086E  2870               	goto	u507_21
  9545  086F  2871               	goto	u507_20
  9546  0870                     u507_21:
  9547  0870  2861               	goto	i1l3114
  9548  0871                     u507_20:
  9549  0871                     i1l3116:
  9550  0871  085A               	movf	___fltol@sign1,w
  9551  0872  1903               	btfsc	3,2
  9552  0873  2875               	goto	u508_21
  9553  0874  2876               	goto	u508_20
  9554  0875                     u508_21:
  9555  0875  2881               	goto	i1l536
  9556  0876                     u508_20:
  9557  0876                     i1l3118:
  9558  0876  09D1               	comf	___fltol@f1,f
  9559  0877  09D2               	comf	___fltol@f1+1,f
  9560  0878  09D3               	comf	___fltol@f1+2,f
  9561  0879  09D4               	comf	___fltol@f1+3,f
  9562  087A  0AD1               	incf	___fltol@f1,f
  9563  087B  1903               	skipnz
  9564  087C  0AD2               	incf	___fltol@f1+1,f
  9565  087D  1903               	skipnz
  9566  087E  0AD3               	incf	___fltol@f1+2,f
  9567  087F  1903               	skipnz
  9568  0880  0AD4               	incf	___fltol@f1+3,f
  9569  0881                     i1l536:
  9570  0881                     i1l526:
  9571  0881  0008               	return
  9572  0882                     __end_of___fltol:
  9573                           
  9574                           	psect	text34
  9575  1ADD                     __ptext34:	
  9576 ;; *************** function ___flsub *****************
  9577 ;; Defined at:
  9578 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  a               4   70[BANK0 ] long 
  9581 ;;  b               4   74[BANK0 ] long 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  4   70[BANK0 ] long 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9593 ;;      Params:         0       8       0       0       0
  9594 ;;      Locals:         0       0       0       0       0
  9595 ;;      Temps:          0       0       0       0       0
  9596 ;;      Totals:         0       8       0       0       0
  9597 ;;Total ram usage:        8 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; Hardware stack levels required when called:    1
  9600 ;; This function calls:
  9601 ;;		___fladd
  9602 ;; This function is called by:
  9603 ;;		_sprintf
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           
  9608                           ;psect for function ___flsub
  9609  1ADD                     ___flsub:
  9610  1ADD                     i1l3140:	
  9611                           ;incstack = 0
  9612                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9613                           
  9614  1ADD  3080               	movlw	128
  9615  1ADE  1283               	bcf	3,5	;RP0=0, select bank0
  9616  1ADF  1303               	bcf	3,6	;RP1=0, select bank0
  9617  1AE0  06E9               	xorwf	___flsub@a+3,f
  9618  1AE1                     i1l3142:
  9619  1AE1  086D               	movf	___flsub@b+3,w
  9620  1AE2  00D5               	movwf	___fladd@b+3
  9621  1AE3  086C               	movf	___flsub@b+2,w
  9622  1AE4  00D4               	movwf	___fladd@b+2
  9623  1AE5  086B               	movf	___flsub@b+1,w
  9624  1AE6  00D3               	movwf	___fladd@b+1
  9625  1AE7  086A               	movf	___flsub@b,w
  9626  1AE8  00D2               	movwf	___fladd@b
  9627  1AE9  0869               	movf	___flsub@a+3,w
  9628  1AEA  00D9               	movwf	___fladd@a+3
  9629  1AEB  0868               	movf	___flsub@a+2,w
  9630  1AEC  00D8               	movwf	___fladd@a+2
  9631  1AED  0867               	movf	___flsub@a+1,w
  9632  1AEE  00D7               	movwf	___fladd@a+1
  9633  1AEF  0866               	movf	___flsub@a,w
  9634  1AF0  00D6               	movwf	___fladd@a
  9635  1AF1  160A  118A  2578  160A  158A  	fcall	___fladd
  9636  1AF6  1283               	bcf	3,5	;RP0=0, select bank0
  9637  1AF7  1303               	bcf	3,6	;RP1=0, select bank0
  9638  1AF8  0855               	movf	?___fladd+3,w
  9639  1AF9  00E9               	movwf	?___flsub+3
  9640  1AFA  0854               	movf	?___fladd+2,w
  9641  1AFB  00E8               	movwf	?___flsub+2
  9642  1AFC  0853               	movf	?___fladd+1,w
  9643  1AFD  00E7               	movwf	?___flsub+1
  9644  1AFE  0852               	movf	?___fladd,w
  9645  1AFF  00E6               	movwf	?___flsub
  9646  1B00                     i1l696:
  9647  1B00  0008               	return
  9648  1B01                     __end_of___flsub:
  9649                           
  9650                           	psect	text35
  9651  1578                     __ptext35:	
  9652 ;; *************** function ___fladd *****************
  9653 ;; Defined at:
  9654 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  b               4   50[BANK0 ] long 
  9657 ;;  a               4   54[BANK0 ] long 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;  grs             1   69[BANK0 ] unsigned char 
  9660 ;;  bexp            1   68[BANK0 ] unsigned char 
  9661 ;;  aexp            1   67[BANK0 ] unsigned char 
  9662 ;;  signs           1   66[BANK0 ] unsigned char 
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  4   50[BANK0 ] unsigned char 
  9665 ;; Registers used:
  9666 ;;		wreg, status,2, status,0, btemp+1
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9672 ;;      Params:         0       8       0       0       0
  9673 ;;      Locals:         0       4       0       0       0
  9674 ;;      Temps:          0       8       0       0       0
  9675 ;;      Totals:         0      20       0       0       0
  9676 ;;Total ram usage:       20 bytes
  9677 ;; Hardware stack levels used:    1
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_sprintf
  9682 ;;		___flsub
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           
  9687                           ;psect for function ___fladd
  9688  1578                     ___fladd:
  9689  1578                     i1l2476:	
  9690                           ;incstack = 0
  9691                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9692                           
  9693  1578  1283               	bcf	3,5	;RP0=0, select bank0
  9694  1579  1303               	bcf	3,6	;RP1=0, select bank0
  9695  157A  0855               	movf	___fladd@b+3,w
  9696  157B  3980               	andlw	128
  9697  157C  00DA               	movwf	??___fladd
  9698  157D  085A               	movf	??___fladd,w
  9699  157E  00E2               	movwf	___fladd@signs
  9700  157F                     i1l2478:
  9701  157F  0855               	movf	___fladd@b+3,w
  9702  1580  00DA               	movwf	??___fladd
  9703  1581  075A               	addwf	??___fladd,w
  9704  1582  00DB               	movwf	??___fladd+1
  9705  1583  085B               	movf	??___fladd+1,w
  9706  1584  00E4               	movwf	___fladd@bexp
  9707  1585                     i1l2480:
  9708  1585  1FD4               	btfss	___fladd@b+2,7
  9709  1586  2D88               	goto	u341_21
  9710  1587  2D89               	goto	u341_20
  9711  1588                     u341_21:
  9712  1588  2D8A               	goto	i1l2484
  9713  1589                     u341_20:
  9714  1589                     i1l2482:
  9715  1589  1464               	bsf	___fladd@bexp,0
  9716  158A                     i1l2484:
  9717  158A  0864               	movf	___fladd@bexp,w
  9718  158B  1903               	btfsc	3,2
  9719  158C  2D8E               	goto	u342_21
  9720  158D  2D8F               	goto	u342_20
  9721  158E                     u342_21:
  9722  158E  2D9F               	goto	i1l2494
  9723  158F                     u342_20:
  9724  158F                     i1l2486:
  9725  158F  0A64               	incf	___fladd@bexp,w
  9726  1590  1D03               	btfss	3,2
  9727  1591  2D93               	goto	u343_21
  9728  1592  2D94               	goto	u343_20
  9729  1593                     u343_21:
  9730  1593  2D9C               	goto	i1l2490
  9731  1594                     u343_20:
  9732  1594                     i1l2488:
  9733  1594  3000               	movlw	0
  9734  1595  00D5               	movwf	___fladd@b+3
  9735  1596  3000               	movlw	0
  9736  1597  00D4               	movwf	___fladd@b+2
  9737  1598  3000               	movlw	0
  9738  1599  00D3               	movwf	___fladd@b+1
  9739  159A  3000               	movlw	0
  9740  159B  00D2               	movwf	___fladd@b
  9741  159C                     i1l2490:
  9742  159C  17D4               	bsf	___fladd@b+2,7
  9743  159D                     i1l2492:
  9744  159D  01D5               	clrf	___fladd@b+3
  9745  159E  2DA7               	goto	i1l2496
  9746  159F                     i1l2494:
  9747  159F  3000               	movlw	0
  9748  15A0  00D5               	movwf	___fladd@b+3
  9749  15A1  3000               	movlw	0
  9750  15A2  00D4               	movwf	___fladd@b+2
  9751  15A3  3000               	movlw	0
  9752  15A4  00D3               	movwf	___fladd@b+1
  9753  15A5  3000               	movlw	0
  9754  15A6  00D2               	movwf	___fladd@b
  9755  15A7                     i1l2496:
  9756  15A7  0859               	movf	___fladd@a+3,w
  9757  15A8  3980               	andlw	128
  9758  15A9  00DA               	movwf	??___fladd
  9759  15AA  085A               	movf	??___fladd,w
  9760  15AB  00E3               	movwf	___fladd@aexp
  9761  15AC                     i1l2498:
  9762  15AC  0863               	movf	___fladd@aexp,w
  9763  15AD  0662               	xorwf	___fladd@signs,w
  9764  15AE  1903               	skipnz
  9765  15AF  2DB1               	goto	u344_21
  9766  15B0  2DB2               	goto	u344_20
  9767  15B1                     u344_21:
  9768  15B1  2DB3               	goto	i1l2502
  9769  15B2                     u344_20:
  9770  15B2                     i1l2500:
  9771  15B2  1762               	bsf	___fladd@signs,6
  9772  15B3                     i1l2502:
  9773  15B3  0859               	movf	___fladd@a+3,w
  9774  15B4  00DA               	movwf	??___fladd
  9775  15B5  075A               	addwf	??___fladd,w
  9776  15B6  00DB               	movwf	??___fladd+1
  9777  15B7  085B               	movf	??___fladd+1,w
  9778  15B8  00E3               	movwf	___fladd@aexp
  9779  15B9                     i1l2504:
  9780  15B9  1FD8               	btfss	___fladd@a+2,7
  9781  15BA  2DBC               	goto	u345_21
  9782  15BB  2DBD               	goto	u345_20
  9783  15BC                     u345_21:
  9784  15BC  2DBE               	goto	i1l2508
  9785  15BD                     u345_20:
  9786  15BD                     i1l2506:
  9787  15BD  1463               	bsf	___fladd@aexp,0
  9788  15BE                     i1l2508:
  9789  15BE  0863               	movf	___fladd@aexp,w
  9790  15BF  1903               	btfsc	3,2
  9791  15C0  2DC2               	goto	u346_21
  9792  15C1  2DC3               	goto	u346_20
  9793  15C2                     u346_21:
  9794  15C2  2DD3               	goto	i1l2518
  9795  15C3                     u346_20:
  9796  15C3                     i1l2510:
  9797  15C3  0A63               	incf	___fladd@aexp,w
  9798  15C4  1D03               	btfss	3,2
  9799  15C5  2DC7               	goto	u347_21
  9800  15C6  2DC8               	goto	u347_20
  9801  15C7                     u347_21:
  9802  15C7  2DD0               	goto	i1l2514
  9803  15C8                     u347_20:
  9804  15C8                     i1l2512:
  9805  15C8  3000               	movlw	0
  9806  15C9  00D9               	movwf	___fladd@a+3
  9807  15CA  3000               	movlw	0
  9808  15CB  00D8               	movwf	___fladd@a+2
  9809  15CC  3000               	movlw	0
  9810  15CD  00D7               	movwf	___fladd@a+1
  9811  15CE  3000               	movlw	0
  9812  15CF  00D6               	movwf	___fladd@a
  9813  15D0                     i1l2514:
  9814  15D0  17D8               	bsf	___fladd@a+2,7
  9815  15D1                     i1l2516:
  9816  15D1  01D9               	clrf	___fladd@a+3
  9817  15D2  2DDB               	goto	i1l650
  9818  15D3                     i1l2518:
  9819  15D3  3000               	movlw	0
  9820  15D4  00D9               	movwf	___fladd@a+3
  9821  15D5  3000               	movlw	0
  9822  15D6  00D8               	movwf	___fladd@a+2
  9823  15D7  3000               	movlw	0
  9824  15D8  00D7               	movwf	___fladd@a+1
  9825  15D9  3000               	movlw	0
  9826  15DA  00D6               	movwf	___fladd@a
  9827  15DB                     i1l650:
  9828  15DB  0864               	movf	___fladd@bexp,w
  9829  15DC  0263               	subwf	___fladd@aexp,w
  9830  15DD  1803               	skipnc
  9831  15DE  2DE0               	goto	u348_21
  9832  15DF  2DE1               	goto	u348_20
  9833  15E0                     u348_21:
  9834  15E0  2E25               	goto	i1l2554
  9835  15E1                     u348_20:
  9836  15E1                     i1l2520:
  9837  15E1  1F62               	btfss	___fladd@signs,6
  9838  15E2  2DE4               	goto	u349_21
  9839  15E3  2DE5               	goto	u349_20
  9840  15E4                     u349_21:
  9841  15E4  2DE9               	goto	i1l2524
  9842  15E5                     u349_20:
  9843  15E5                     i1l2522:
  9844  15E5  3080               	movlw	128
  9845  15E6  00DA               	movwf	??___fladd
  9846  15E7  085A               	movf	??___fladd,w
  9847  15E8  06E2               	xorwf	___fladd@signs,f
  9848  15E9                     i1l2524:
  9849  15E9  0864               	movf	___fladd@bexp,w
  9850  15EA  00DA               	movwf	??___fladd
  9851  15EB  085A               	movf	??___fladd,w
  9852  15EC  00E5               	movwf	___fladd@grs
  9853  15ED                     i1l2526:
  9854  15ED  0863               	movf	___fladd@aexp,w
  9855  15EE  00DA               	movwf	??___fladd
  9856  15EF  085A               	movf	??___fladd,w
  9857  15F0  00E4               	movwf	___fladd@bexp
  9858  15F1                     i1l2528:
  9859  15F1  0865               	movf	___fladd@grs,w
  9860  15F2  00DA               	movwf	??___fladd
  9861  15F3  085A               	movf	??___fladd,w
  9862  15F4  00E3               	movwf	___fladd@aexp
  9863  15F5                     i1l2530:
  9864  15F5  0852               	movf	___fladd@b,w
  9865  15F6  00DA               	movwf	??___fladd
  9866  15F7  085A               	movf	??___fladd,w
  9867  15F8  00E5               	movwf	___fladd@grs
  9868  15F9                     i1l2532:
  9869  15F9  0856               	movf	___fladd@a,w
  9870  15FA  00DA               	movwf	??___fladd
  9871  15FB  085A               	movf	??___fladd,w
  9872  15FC  00D2               	movwf	___fladd@b
  9873  15FD                     i1l2534:
  9874  15FD  0865               	movf	___fladd@grs,w
  9875  15FE  00DA               	movwf	??___fladd
  9876  15FF  085A               	movf	??___fladd,w
  9877  1600  00D6               	movwf	___fladd@a
  9878  1601                     i1l2536:
  9879  1601  0853               	movf	___fladd@b+1,w
  9880  1602  00DA               	movwf	??___fladd
  9881  1603  085A               	movf	??___fladd,w
  9882  1604  00E5               	movwf	___fladd@grs
  9883  1605                     i1l2538:
  9884  1605  0857               	movf	___fladd@a+1,w
  9885  1606  00DA               	movwf	??___fladd
  9886  1607  085A               	movf	??___fladd,w
  9887  1608  00D3               	movwf	___fladd@b+1
  9888  1609                     i1l2540:
  9889  1609  0865               	movf	___fladd@grs,w
  9890  160A  00DA               	movwf	??___fladd
  9891  160B  085A               	movf	??___fladd,w
  9892  160C  00D7               	movwf	___fladd@a+1
  9893  160D                     i1l2542:
  9894  160D  0854               	movf	___fladd@b+2,w
  9895  160E  00DA               	movwf	??___fladd
  9896  160F  085A               	movf	??___fladd,w
  9897  1610  00E5               	movwf	___fladd@grs
  9898  1611                     i1l2544:
  9899  1611  0858               	movf	___fladd@a+2,w
  9900  1612  00DA               	movwf	??___fladd
  9901  1613  085A               	movf	??___fladd,w
  9902  1614  00D4               	movwf	___fladd@b+2
  9903  1615                     i1l2546:
  9904  1615  0865               	movf	___fladd@grs,w
  9905  1616  00DA               	movwf	??___fladd
  9906  1617  085A               	movf	??___fladd,w
  9907  1618  00D8               	movwf	___fladd@a+2
  9908  1619                     i1l2548:
  9909  1619  0855               	movf	___fladd@b+3,w
  9910  161A  00DA               	movwf	??___fladd
  9911  161B  085A               	movf	??___fladd,w
  9912  161C  00E5               	movwf	___fladd@grs
  9913  161D                     i1l2550:
  9914  161D  0859               	movf	___fladd@a+3,w
  9915  161E  00DA               	movwf	??___fladd
  9916  161F  085A               	movf	??___fladd,w
  9917  1620  00D5               	movwf	___fladd@b+3
  9918  1621                     i1l2552:
  9919  1621  0865               	movf	___fladd@grs,w
  9920  1622  00DA               	movwf	??___fladd
  9921  1623  085A               	movf	??___fladd,w
  9922  1624  00D9               	movwf	___fladd@a+3
  9923  1625                     i1l2554:
  9924  1625  01E5               	clrf	___fladd@grs
  9925  1626                     i1l2556:
  9926  1626  0863               	movf	___fladd@aexp,w
  9927  1627  00DA               	movwf	??___fladd
  9928  1628  01DB               	clrf	??___fladd+1
  9929  1629  085B               	movf	??___fladd+1,w
  9930  162A  00DD               	movwf	??___fladd+3
  9931  162B  0864               	movf	___fladd@bexp,w
  9932  162C  025A               	subwf	??___fladd,w
  9933  162D  00DC               	movwf	??___fladd+2
  9934  162E  1C03               	skipc
  9935  162F  03DD               	decf	??___fladd+3,f
  9936  1630  085D               	movf	??___fladd+3,w
  9937  1631  3A80               	xorlw	128
  9938  1632  00FF               	movwf	btemp+1
  9939  1633  3080               	movlw	128
  9940  1634  027F               	subwf	btemp+1,w
  9941  1635  1D03               	skipz
  9942  1636  2E39               	goto	u350_25
  9943  1637  301A               	movlw	26
  9944  1638  025C               	subwf	??___fladd+2,w
  9945  1639                     u350_25:
  9946  1639  1C03               	skipc
  9947  163A  2E3C               	goto	u350_21
  9948  163B  2E3D               	goto	u350_20
  9949  163C                     u350_21:
  9950  163C  2E7A               	goto	i1l2572
  9951  163D                     u350_20:
  9952  163D                     i1l2558:
  9953  163D  1283               	bcf	3,5	;RP0=0, select bank0
  9954  163E  1303               	bcf	3,6	;RP1=0, select bank0
  9955  163F  0855               	movf	___fladd@b+3,w
  9956  1640  0454               	iorwf	___fladd@b+2,w
  9957  1641  0453               	iorwf	___fladd@b+1,w
  9958  1642  0452               	iorwf	___fladd@b,w
  9959  1643  1D03               	skipz
  9960  1644  2E46               	goto	u351_21
  9961  1645  2E48               	goto	u351_20
  9962  1646                     u351_21:
  9963  1646  3001               	movlw	1
  9964  1647  2E49               	goto	u352_20
  9965  1648                     u351_20:
  9966  1648  3000               	movlw	0
  9967  1649                     u352_20:
  9968  1649  00DA               	movwf	??___fladd
  9969  164A  085A               	movf	??___fladd,w
  9970  164B  00E5               	movwf	___fladd@grs
  9971  164C  3000               	movlw	0
  9972  164D  00D5               	movwf	___fladd@b+3
  9973  164E  3000               	movlw	0
  9974  164F  00D4               	movwf	___fladd@b+2
  9975  1650  3000               	movlw	0
  9976  1651  00D3               	movwf	___fladd@b+1
  9977  1652  3000               	movlw	0
  9978  1653  00D2               	movwf	___fladd@b
  9979  1654  0863               	movf	___fladd@aexp,w
  9980  1655  00DA               	movwf	??___fladd
  9981  1656  085A               	movf	??___fladd,w
  9982  1657  00E4               	movwf	___fladd@bexp
  9983  1658  2E82               	goto	i1l654
  9984  1659                     i1l656:
  9985  1659  1C65               	btfss	___fladd@grs,0
  9986  165A  2E5C               	goto	u353_21
  9987  165B  2E5D               	goto	u353_20
  9988  165C                     u353_21:
  9989  165C  2E66               	goto	i1l2562
  9990  165D                     u353_20:
  9991  165D                     i1l2560:
  9992  165D  0865               	movf	___fladd@grs,w
  9993  165E  00DA               	movwf	??___fladd
  9994  165F  1003               	clrc
  9995  1660  0C5A               	rrf	??___fladd,w
  9996  1661  3801               	iorlw	1
  9997  1662  00DB               	movwf	??___fladd+1
  9998  1663  085B               	movf	??___fladd+1,w
  9999  1664  00E5               	movwf	___fladd@grs
 10000  1665  2E68               	goto	i1l2564
 10001  1666                     i1l2562:
 10002  1666  1003               	clrc
 10003  1667  0CE5               	rrf	___fladd@grs,f
 10004  1668                     i1l2564:
 10005  1668  1C52               	btfss	___fladd@b,0
 10006  1669  2E6B               	goto	u354_21
 10007  166A  2E6C               	goto	u354_20
 10008  166B                     u354_21:
 10009  166B  2E6D               	goto	i1l2568
 10010  166C                     u354_20:
 10011  166C                     i1l2566:
 10012  166C  17E5               	bsf	___fladd@grs,7
 10013  166D                     i1l2568:
 10014  166D  3001               	movlw	1
 10015  166E  00DA               	movwf	??___fladd
 10016  166F                     u355_25:
 10017  166F  0D55               	rlf	___fladd@b+3,w
 10018  1670  0CD5               	rrf	___fladd@b+3,f
 10019  1671  0CD4               	rrf	___fladd@b+2,f
 10020  1672  0CD3               	rrf	___fladd@b+1,f
 10021  1673  0CD2               	rrf	___fladd@b,f
 10022  1674  0BDA               	decfsz	??___fladd& (0+127),f
 10023  1675  2E6F               	goto	u355_25
 10024  1676                     i1l2570:
 10025  1676  3001               	movlw	1
 10026  1677  00DA               	movwf	??___fladd
 10027  1678  085A               	movf	??___fladd,w
 10028  1679  07E4               	addwf	___fladd@bexp,f
 10029  167A                     i1l2572:
 10030  167A  1283               	bcf	3,5	;RP0=0, select bank0
 10031  167B  1303               	bcf	3,6	;RP1=0, select bank0
 10032  167C  0863               	movf	___fladd@aexp,w
 10033  167D  0264               	subwf	___fladd@bexp,w
 10034  167E  1C03               	skipc
 10035  167F  2E81               	goto	u356_21
 10036  1680  2E82               	goto	u356_20
 10037  1681                     u356_21:
 10038  1681  2E59               	goto	i1l656
 10039  1682                     u356_20:
 10040  1682                     i1l654:
 10041  1682  1B62               	btfsc	___fladd@signs,6
 10042  1683  2E85               	goto	u357_21
 10043  1684  2E86               	goto	u357_20
 10044  1685                     u357_21:
 10045  1685  2ED1               	goto	i1l2598
 10046  1686                     u357_20:
 10047  1686                     i1l2574:
 10048  1686  0864               	movf	___fladd@bexp,w
 10049  1687  1D03               	btfss	3,2
 10050  1688  2E8A               	goto	u358_21
 10051  1689  2E8B               	goto	u358_20
 10052  168A                     u358_21:
 10053  168A  2E94               	goto	i1l2580
 10054  168B                     u358_20:
 10055  168B                     i1l2576:
 10056  168B  3000               	movlw	0
 10057  168C  00D5               	movwf	?___fladd+3
 10058  168D  3000               	movlw	0
 10059  168E  00D4               	movwf	?___fladd+2
 10060  168F  3000               	movlw	0
 10061  1690  00D3               	movwf	?___fladd+1
 10062  1691  3000               	movlw	0
 10063  1692  00D2               	movwf	?___fladd
 10064  1693  2FFF               	goto	i1l663
 10065  1694                     i1l2580:
 10066  1694  0856               	movf	___fladd@a,w
 10067  1695  07D2               	addwf	___fladd@b,f
 10068  1696  0857               	movf	___fladd@a+1,w
 10069  1697  1103               	clrz
 10070  1698  1803               	skipnc
 10071  1699  3E01               	addlw	1
 10072  169A  1903               	skipnz
 10073  169B  2E9D               	goto	u359_21
 10074  169C  07D3               	addwf	___fladd@b+1,f
 10075  169D                     u359_21:
 10076  169D  0858               	movf	___fladd@a+2,w
 10077  169E  1103               	clrz
 10078  169F  1803               	skipnc
 10079  16A0  3E01               	addlw	1
 10080  16A1  1903               	skipnz
 10081  16A2  2EA4               	goto	u359_22
 10082  16A3  07D4               	addwf	___fladd@b+2,f
 10083  16A4                     u359_22:
 10084  16A4  0859               	movf	___fladd@a+3,w
 10085  16A5  1103               	clrz
 10086  16A6  1803               	skipnc
 10087  16A7  3E01               	addlw	1
 10088  16A8  1903               	skipnz
 10089  16A9  2EAB               	goto	u359_23
 10090  16AA  07D5               	addwf	___fladd@b+3,f
 10091  16AB                     u359_23:
 10092  16AB                     i1l2582:
 10093  16AB  1C55               	btfss	___fladd@b+3,0
 10094  16AC  2EAE               	goto	u360_21
 10095  16AD  2EAF               	goto	u360_20
 10096  16AE                     u360_21:
 10097  16AE  2F85               	goto	i1l2632
 10098  16AF                     u360_20:
 10099  16AF                     i1l2584:
 10100  16AF  1C65               	btfss	___fladd@grs,0
 10101  16B0  2EB2               	goto	u361_21
 10102  16B1  2EB3               	goto	u361_20
 10103  16B2                     u361_21:
 10104  16B2  2EBC               	goto	i1l2588
 10105  16B3                     u361_20:
 10106  16B3                     i1l2586:
 10107  16B3  0865               	movf	___fladd@grs,w
 10108  16B4  00DA               	movwf	??___fladd
 10109  16B5  1003               	clrc
 10110  16B6  0C5A               	rrf	??___fladd,w
 10111  16B7  3801               	iorlw	1
 10112  16B8  00DB               	movwf	??___fladd+1
 10113  16B9  085B               	movf	??___fladd+1,w
 10114  16BA  00E5               	movwf	___fladd@grs
 10115  16BB  2EBE               	goto	i1l2590
 10116  16BC                     i1l2588:
 10117  16BC  1003               	clrc
 10118  16BD  0CE5               	rrf	___fladd@grs,f
 10119  16BE                     i1l2590:
 10120  16BE  1C52               	btfss	___fladd@b,0
 10121  16BF  2EC1               	goto	u362_21
 10122  16C0  2EC2               	goto	u362_20
 10123  16C1                     u362_21:
 10124  16C1  2EC3               	goto	i1l2594
 10125  16C2                     u362_20:
 10126  16C2                     i1l2592:
 10127  16C2  17E5               	bsf	___fladd@grs,7
 10128  16C3                     i1l2594:
 10129  16C3  3001               	movlw	1
 10130  16C4  00DA               	movwf	??___fladd
 10131  16C5                     u363_25:
 10132  16C5  0D55               	rlf	___fladd@b+3,w
 10133  16C6  0CD5               	rrf	___fladd@b+3,f
 10134  16C7  0CD4               	rrf	___fladd@b+2,f
 10135  16C8  0CD3               	rrf	___fladd@b+1,f
 10136  16C9  0CD2               	rrf	___fladd@b,f
 10137  16CA  0BDA               	decfsz	??___fladd& (0+127),f
 10138  16CB  2EC5               	goto	u363_25
 10139  16CC                     i1l2596:
 10140  16CC  3001               	movlw	1
 10141  16CD  00DA               	movwf	??___fladd
 10142  16CE  085A               	movf	??___fladd,w
 10143  16CF  07E4               	addwf	___fladd@bexp,f
 10144  16D0  2F85               	goto	i1l2632
 10145  16D1                     i1l2598:
 10146  16D1  0855               	movf	___fladd@b+3,w
 10147  16D2  3A80               	xorlw	128
 10148  16D3  00FF               	movwf	btemp+1
 10149  16D4  0859               	movf	___fladd@a+3,w
 10150  16D5  3A80               	xorlw	128
 10151  16D6  027F               	subwf	btemp+1,w
 10152  16D7  1D03               	skipz
 10153  16D8  2EE3               	goto	u364_23
 10154  16D9  0858               	movf	___fladd@a+2,w
 10155  16DA  0254               	subwf	___fladd@b+2,w
 10156  16DB  1D03               	skipz
 10157  16DC  2EE3               	goto	u364_23
 10158  16DD  0857               	movf	___fladd@a+1,w
 10159  16DE  0253               	subwf	___fladd@b+1,w
 10160  16DF  1D03               	skipz
 10161  16E0  2EE3               	goto	u364_23
 10162  16E1  0856               	movf	___fladd@a,w
 10163  16E2  0252               	subwf	___fladd@b,w
 10164  16E3                     u364_23:
 10165  16E3  1803               	skipnc
 10166  16E4  2EE6               	goto	u364_21
 10167  16E5  2EE7               	goto	u364_20
 10168  16E6                     u364_21:
 10169  16E6  2F3F               	goto	i1l2608
 10170  16E7                     u364_20:
 10171  16E7                     i1l2600:
 10172  16E7  30FF               	movlw	255
 10173  16E8  00DA               	movwf	??___fladd
 10174  16E9  30FF               	movlw	255
 10175  16EA  00DB               	movwf	??___fladd+1
 10176  16EB  30FF               	movlw	255
 10177  16EC  00DC               	movwf	??___fladd+2
 10178  16ED  30FF               	movlw	255
 10179  16EE  00DD               	movwf	??___fladd+3
 10180  16EF  0856               	movf	___fladd@a,w
 10181  16F0  00DE               	movwf	??___fladd+4
 10182  16F1  0857               	movf	___fladd@a+1,w
 10183  16F2  00DF               	movwf	??___fladd+5
 10184  16F3  0858               	movf	___fladd@a+2,w
 10185  16F4  00E0               	movwf	??___fladd+6
 10186  16F5  0859               	movf	___fladd@a+3,w
 10187  16F6  00E1               	movwf	??___fladd+7
 10188  16F7  0852               	movf	___fladd@b,w
 10189  16F8  02DE               	subwf	??___fladd+4,f
 10190  16F9  0853               	movf	___fladd@b+1,w
 10191  16FA  1C03               	skipc
 10192  16FB  0F53               	incfsz	___fladd@b+1,w
 10193  16FC  2EFE               	goto	u365_21
 10194  16FD  2EFF               	goto	u365_22
 10195  16FE                     u365_21:
 10196  16FE  02DF               	subwf	??___fladd+5,f
 10197  16FF                     u365_22:
 10198  16FF  0854               	movf	___fladd@b+2,w
 10199  1700  1C03               	skipc
 10200  1701  0F54               	incfsz	___fladd@b+2,w
 10201  1702  2F04               	goto	u365_23
 10202  1703  2F05               	goto	u365_24
 10203  1704                     u365_23:
 10204  1704  02E0               	subwf	??___fladd+6,f
 10205  1705                     u365_24:
 10206  1705  0855               	movf	___fladd@b+3,w
 10207  1706  1C03               	skipc
 10208  1707  0F55               	incfsz	___fladd@b+3,w
 10209  1708  2F0A               	goto	u365_25
 10210  1709  2F0B               	goto	u365_26
 10211  170A                     u365_25:
 10212  170A  02E1               	subwf	??___fladd+7,f
 10213  170B                     u365_26:
 10214  170B  085E               	movf	??___fladd+4,w
 10215  170C  07DA               	addwf	??___fladd,f
 10216  170D  085F               	movf	??___fladd+5,w
 10217  170E  1803               	skipnc
 10218  170F  0F5F               	incfsz	??___fladd+5,w
 10219  1710  2F12               	goto	u366_20
 10220  1711  2F13               	goto	u366_21
 10221  1712                     u366_20:
 10222  1712  07DB               	addwf	??___fladd+1,f
 10223  1713                     u366_21:
 10224  1713  0860               	movf	??___fladd+6,w
 10225  1714  1803               	skipnc
 10226  1715  0F60               	incfsz	??___fladd+6,w
 10227  1716  2F18               	goto	u366_22
 10228  1717  2F19               	goto	u366_23
 10229  1718                     u366_22:
 10230  1718  07DC               	addwf	??___fladd+2,f
 10231  1719                     u366_23:
 10232  1719  0861               	movf	??___fladd+7,w
 10233  171A  1803               	skipnc
 10234  171B  0A61               	incf	??___fladd+7,w
 10235  171C  07DD               	addwf	??___fladd+3,f
 10236  171D  085D               	movf	??___fladd+3,w
 10237  171E  00D5               	movwf	___fladd@b+3
 10238  171F  085C               	movf	??___fladd+2,w
 10239  1720  00D4               	movwf	___fladd@b+2
 10240  1721  085B               	movf	??___fladd+1,w
 10241  1722  00D3               	movwf	___fladd@b+1
 10242  1723  085A               	movf	??___fladd,w
 10243  1724  00D2               	movwf	___fladd@b
 10244  1725                     i1l2602:
 10245  1725  3080               	movlw	128
 10246  1726  00DA               	movwf	??___fladd
 10247  1727  085A               	movf	??___fladd,w
 10248  1728  06E2               	xorwf	___fladd@signs,f
 10249  1729  09E5               	comf	___fladd@grs,f
 10250  172A  0AE5               	incf	___fladd@grs,f
 10251  172B                     i1l2604:
 10252  172B  0865               	movf	___fladd@grs,w
 10253  172C  1D03               	btfss	3,2
 10254  172D  2F2F               	goto	u367_21
 10255  172E  2F30               	goto	u367_20
 10256  172F                     u367_21:
 10257  172F  2F4D               	goto	i1l671
 10258  1730                     u367_20:
 10259  1730                     i1l2606:
 10260  1730  3001               	movlw	1
 10261  1731  07D2               	addwf	___fladd@b,f
 10262  1732  3000               	movlw	0
 10263  1733  1803               	skipnc
 10264  1734  3001               	movlw	1
 10265  1735  07D3               	addwf	___fladd@b+1,f
 10266  1736  3000               	movlw	0
 10267  1737  1803               	skipnc
 10268  1738  3001               	movlw	1
 10269  1739  07D4               	addwf	___fladd@b+2,f
 10270  173A  3000               	movlw	0
 10271  173B  1803               	skipnc
 10272  173C  3001               	movlw	1
 10273  173D  07D5               	addwf	___fladd@b+3,f
 10274  173E  2F4D               	goto	i1l671
 10275  173F                     i1l2608:
 10276  173F  0856               	movf	___fladd@a,w
 10277  1740  02D2               	subwf	___fladd@b,f
 10278  1741  0857               	movf	___fladd@a+1,w
 10279  1742  1C03               	skipc
 10280  1743  0F57               	incfsz	___fladd@a+1,w
 10281  1744  02D3               	subwf	___fladd@b+1,f
 10282  1745  0858               	movf	___fladd@a+2,w
 10283  1746  1C03               	skipc
 10284  1747  0F58               	incfsz	___fladd@a+2,w
 10285  1748  02D4               	subwf	___fladd@b+2,f
 10286  1749  0859               	movf	___fladd@a+3,w
 10287  174A  1C03               	skipc
 10288  174B  0F59               	incfsz	___fladd@a+3,w
 10289  174C  02D5               	subwf	___fladd@b+3,f
 10290  174D                     i1l671:
 10291  174D  0855               	movf	___fladd@b+3,w
 10292  174E  0454               	iorwf	___fladd@b+2,w
 10293  174F  0453               	iorwf	___fladd@b+1,w
 10294  1750  0452               	iorwf	___fladd@b,w
 10295  1751  1D03               	skipz
 10296  1752  2F54               	goto	u368_21
 10297  1753  2F55               	goto	u368_20
 10298  1754                     u368_21:
 10299  1754  2F81               	goto	i1l2630
 10300  1755                     u368_20:
 10301  1755                     i1l2610:
 10302  1755  0865               	movf	___fladd@grs,w
 10303  1756  1D03               	btfss	3,2
 10304  1757  2F59               	goto	u369_21
 10305  1758  2F5A               	goto	u369_20
 10306  1759                     u369_21:
 10307  1759  2F81               	goto	i1l2630
 10308  175A                     u369_20:
 10309  175A                     i1l2612:
 10310  175A  3000               	movlw	0
 10311  175B  00D5               	movwf	?___fladd+3
 10312  175C  3000               	movlw	0
 10313  175D  00D4               	movwf	?___fladd+2
 10314  175E  3000               	movlw	0
 10315  175F  00D3               	movwf	?___fladd+1
 10316  1760  3000               	movlw	0
 10317  1761  00D2               	movwf	?___fladd
 10318  1762  2FFF               	goto	i1l663
 10319  1763                     i1l2616:
 10320  1763  3001               	movlw	1
 10321  1764  00DA               	movwf	??___fladd
 10322  1765                     u370_25:
 10323  1765  1003               	clrc
 10324  1766  0DD2               	rlf	___fladd@b,f
 10325  1767  0DD3               	rlf	___fladd@b+1,f
 10326  1768  0DD4               	rlf	___fladd@b+2,f
 10327  1769  0DD5               	rlf	___fladd@b+3,f
 10328  176A  0BDA               	decfsz	??___fladd,f
 10329  176B  2F65               	goto	u370_25
 10330  176C                     i1l2618:
 10331  176C  1FE5               	btfss	___fladd@grs,7
 10332  176D  2F6F               	goto	u371_21
 10333  176E  2F70               	goto	u371_20
 10334  176F                     u371_21:
 10335  176F  2F71               	goto	i1l675
 10336  1770                     u371_20:
 10337  1770                     i1l2620:
 10338  1770  1452               	bsf	___fladd@b,0
 10339  1771                     i1l675:
 10340  1771  1C65               	btfss	___fladd@grs,0
 10341  1772  2F74               	goto	u372_21
 10342  1773  2F75               	goto	u372_20
 10343  1774                     u372_21:
 10344  1774  2F78               	goto	i1l2624
 10345  1775                     u372_20:
 10346  1775                     i1l2622:
 10347  1775  1403               	setc
 10348  1776  0DE5               	rlf	___fladd@grs,f
 10349  1777  2F7A               	goto	i1l2626
 10350  1778                     i1l2624:
 10351  1778  1003               	clrc
 10352  1779  0DE5               	rlf	___fladd@grs,f
 10353  177A                     i1l2626:
 10354  177A  0864               	movf	___fladd@bexp,w
 10355  177B  1903               	btfsc	3,2
 10356  177C  2F7E               	goto	u373_21
 10357  177D  2F7F               	goto	u373_20
 10358  177E                     u373_21:
 10359  177E  2F81               	goto	i1l2630
 10360  177F                     u373_20:
 10361  177F                     i1l2628:
 10362  177F  3001               	movlw	1
 10363  1780  02E4               	subwf	___fladd@bexp,f
 10364  1781                     i1l2630:
 10365  1781  1FD4               	btfss	___fladd@b+2,7
 10366  1782  2F84               	goto	u374_21
 10367  1783  2F85               	goto	u374_20
 10368  1784                     u374_21:
 10369  1784  2F63               	goto	i1l2616
 10370  1785                     u374_20:
 10371  1785                     i1l2632:
 10372  1785  01E3               	clrf	___fladd@aexp
 10373  1786                     i1l2634:
 10374  1786  1FE5               	btfss	___fladd@grs,7
 10375  1787  2F89               	goto	u375_21
 10376  1788  2F8A               	goto	u375_20
 10377  1789                     u375_21:
 10378  1789  2F98               	goto	i1l2642
 10379  178A                     u375_20:
 10380  178A                     i1l2636:
 10381  178A  0865               	movf	___fladd@grs,w
 10382  178B  397F               	andlw	127
 10383  178C  1903               	btfsc	3,2
 10384  178D  2F8F               	goto	u376_21
 10385  178E  2F90               	goto	u376_20
 10386  178F                     u376_21:
 10387  178F  2F93               	goto	i1l681
 10388  1790                     u376_20:
 10389  1790                     i1l2638:
 10390  1790  01E3               	clrf	___fladd@aexp
 10391  1791  0AE3               	incf	___fladd@aexp,f
 10392  1792  2F98               	goto	i1l2642
 10393  1793                     i1l681:
 10394  1793  1C52               	btfss	___fladd@b,0
 10395  1794  2F96               	goto	u377_21
 10396  1795  2F97               	goto	u377_20
 10397  1796                     u377_21:
 10398  1796  2F98               	goto	i1l2642
 10399  1797                     u377_20:
 10400  1797  2F90               	goto	i1l2638
 10401  1798                     i1l2642:
 10402  1798  0863               	movf	___fladd@aexp,w
 10403  1799  1903               	btfsc	3,2
 10404  179A  2F9C               	goto	u378_21
 10405  179B  2F9D               	goto	u378_20
 10406  179C                     u378_21:
 10407  179C  2FD1               	goto	i1l684
 10408  179D                     u378_20:
 10409  179D                     i1l2644:
 10410  179D  3001               	movlw	1
 10411  179E  07D2               	addwf	___fladd@b,f
 10412  179F  3000               	movlw	0
 10413  17A0  1803               	skipnc
 10414  17A1  3001               	movlw	1
 10415  17A2  07D3               	addwf	___fladd@b+1,f
 10416  17A3  3000               	movlw	0
 10417  17A4  1803               	skipnc
 10418  17A5  3001               	movlw	1
 10419  17A6  07D4               	addwf	___fladd@b+2,f
 10420  17A7  3000               	movlw	0
 10421  17A8  1803               	skipnc
 10422  17A9  3001               	movlw	1
 10423  17AA  07D5               	addwf	___fladd@b+3,f
 10424  17AB                     i1l2646:
 10425  17AB  1C55               	btfss	___fladd@b+3,0
 10426  17AC  2FAE               	goto	u379_21
 10427  17AD  2FAF               	goto	u379_20
 10428  17AE                     u379_21:
 10429  17AE  2FD1               	goto	i1l684
 10430  17AF                     u379_20:
 10431  17AF                     i1l2648:
 10432  17AF  0852               	movf	___fladd@b,w
 10433  17B0  00DA               	movwf	??___fladd
 10434  17B1  0853               	movf	___fladd@b+1,w
 10435  17B2  00DB               	movwf	??___fladd+1
 10436  17B3  0854               	movf	___fladd@b+2,w
 10437  17B4  00DC               	movwf	??___fladd+2
 10438  17B5  0855               	movf	___fladd@b+3,w
 10439  17B6  00DD               	movwf	??___fladd+3
 10440  17B7  3001               	movlw	1
 10441  17B8  00DE               	movwf	??___fladd+4
 10442  17B9                     u380_25:
 10443  17B9  0D5D               	rlf	??___fladd+3,w
 10444  17BA  0CDD               	rrf	??___fladd+3,f
 10445  17BB  0CDC               	rrf	??___fladd+2,f
 10446  17BC  0CDB               	rrf	??___fladd+1,f
 10447  17BD  0CDA               	rrf	??___fladd,f
 10448  17BE                     u380_20:
 10449  17BE  0BDE               	decfsz	??___fladd+4,f
 10450  17BF  2FB9               	goto	u380_25
 10451  17C0  085D               	movf	??___fladd+3,w
 10452  17C1  00D5               	movwf	___fladd@b+3
 10453  17C2  085C               	movf	??___fladd+2,w
 10454  17C3  00D4               	movwf	___fladd@b+2
 10455  17C4  085B               	movf	??___fladd+1,w
 10456  17C5  00D3               	movwf	___fladd@b+1
 10457  17C6  085A               	movf	??___fladd,w
 10458  17C7  00D2               	movwf	___fladd@b
 10459  17C8  0A64               	incf	___fladd@bexp,w
 10460  17C9  1903               	btfsc	3,2
 10461  17CA  2FCC               	goto	u381_21
 10462  17CB  2FCD               	goto	u381_20
 10463  17CC                     u381_21:
 10464  17CC  2FD1               	goto	i1l684
 10465  17CD                     u381_20:
 10466  17CD                     i1l2650:
 10467  17CD  3001               	movlw	1
 10468  17CE  00DA               	movwf	??___fladd
 10469  17CF  085A               	movf	??___fladd,w
 10470  17D0  07E4               	addwf	___fladd@bexp,f
 10471  17D1                     i1l684:
 10472  17D1  0A64               	incf	___fladd@bexp,w
 10473  17D2  1903               	btfsc	3,2
 10474  17D3  2FD5               	goto	u382_21
 10475  17D4  2FD6               	goto	u382_20
 10476  17D5                     u382_21:
 10477  17D5  2FDB               	goto	i1l2654
 10478  17D6                     u382_20:
 10479  17D6                     i1l2652:
 10480  17D6  0864               	movf	___fladd@bexp,w
 10481  17D7  1D03               	btfss	3,2
 10482  17D8  2FDA               	goto	u383_21
 10483  17D9  2FDB               	goto	u383_20
 10484  17DA                     u383_21:
 10485  17DA  2FE9               	goto	i1l2660
 10486  17DB                     u383_20:
 10487  17DB                     i1l2654:
 10488  17DB  3000               	movlw	0
 10489  17DC  00D5               	movwf	___fladd@b+3
 10490  17DD  3000               	movlw	0
 10491  17DE  00D4               	movwf	___fladd@b+2
 10492  17DF  3000               	movlw	0
 10493  17E0  00D3               	movwf	___fladd@b+1
 10494  17E1  3000               	movlw	0
 10495  17E2  00D2               	movwf	___fladd@b
 10496  17E3                     i1l2656:
 10497  17E3  0864               	movf	___fladd@bexp,w
 10498  17E4  1D03               	btfss	3,2
 10499  17E5  2FE7               	goto	u384_21
 10500  17E6  2FE8               	goto	u384_20
 10501  17E7                     u384_21:
 10502  17E7  2FE9               	goto	i1l2660
 10503  17E8                     u384_20:
 10504  17E8                     i1l2658:
 10505  17E8  01E2               	clrf	___fladd@signs
 10506  17E9                     i1l2660:
 10507  17E9  1C64               	btfss	___fladd@bexp,0
 10508  17EA  2FEC               	goto	u385_21
 10509  17EB  2FED               	goto	u385_20
 10510  17EC                     u385_21:
 10511  17EC  2FEF               	goto	i1l2664
 10512  17ED                     u385_20:
 10513  17ED                     i1l2662:
 10514  17ED  17D4               	bsf	___fladd@b+2,7
 10515  17EE  2FF3               	goto	i1l692
 10516  17EF                     i1l2664:
 10517  17EF  307F               	movlw	127
 10518  17F0  00DA               	movwf	??___fladd
 10519  17F1  085A               	movf	??___fladd,w
 10520  17F2  05D4               	andwf	___fladd@b+2,f
 10521  17F3                     i1l692:
 10522  17F3  0864               	movf	___fladd@bexp,w
 10523  17F4  00DA               	movwf	??___fladd
 10524  17F5  1003               	clrc
 10525  17F6  0C5A               	rrf	??___fladd,w
 10526  17F7  00DB               	movwf	??___fladd+1
 10527  17F8  085B               	movf	??___fladd+1,w
 10528  17F9  00D5               	movwf	___fladd@b+3
 10529  17FA                     i1l2666:
 10530  17FA  1FE2               	btfss	___fladd@signs,7
 10531  17FB  2FFD               	goto	u386_21
 10532  17FC  2FFE               	goto	u386_20
 10533  17FD                     u386_21:
 10534  17FD  2FFF               	goto	i1l693
 10535  17FE                     u386_20:
 10536  17FE                     i1l2668:
 10537  17FE  17D5               	bsf	___fladd@b+3,7
 10538  17FF                     i1l693:
 10539  17FF                     i1l663:
 10540  17FF  0008               	return
 10541  1800                     __end_of___fladd:
 10542                           
 10543                           	psect	text36
 10544  1A20                     __ptext36:	
 10545 ;; *************** function ___flneg *****************
 10546 ;; Defined at:
 10547 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;  f1              4    0[COMMON] unsigned char 
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  4    0[COMMON] unsigned char 
 10554 ;; Registers used:
 10555 ;;		wreg
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10561 ;;      Params:         4       0       0       0       0
 10562 ;;      Locals:         0       0       0       0       0
 10563 ;;      Temps:          0       0       0       0       0
 10564 ;;      Totals:         4       0       0       0       0
 10565 ;;Total ram usage:        4 bytes
 10566 ;; Hardware stack levels used:    1
 10567 ;; This function calls:
 10568 ;;		Nothing
 10569 ;; This function is called by:
 10570 ;;		_sprintf
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           
 10575                           ;psect for function ___flneg
 10576  1A20                     ___flneg:
 10577  1A20                     i1l3076:	
 10578                           ;incstack = 0
 10579                           ; Regs used in ___flneg: [wreg]
 10580                           
 10581  1A20  0873               	movf	___flneg@f1+3,w
 10582  1A21  0472               	iorwf	___flneg@f1+2,w
 10583  1A22  0471               	iorwf	___flneg@f1+1,w
 10584  1A23  0470               	iorwf	___flneg@f1,w
 10585  1A24  1903               	skipnz
 10586  1A25  2A27               	goto	u498_21
 10587  1A26  2A28               	goto	u498_20
 10588  1A27                     u498_21:
 10589  1A27  2A2A               	goto	i1l3080
 10590  1A28                     u498_20:
 10591  1A28                     i1l3078:
 10592  1A28  3080               	movlw	128
 10593  1A29  06F3               	xorwf	___flneg@f1+3,f
 10594  1A2A                     i1l3080:
 10595  1A2A                     i1l522:
 10596  1A2A  0008               	return
 10597  1A2B                     __end_of___flneg:
 10598                           
 10599                           	psect	text37
 10600  1EB8                     __ptext37:	
 10601 ;; *************** function ___flge *****************
 10602 ;; Defined at:
 10603 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;  ff1             4    0[COMMON] unsigned char 
 10606 ;;  ff2             4    4[COMMON] unsigned char 
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;		None
 10609 ;; Return value:  Size  Location     Type
 10610 ;;		None               void
 10611 ;; Registers used:
 10612 ;;		wreg, status,2, status,0
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10618 ;;      Params:         8       0       0       0       0
 10619 ;;      Locals:         0       0       0       0       0
 10620 ;;      Temps:          4       0       0       0       0
 10621 ;;      Totals:        12       0       0       0       0
 10622 ;;Total ram usage:       12 bytes
 10623 ;; Hardware stack levels used:    1
 10624 ;; This function calls:
 10625 ;;		Nothing
 10626 ;; This function is called by:
 10627 ;;		_sprintf
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           
 10632                           ;psect for function ___flge
 10633  1EB8                     ___flge:
 10634  1EB8                     i1l3056:	
 10635                           ;incstack = 0
 10636                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10637                           
 10638  1EB8  3000               	movlw	0
 10639  1EB9  0570               	andwf	___flge@ff1,w
 10640  1EBA  00F8               	movwf	??___flge
 10641  1EBB  3000               	movlw	0
 10642  1EBC  0571               	andwf	___flge@ff1+1,w
 10643  1EBD  00F9               	movwf	??___flge+1
 10644  1EBE  3080               	movlw	128
 10645  1EBF  0572               	andwf	___flge@ff1+2,w
 10646  1EC0  00FA               	movwf	??___flge+2
 10647  1EC1  307F               	movlw	127
 10648  1EC2  0573               	andwf	___flge@ff1+3,w
 10649  1EC3  00FB               	movwf	??___flge+3
 10650  1EC4  087B               	movf	??___flge+3,w
 10651  1EC5  047A               	iorwf	??___flge+2,w
 10652  1EC6  0479               	iorwf	??___flge+1,w
 10653  1EC7  0478               	iorwf	??___flge,w
 10654  1EC8  1D03               	skipz
 10655  1EC9  2ECB               	goto	u491_21
 10656  1ECA  2ECC               	goto	u491_20
 10657  1ECB                     u491_21:
 10658  1ECB  2ED4               	goto	i1l514
 10659  1ECC                     u491_20:
 10660  1ECC                     i1l3058:
 10661  1ECC  3000               	movlw	0
 10662  1ECD  00F3               	movwf	___flge@ff1+3
 10663  1ECE  3000               	movlw	0
 10664  1ECF  00F2               	movwf	___flge@ff1+2
 10665  1ED0  3000               	movlw	0
 10666  1ED1  00F1               	movwf	___flge@ff1+1
 10667  1ED2  3000               	movlw	0
 10668  1ED3  00F0               	movwf	___flge@ff1
 10669  1ED4                     i1l514:
 10670  1ED4  3000               	movlw	0
 10671  1ED5  0574               	andwf	___flge@ff2,w
 10672  1ED6  00F8               	movwf	??___flge
 10673  1ED7  3000               	movlw	0
 10674  1ED8  0575               	andwf	___flge@ff2+1,w
 10675  1ED9  00F9               	movwf	??___flge+1
 10676  1EDA  3080               	movlw	128
 10677  1EDB  0576               	andwf	___flge@ff2+2,w
 10678  1EDC  00FA               	movwf	??___flge+2
 10679  1EDD  307F               	movlw	127
 10680  1EDE  0577               	andwf	___flge@ff2+3,w
 10681  1EDF  00FB               	movwf	??___flge+3
 10682  1EE0  087B               	movf	??___flge+3,w
 10683  1EE1  047A               	iorwf	??___flge+2,w
 10684  1EE2  0479               	iorwf	??___flge+1,w
 10685  1EE3  0478               	iorwf	??___flge,w
 10686  1EE4  1D03               	skipz
 10687  1EE5  2EE7               	goto	u492_21
 10688  1EE6  2EE8               	goto	u492_20
 10689  1EE7                     u492_21:
 10690  1EE7  2EF0               	goto	i1l3062
 10691  1EE8                     u492_20:
 10692  1EE8                     i1l3060:
 10693  1EE8  3000               	movlw	0
 10694  1EE9  00F7               	movwf	___flge@ff2+3
 10695  1EEA  3000               	movlw	0
 10696  1EEB  00F6               	movwf	___flge@ff2+2
 10697  1EEC  3000               	movlw	0
 10698  1EED  00F5               	movwf	___flge@ff2+1
 10699  1EEE  3000               	movlw	0
 10700  1EEF  00F4               	movwf	___flge@ff2
 10701  1EF0                     i1l3062:
 10702  1EF0  1FF3               	btfss	___flge@ff1+3,7
 10703  1EF1  2EF3               	goto	u493_21
 10704  1EF2  2EF4               	goto	u493_20
 10705  1EF3                     u493_21:
 10706  1EF3  2F18               	goto	i1l3066
 10707  1EF4                     u493_20:
 10708  1EF4                     i1l3064:
 10709  1EF4  3000               	movlw	0
 10710  1EF5  00F8               	movwf	??___flge
 10711  1EF6  3000               	movlw	0
 10712  1EF7  00F9               	movwf	??___flge+1
 10713  1EF8  3000               	movlw	0
 10714  1EF9  00FA               	movwf	??___flge+2
 10715  1EFA  3080               	movlw	128
 10716  1EFB  00FB               	movwf	??___flge+3
 10717  1EFC  0870               	movf	___flge@ff1,w
 10718  1EFD  02F8               	subwf	??___flge,f
 10719  1EFE  0871               	movf	___flge@ff1+1,w
 10720  1EFF  1C03               	skipc
 10721  1F00  0F71               	incfsz	___flge@ff1+1,w
 10722  1F01  2F03               	goto	u494_21
 10723  1F02  2F04               	goto	u494_22
 10724  1F03                     u494_21:
 10725  1F03  02F9               	subwf	??___flge+1,f
 10726  1F04                     u494_22:
 10727  1F04  0872               	movf	___flge@ff1+2,w
 10728  1F05  1C03               	skipc
 10729  1F06  0F72               	incfsz	___flge@ff1+2,w
 10730  1F07  2F09               	goto	u494_23
 10731  1F08  2F0A               	goto	u494_24
 10732  1F09                     u494_23:
 10733  1F09  02FA               	subwf	??___flge+2,f
 10734  1F0A                     u494_24:
 10735  1F0A  0873               	movf	___flge@ff1+3,w
 10736  1F0B  1C03               	skipc
 10737  1F0C  0F73               	incfsz	___flge@ff1+3,w
 10738  1F0D  2F0F               	goto	u494_25
 10739  1F0E  2F10               	goto	u494_26
 10740  1F0F                     u494_25:
 10741  1F0F  02FB               	subwf	??___flge+3,f
 10742  1F10                     u494_26:
 10743  1F10  087B               	movf	??___flge+3,w
 10744  1F11  00F3               	movwf	___flge@ff1+3
 10745  1F12  087A               	movf	??___flge+2,w
 10746  1F13  00F2               	movwf	___flge@ff1+2
 10747  1F14  0879               	movf	??___flge+1,w
 10748  1F15  00F1               	movwf	___flge@ff1+1
 10749  1F16  0878               	movf	??___flge,w
 10750  1F17  00F0               	movwf	___flge@ff1
 10751  1F18                     i1l3066:
 10752  1F18  1FF7               	btfss	___flge@ff2+3,7
 10753  1F19  2F1B               	goto	u495_21
 10754  1F1A  2F1C               	goto	u495_20
 10755  1F1B                     u495_21:
 10756  1F1B  2F40               	goto	i1l517
 10757  1F1C                     u495_20:
 10758  1F1C                     i1l3068:
 10759  1F1C  3000               	movlw	0
 10760  1F1D  00F8               	movwf	??___flge
 10761  1F1E  3000               	movlw	0
 10762  1F1F  00F9               	movwf	??___flge+1
 10763  1F20  3000               	movlw	0
 10764  1F21  00FA               	movwf	??___flge+2
 10765  1F22  3080               	movlw	128
 10766  1F23  00FB               	movwf	??___flge+3
 10767  1F24  0874               	movf	___flge@ff2,w
 10768  1F25  02F8               	subwf	??___flge,f
 10769  1F26  0875               	movf	___flge@ff2+1,w
 10770  1F27  1C03               	skipc
 10771  1F28  0F75               	incfsz	___flge@ff2+1,w
 10772  1F29  2F2B               	goto	u496_21
 10773  1F2A  2F2C               	goto	u496_22
 10774  1F2B                     u496_21:
 10775  1F2B  02F9               	subwf	??___flge+1,f
 10776  1F2C                     u496_22:
 10777  1F2C  0876               	movf	___flge@ff2+2,w
 10778  1F2D  1C03               	skipc
 10779  1F2E  0F76               	incfsz	___flge@ff2+2,w
 10780  1F2F  2F31               	goto	u496_23
 10781  1F30  2F32               	goto	u496_24
 10782  1F31                     u496_23:
 10783  1F31  02FA               	subwf	??___flge+2,f
 10784  1F32                     u496_24:
 10785  1F32  0877               	movf	___flge@ff2+3,w
 10786  1F33  1C03               	skipc
 10787  1F34  0F77               	incfsz	___flge@ff2+3,w
 10788  1F35  2F37               	goto	u496_25
 10789  1F36  2F38               	goto	u496_26
 10790  1F37                     u496_25:
 10791  1F37  02FB               	subwf	??___flge+3,f
 10792  1F38                     u496_26:
 10793  1F38  087B               	movf	??___flge+3,w
 10794  1F39  00F7               	movwf	___flge@ff2+3
 10795  1F3A  087A               	movf	??___flge+2,w
 10796  1F3B  00F6               	movwf	___flge@ff2+2
 10797  1F3C  0879               	movf	??___flge+1,w
 10798  1F3D  00F5               	movwf	___flge@ff2+1
 10799  1F3E  0878               	movf	??___flge,w
 10800  1F3F  00F4               	movwf	___flge@ff2
 10801  1F40                     i1l517:
 10802  1F40  3080               	movlw	128
 10803  1F41  06F3               	xorwf	___flge@ff1+3,f
 10804  1F42  3080               	movlw	128
 10805  1F43  06F7               	xorwf	___flge@ff2+3,f
 10806  1F44  0877               	movf	___flge@ff2+3,w
 10807  1F45  0273               	subwf	___flge@ff1+3,w
 10808  1F46  1D03               	skipz
 10809  1F47  2F52               	goto	u497_25
 10810  1F48  0876               	movf	___flge@ff2+2,w
 10811  1F49  0272               	subwf	___flge@ff1+2,w
 10812  1F4A  1D03               	skipz
 10813  1F4B  2F52               	goto	u497_25
 10814  1F4C  0875               	movf	___flge@ff2+1,w
 10815  1F4D  0271               	subwf	___flge@ff1+1,w
 10816  1F4E  1D03               	skipz
 10817  1F4F  2F52               	goto	u497_25
 10818  1F50  0874               	movf	___flge@ff2,w
 10819  1F51  0270               	subwf	___flge@ff1,w
 10820  1F52                     u497_25:
 10821  1F52  1803               	skipnc
 10822  1F53  2F55               	goto	u497_21
 10823  1F54  2F56               	goto	u497_20
 10824  1F55                     u497_21:
 10825  1F55  2F58               	goto	i1l3072
 10826  1F56                     u497_20:
 10827  1F56                     i1l3070:
 10828  1F56  1003               	clrc
 10829  1F57  2F59               	goto	i1l518
 10830  1F58                     i1l3072:
 10831  1F58  1403               	setc
 10832  1F59                     i1l518:
 10833  1F59  0008               	return
 10834  1F5A                     __end_of___flge:
 10835                           
 10836                           	psect	text38
 10837  1C30                     __ptext38:	
 10838 ;; *************** function ___fleq *****************
 10839 ;; Defined at:
 10840 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;  ff1             4    0[COMMON] unsigned char 
 10843 ;;  ff2             4    4[COMMON] unsigned char 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;		None
 10846 ;; Return value:  Size  Location     Type
 10847 ;;		None               void
 10848 ;; Registers used:
 10849 ;;		wreg, status,2, status,0
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10855 ;;      Params:         8       0       0       0       0
 10856 ;;      Locals:         0       0       0       0       0
 10857 ;;      Temps:          4       0       0       0       0
 10858 ;;      Totals:        12       0       0       0       0
 10859 ;;Total ram usage:       12 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; This function calls:
 10862 ;;		Nothing
 10863 ;; This function is called by:
 10864 ;;		_sprintf
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           
 10869                           ;psect for function ___fleq
 10870  1C30                     ___fleq:
 10871  1C30                     i1l3044:	
 10872                           ;incstack = 0
 10873                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10874                           
 10875  1C30  3000               	movlw	0
 10876  1C31  0570               	andwf	___fleq@ff1,w
 10877  1C32  00F8               	movwf	??___fleq
 10878  1C33  3000               	movlw	0
 10879  1C34  0571               	andwf	___fleq@ff1+1,w
 10880  1C35  00F9               	movwf	??___fleq+1
 10881  1C36  3080               	movlw	128
 10882  1C37  0572               	andwf	___fleq@ff1+2,w
 10883  1C38  00FA               	movwf	??___fleq+2
 10884  1C39  307F               	movlw	127
 10885  1C3A  0573               	andwf	___fleq@ff1+3,w
 10886  1C3B  00FB               	movwf	??___fleq+3
 10887  1C3C  087B               	movf	??___fleq+3,w
 10888  1C3D  047A               	iorwf	??___fleq+2,w
 10889  1C3E  0479               	iorwf	??___fleq+1,w
 10890  1C3F  0478               	iorwf	??___fleq,w
 10891  1C40  1D03               	skipz
 10892  1C41  2C43               	goto	u488_21
 10893  1C42  2C44               	goto	u488_20
 10894  1C43                     u488_21:
 10895  1C43  2C4C               	goto	i1l509
 10896  1C44                     u488_20:
 10897  1C44                     i1l3046:
 10898  1C44  3000               	movlw	0
 10899  1C45  00F3               	movwf	___fleq@ff1+3
 10900  1C46  3000               	movlw	0
 10901  1C47  00F2               	movwf	___fleq@ff1+2
 10902  1C48  3000               	movlw	0
 10903  1C49  00F1               	movwf	___fleq@ff1+1
 10904  1C4A  3000               	movlw	0
 10905  1C4B  00F0               	movwf	___fleq@ff1
 10906  1C4C                     i1l509:
 10907  1C4C  3000               	movlw	0
 10908  1C4D  0574               	andwf	___fleq@ff2,w
 10909  1C4E  00F8               	movwf	??___fleq
 10910  1C4F  3000               	movlw	0
 10911  1C50  0575               	andwf	___fleq@ff2+1,w
 10912  1C51  00F9               	movwf	??___fleq+1
 10913  1C52  3080               	movlw	128
 10914  1C53  0576               	andwf	___fleq@ff2+2,w
 10915  1C54  00FA               	movwf	??___fleq+2
 10916  1C55  307F               	movlw	127
 10917  1C56  0577               	andwf	___fleq@ff2+3,w
 10918  1C57  00FB               	movwf	??___fleq+3
 10919  1C58  087B               	movf	??___fleq+3,w
 10920  1C59  047A               	iorwf	??___fleq+2,w
 10921  1C5A  0479               	iorwf	??___fleq+1,w
 10922  1C5B  0478               	iorwf	??___fleq,w
 10923  1C5C  1D03               	skipz
 10924  1C5D  2C5F               	goto	u489_21
 10925  1C5E  2C60               	goto	u489_20
 10926  1C5F                     u489_21:
 10927  1C5F  2C68               	goto	i1l510
 10928  1C60                     u489_20:
 10929  1C60                     i1l3048:
 10930  1C60  3000               	movlw	0
 10931  1C61  00F7               	movwf	___fleq@ff2+3
 10932  1C62  3000               	movlw	0
 10933  1C63  00F6               	movwf	___fleq@ff2+2
 10934  1C64  3000               	movlw	0
 10935  1C65  00F5               	movwf	___fleq@ff2+1
 10936  1C66  3000               	movlw	0
 10937  1C67  00F4               	movwf	___fleq@ff2
 10938  1C68                     i1l510:
 10939  1C68  0877               	movf	___fleq@ff2+3,w
 10940  1C69  0673               	xorwf	___fleq@ff1+3,w
 10941  1C6A  1D03               	skipz
 10942  1C6B  2C76               	goto	u490_25
 10943  1C6C  0876               	movf	___fleq@ff2+2,w
 10944  1C6D  0672               	xorwf	___fleq@ff1+2,w
 10945  1C6E  1D03               	skipz
 10946  1C6F  2C76               	goto	u490_25
 10947  1C70  0875               	movf	___fleq@ff2+1,w
 10948  1C71  0671               	xorwf	___fleq@ff1+1,w
 10949  1C72  1D03               	skipz
 10950  1C73  2C76               	goto	u490_25
 10951  1C74  0874               	movf	___fleq@ff2,w
 10952  1C75  0670               	xorwf	___fleq@ff1,w
 10953  1C76                     u490_25:
 10954  1C76  1903               	skipnz
 10955  1C77  2C79               	goto	u490_21
 10956  1C78  2C7A               	goto	u490_20
 10957  1C79                     u490_21:
 10958  1C79  2C7C               	goto	i1l3052
 10959  1C7A                     u490_20:
 10960  1C7A                     i1l3050:
 10961  1C7A  1003               	clrc
 10962  1C7B  2C7D               	goto	i1l511
 10963  1C7C                     i1l3052:
 10964  1C7C  1403               	setc
 10965  1C7D                     i1l511:
 10966  1C7D  0008               	return
 10967  1C7E                     __end_of___fleq:
 10968                           
 10969                           	psect	text39
 10970  1190                     __ptext39:	
 10971 ;; *************** function ___fldiv *****************
 10972 ;; Defined at:
 10973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 10974 ;; Parameters:    Size  Location     Type
 10975 ;;  a               4   30[BANK0 ] unsigned char 
 10976 ;;  b               4   34[BANK0 ] unsigned char 
 10977 ;; Auto vars:     Size  Location     Type
 10978 ;;  grs             4   50[BANK0 ] unsigned long 
 10979 ;;  rem             4   43[BANK0 ] unsigned long 
 10980 ;;  new_exp         2   48[BANK0 ] int 
 10981 ;;  aexp            1   55[BANK0 ] unsigned char 
 10982 ;;  bexp            1   54[BANK0 ] unsigned char 
 10983 ;;  sign            1   47[BANK0 ] unsigned char 
 10984 ;; Return value:  Size  Location     Type
 10985 ;;                  4   30[BANK0 ] unsigned char 
 10986 ;; Registers used:
 10987 ;;		wreg, status,2, status,0, btemp+1
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10993 ;;      Params:         0       8       0       0       0
 10994 ;;      Locals:         0      13       0       0       0
 10995 ;;      Temps:          0       5       0       0       0
 10996 ;;      Totals:         0      26       0       0       0
 10997 ;;Total ram usage:       26 bytes
 10998 ;; Hardware stack levels used:    1
 10999 ;; This function calls:
 11000 ;;		Nothing
 11001 ;; This function is called by:
 11002 ;;		_ISR
 11003 ;; This function uses a non-reentrant model
 11004 ;;
 11005                           
 11006                           
 11007                           ;psect for function ___fldiv
 11008  1190                     ___fldiv:
 11009  1190                     i1l3482:	
 11010                           ;incstack = 0
 11011                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 11012                           
 11013  1190  1283               	bcf	3,5	;RP0=0, select bank0
 11014  1191  1303               	bcf	3,6	;RP1=0, select bank0
 11015  1192  0845               	movf	___fldiv@b+3,w
 11016  1193  3980               	andlw	128
 11017  1194  00C6               	movwf	??___fldiv
 11018  1195  0846               	movf	??___fldiv,w
 11019  1196  00CF               	movwf	___fldiv@sign
 11020  1197                     i1l3484:
 11021  1197  0845               	movf	___fldiv@b+3,w
 11022  1198  00C6               	movwf	??___fldiv
 11023  1199  0746               	addwf	??___fldiv,w
 11024  119A  00C7               	movwf	??___fldiv+1
 11025  119B  0847               	movf	??___fldiv+1,w
 11026  119C  00D6               	movwf	___fldiv@bexp
 11027  119D                     i1l3486:
 11028  119D  1FC4               	btfss	___fldiv@b+2,7
 11029  119E  29A0               	goto	u571_21
 11030  119F  29A1               	goto	u571_20
 11031  11A0                     u571_21:
 11032  11A0  29A2               	goto	i1l3490
 11033  11A1                     u571_20:
 11034  11A1                     i1l3488:
 11035  11A1  1456               	bsf	___fldiv@bexp,0
 11036  11A2                     i1l3490:
 11037  11A2  0856               	movf	___fldiv@bexp,w
 11038  11A3  1903               	btfsc	3,2
 11039  11A4  29A6               	goto	u572_21
 11040  11A5  29A7               	goto	u572_20
 11041  11A6                     u572_21:
 11042  11A6  29B7               	goto	i1l3500
 11043  11A7                     u572_20:
 11044  11A7                     i1l3492:
 11045  11A7  0A56               	incf	___fldiv@bexp,w
 11046  11A8  1D03               	btfss	3,2
 11047  11A9  29AB               	goto	u573_21
 11048  11AA  29AC               	goto	u573_20
 11049  11AB                     u573_21:
 11050  11AB  29B4               	goto	i1l3496
 11051  11AC                     u573_20:
 11052  11AC                     i1l3494:
 11053  11AC  3000               	movlw	0
 11054  11AD  00C5               	movwf	___fldiv@b+3
 11055  11AE  3000               	movlw	0
 11056  11AF  00C4               	movwf	___fldiv@b+2
 11057  11B0  3000               	movlw	0
 11058  11B1  00C3               	movwf	___fldiv@b+1
 11059  11B2  3000               	movlw	0
 11060  11B3  00C2               	movwf	___fldiv@b
 11061  11B4                     i1l3496:
 11062  11B4  17C4               	bsf	___fldiv@b+2,7
 11063  11B5                     i1l3498:
 11064  11B5  01C5               	clrf	___fldiv@b+3
 11065  11B6  29BF               	goto	i1l3502
 11066  11B7                     i1l3500:
 11067  11B7  3000               	movlw	0
 11068  11B8  00C5               	movwf	___fldiv@b+3
 11069  11B9  3000               	movlw	0
 11070  11BA  00C4               	movwf	___fldiv@b+2
 11071  11BB  3000               	movlw	0
 11072  11BC  00C3               	movwf	___fldiv@b+1
 11073  11BD  3000               	movlw	0
 11074  11BE  00C2               	movwf	___fldiv@b
 11075  11BF                     i1l3502:
 11076  11BF  0841               	movf	___fldiv@a+3,w
 11077  11C0  3980               	andlw	128
 11078  11C1  00C6               	movwf	??___fldiv
 11079  11C2  0846               	movf	??___fldiv,w
 11080  11C3  06CF               	xorwf	___fldiv@sign,f
 11081  11C4                     i1l3504:
 11082  11C4  0841               	movf	___fldiv@a+3,w
 11083  11C5  00C6               	movwf	??___fldiv
 11084  11C6  0746               	addwf	??___fldiv,w
 11085  11C7  00C7               	movwf	??___fldiv+1
 11086  11C8  0847               	movf	??___fldiv+1,w
 11087  11C9  00D7               	movwf	___fldiv@aexp
 11088  11CA                     i1l3506:
 11089  11CA  1FC0               	btfss	___fldiv@a+2,7
 11090  11CB  29CD               	goto	u574_21
 11091  11CC  29CE               	goto	u574_20
 11092  11CD                     u574_21:
 11093  11CD  29CF               	goto	i1l3510
 11094  11CE                     u574_20:
 11095  11CE                     i1l3508:
 11096  11CE  1457               	bsf	___fldiv@aexp,0
 11097  11CF                     i1l3510:
 11098  11CF  0857               	movf	___fldiv@aexp,w
 11099  11D0  1903               	btfsc	3,2
 11100  11D1  29D3               	goto	u575_21
 11101  11D2  29D4               	goto	u575_20
 11102  11D3                     u575_21:
 11103  11D3  29E4               	goto	i1l3520
 11104  11D4                     u575_20:
 11105  11D4                     i1l3512:
 11106  11D4  0A57               	incf	___fldiv@aexp,w
 11107  11D5  1D03               	btfss	3,2
 11108  11D6  29D8               	goto	u576_21
 11109  11D7  29D9               	goto	u576_20
 11110  11D8                     u576_21:
 11111  11D8  29E1               	goto	i1l3516
 11112  11D9                     u576_20:
 11113  11D9                     i1l3514:
 11114  11D9  3000               	movlw	0
 11115  11DA  00C1               	movwf	___fldiv@a+3
 11116  11DB  3000               	movlw	0
 11117  11DC  00C0               	movwf	___fldiv@a+2
 11118  11DD  3000               	movlw	0
 11119  11DE  00BF               	movwf	___fldiv@a+1
 11120  11DF  3000               	movlw	0
 11121  11E0  00BE               	movwf	___fldiv@a
 11122  11E1                     i1l3516:
 11123  11E1  17C0               	bsf	___fldiv@a+2,7
 11124  11E2                     i1l3518:
 11125  11E2  01C1               	clrf	___fldiv@a+3
 11126  11E3  29EC               	goto	i1l706
 11127  11E4                     i1l3520:
 11128  11E4  3000               	movlw	0
 11129  11E5  00C1               	movwf	___fldiv@a+3
 11130  11E6  3000               	movlw	0
 11131  11E7  00C0               	movwf	___fldiv@a+2
 11132  11E8  3000               	movlw	0
 11133  11E9  00BF               	movwf	___fldiv@a+1
 11134  11EA  3000               	movlw	0
 11135  11EB  00BE               	movwf	___fldiv@a
 11136  11EC                     i1l706:
 11137  11EC  0841               	movf	___fldiv@a+3,w
 11138  11ED  0440               	iorwf	___fldiv@a+2,w
 11139  11EE  043F               	iorwf	___fldiv@a+1,w
 11140  11EF  043E               	iorwf	___fldiv@a,w
 11141  11F0  1D03               	skipz
 11142  11F1  29F3               	goto	u577_21
 11143  11F2  29F4               	goto	u577_20
 11144  11F3                     u577_21:
 11145  11F3  2A0D               	goto	i1l3530
 11146  11F4                     u577_20:
 11147  11F4                     i1l3522:
 11148  11F4  3000               	movlw	0
 11149  11F5  00C5               	movwf	___fldiv@b+3
 11150  11F6  3000               	movlw	0
 11151  11F7  00C4               	movwf	___fldiv@b+2
 11152  11F8  3000               	movlw	0
 11153  11F9  00C3               	movwf	___fldiv@b+1
 11154  11FA  3000               	movlw	0
 11155  11FB  00C2               	movwf	___fldiv@b
 11156  11FC  3080               	movlw	128
 11157  11FD  04C4               	iorwf	___fldiv@b+2,f
 11158  11FE  307F               	movlw	127
 11159  11FF  04C5               	iorwf	___fldiv@b+3,f
 11160  1200                     i1l3524:
 11161  1200  084F               	movf	___fldiv@sign,w
 11162  1201  00C6               	movwf	??___fldiv
 11163  1202  0846               	movf	??___fldiv,w
 11164  1203  04C5               	iorwf	___fldiv@b+3,f
 11165  1204                     i1l3526:
 11166  1204  0845               	movf	___fldiv@b+3,w
 11167  1205  00C1               	movwf	?___fldiv+3
 11168  1206  0844               	movf	___fldiv@b+2,w
 11169  1207  00C0               	movwf	?___fldiv+2
 11170  1208  0843               	movf	___fldiv@b+1,w
 11171  1209  00BF               	movwf	?___fldiv+1
 11172  120A  0842               	movf	___fldiv@b,w
 11173  120B  00BE               	movwf	?___fldiv
 11174  120C  2B6C               	goto	i1l708
 11175  120D                     i1l3530:
 11176  120D  0856               	movf	___fldiv@bexp,w
 11177  120E  1D03               	btfss	3,2
 11178  120F  2A11               	goto	u578_21
 11179  1210  2A12               	goto	u578_20
 11180  1211                     u578_21:
 11181  1211  2A1B               	goto	i1l3536
 11182  1212                     u578_20:
 11183  1212                     i1l3532:
 11184  1212  3000               	movlw	0
 11185  1213  00C1               	movwf	?___fldiv+3
 11186  1214  3000               	movlw	0
 11187  1215  00C0               	movwf	?___fldiv+2
 11188  1216  3000               	movlw	0
 11189  1217  00BF               	movwf	?___fldiv+1
 11190  1218  3000               	movlw	0
 11191  1219  00BE               	movwf	?___fldiv
 11192  121A  2B6C               	goto	i1l708
 11193  121B                     i1l3536:
 11194  121B  0856               	movf	___fldiv@bexp,w
 11195  121C  00C6               	movwf	??___fldiv
 11196  121D  01C7               	clrf	??___fldiv+1
 11197  121E  0847               	movf	??___fldiv+1,w
 11198  121F  00C9               	movwf	??___fldiv+3
 11199  1220  0857               	movf	___fldiv@aexp,w
 11200  1221  0246               	subwf	??___fldiv,w
 11201  1222  00C8               	movwf	??___fldiv+2
 11202  1223  1C03               	skipc
 11203  1224  03C9               	decf	??___fldiv+3,f
 11204  1225  0848               	movf	??___fldiv+2,w
 11205  1226  3E7F               	addlw	127
 11206  1227  00D0               	movwf	___fldiv@new_exp
 11207  1228  0849               	movf	??___fldiv+3,w
 11208  1229  1803               	skipnc
 11209  122A  3E01               	addlw	1
 11210  122B  3E00               	addlw	0
 11211  122C  00D1               	movwf	___fldiv@new_exp+1
 11212  122D                     i1l3538:
 11213  122D  0845               	movf	___fldiv@b+3,w
 11214  122E  00CE               	movwf	___fldiv@rem+3
 11215  122F  0844               	movf	___fldiv@b+2,w
 11216  1230  00CD               	movwf	___fldiv@rem+2
 11217  1231  0843               	movf	___fldiv@b+1,w
 11218  1232  00CC               	movwf	___fldiv@rem+1
 11219  1233  0842               	movf	___fldiv@b,w
 11220  1234  00CB               	movwf	___fldiv@rem
 11221  1235                     i1l3540:
 11222  1235  3000               	movlw	0
 11223  1236  00C5               	movwf	___fldiv@b+3
 11224  1237  3000               	movlw	0
 11225  1238  00C4               	movwf	___fldiv@b+2
 11226  1239  3000               	movlw	0
 11227  123A  00C3               	movwf	___fldiv@b+1
 11228  123B  3000               	movlw	0
 11229  123C  00C2               	movwf	___fldiv@b
 11230  123D                     i1l3542:
 11231  123D  3000               	movlw	0
 11232  123E  00D5               	movwf	___fldiv@grs+3
 11233  123F  3000               	movlw	0
 11234  1240  00D4               	movwf	___fldiv@grs+2
 11235  1241  3000               	movlw	0
 11236  1242  00D3               	movwf	___fldiv@grs+1
 11237  1243  3000               	movlw	0
 11238  1244  00D2               	movwf	___fldiv@grs
 11239  1245                     i1l3544:
 11240  1245  01D7               	clrf	___fldiv@aexp
 11241  1246  2A91               	goto	i1l3564
 11242  1247                     i1l3546:
 11243  1247  0857               	movf	___fldiv@aexp,w
 11244  1248  1903               	btfsc	3,2
 11245  1249  2A4B               	goto	u579_21
 11246  124A  2A4C               	goto	u579_20
 11247  124B                     u579_21:
 11248  124B  2A6C               	goto	i1l3556
 11249  124C                     u579_20:
 11250  124C                     i1l3548:
 11251  124C  3001               	movlw	1
 11252  124D  00C6               	movwf	??___fldiv
 11253  124E                     u580_25:
 11254  124E  1003               	clrc
 11255  124F  0DCB               	rlf	___fldiv@rem,f
 11256  1250  0DCC               	rlf	___fldiv@rem+1,f
 11257  1251  0DCD               	rlf	___fldiv@rem+2,f
 11258  1252  0DCE               	rlf	___fldiv@rem+3,f
 11259  1253  0BC6               	decfsz	??___fldiv,f
 11260  1254  2A4E               	goto	u580_25
 11261  1255  3001               	movlw	1
 11262  1256  00C6               	movwf	??___fldiv
 11263  1257                     u581_25:
 11264  1257  1003               	clrc
 11265  1258  0DC2               	rlf	___fldiv@b,f
 11266  1259  0DC3               	rlf	___fldiv@b+1,f
 11267  125A  0DC4               	rlf	___fldiv@b+2,f
 11268  125B  0DC5               	rlf	___fldiv@b+3,f
 11269  125C  0BC6               	decfsz	??___fldiv,f
 11270  125D  2A57               	goto	u581_25
 11271  125E                     i1l3550:
 11272  125E  1FD5               	btfss	___fldiv@grs+3,7
 11273  125F  2A61               	goto	u582_21
 11274  1260  2A62               	goto	u582_20
 11275  1261                     u582_21:
 11276  1261  2A63               	goto	i1l3554
 11277  1262                     u582_20:
 11278  1262                     i1l3552:
 11279  1262  1442               	bsf	___fldiv@b,0
 11280  1263                     i1l3554:
 11281  1263  3001               	movlw	1
 11282  1264  00C6               	movwf	??___fldiv
 11283  1265                     u583_25:
 11284  1265  1003               	clrc
 11285  1266  0DD2               	rlf	___fldiv@grs,f
 11286  1267  0DD3               	rlf	___fldiv@grs+1,f
 11287  1268  0DD4               	rlf	___fldiv@grs+2,f
 11288  1269  0DD5               	rlf	___fldiv@grs+3,f
 11289  126A  0BC6               	decfsz	??___fldiv,f
 11290  126B  2A65               	goto	u583_25
 11291  126C                     i1l3556:
 11292  126C  0841               	movf	___fldiv@a+3,w
 11293  126D  024E               	subwf	___fldiv@rem+3,w
 11294  126E  1D03               	skipz
 11295  126F  2A7A               	goto	u584_25
 11296  1270  0840               	movf	___fldiv@a+2,w
 11297  1271  024D               	subwf	___fldiv@rem+2,w
 11298  1272  1D03               	skipz
 11299  1273  2A7A               	goto	u584_25
 11300  1274  083F               	movf	___fldiv@a+1,w
 11301  1275  024C               	subwf	___fldiv@rem+1,w
 11302  1276  1D03               	skipz
 11303  1277  2A7A               	goto	u584_25
 11304  1278  083E               	movf	___fldiv@a,w
 11305  1279  024B               	subwf	___fldiv@rem,w
 11306  127A                     u584_25:
 11307  127A  1C03               	skipc
 11308  127B  2A7D               	goto	u584_21
 11309  127C  2A7E               	goto	u584_20
 11310  127D                     u584_21:
 11311  127D  2A8D               	goto	i1l3562
 11312  127E                     u584_20:
 11313  127E                     i1l3558:
 11314  127E  1755               	bsf	___fldiv@grs+3,6
 11315  127F                     i1l3560:
 11316  127F  083E               	movf	___fldiv@a,w
 11317  1280  02CB               	subwf	___fldiv@rem,f
 11318  1281  083F               	movf	___fldiv@a+1,w
 11319  1282  1C03               	skipc
 11320  1283  0F3F               	incfsz	___fldiv@a+1,w
 11321  1284  02CC               	subwf	___fldiv@rem+1,f
 11322  1285  0840               	movf	___fldiv@a+2,w
 11323  1286  1C03               	skipc
 11324  1287  0F40               	incfsz	___fldiv@a+2,w
 11325  1288  02CD               	subwf	___fldiv@rem+2,f
 11326  1289  0841               	movf	___fldiv@a+3,w
 11327  128A  1C03               	skipc
 11328  128B  0F41               	incfsz	___fldiv@a+3,w
 11329  128C  02CE               	subwf	___fldiv@rem+3,f
 11330  128D                     i1l3562:
 11331  128D  3001               	movlw	1
 11332  128E  00C6               	movwf	??___fldiv
 11333  128F  0846               	movf	??___fldiv,w
 11334  1290  07D7               	addwf	___fldiv@aexp,f
 11335  1291                     i1l3564:
 11336  1291  301A               	movlw	26
 11337  1292  0257               	subwf	___fldiv@aexp,w
 11338  1293  1C03               	skipc
 11339  1294  2A96               	goto	u585_21
 11340  1295  2A97               	goto	u585_20
 11341  1296                     u585_21:
 11342  1296  2A47               	goto	i1l3546
 11343  1297                     u585_20:
 11344  1297                     i1l3566:
 11345  1297  084E               	movf	___fldiv@rem+3,w
 11346  1298  044D               	iorwf	___fldiv@rem+2,w
 11347  1299  044C               	iorwf	___fldiv@rem+1,w
 11348  129A  044B               	iorwf	___fldiv@rem,w
 11349  129B  1903               	skipnz
 11350  129C  2A9E               	goto	u586_21
 11351  129D  2A9F               	goto	u586_20
 11352  129E                     u586_21:
 11353  129E  2ABE               	goto	i1l3580
 11354  129F                     u586_20:
 11355  129F                     i1l3568:
 11356  129F  1452               	bsf	___fldiv@grs,0
 11357  12A0  2ABE               	goto	i1l3580
 11358  12A1                     i1l3570:
 11359  12A1  3001               	movlw	1
 11360  12A2  00C6               	movwf	??___fldiv
 11361  12A3                     u587_25:
 11362  12A3  1003               	clrc
 11363  12A4  0DC2               	rlf	___fldiv@b,f
 11364  12A5  0DC3               	rlf	___fldiv@b+1,f
 11365  12A6  0DC4               	rlf	___fldiv@b+2,f
 11366  12A7  0DC5               	rlf	___fldiv@b+3,f
 11367  12A8  0BC6               	decfsz	??___fldiv,f
 11368  12A9  2AA3               	goto	u587_25
 11369  12AA                     i1l3572:
 11370  12AA  1FD5               	btfss	___fldiv@grs+3,7
 11371  12AB  2AAD               	goto	u588_21
 11372  12AC  2AAE               	goto	u588_20
 11373  12AD                     u588_21:
 11374  12AD  2AAF               	goto	i1l3576
 11375  12AE                     u588_20:
 11376  12AE                     i1l3574:
 11377  12AE  1442               	bsf	___fldiv@b,0
 11378  12AF                     i1l3576:
 11379  12AF  3001               	movlw	1
 11380  12B0  00C6               	movwf	??___fldiv
 11381  12B1                     u589_25:
 11382  12B1  1003               	clrc
 11383  12B2  0DD2               	rlf	___fldiv@grs,f
 11384  12B3  0DD3               	rlf	___fldiv@grs+1,f
 11385  12B4  0DD4               	rlf	___fldiv@grs+2,f
 11386  12B5  0DD5               	rlf	___fldiv@grs+3,f
 11387  12B6  0BC6               	decfsz	??___fldiv,f
 11388  12B7  2AB1               	goto	u589_25
 11389  12B8                     i1l3578:
 11390  12B8  30FF               	movlw	255
 11391  12B9  07D0               	addwf	___fldiv@new_exp,f
 11392  12BA  1803               	skipnc
 11393  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11394  12BC  30FF               	movlw	255
 11395  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11396  12BE                     i1l3580:
 11397  12BE  1FC4               	btfss	___fldiv@b+2,7
 11398  12BF  2AC1               	goto	u590_21
 11399  12C0  2AC2               	goto	u590_20
 11400  12C1                     u590_21:
 11401  12C1  2AA1               	goto	i1l3570
 11402  12C2                     u590_20:
 11403  12C2                     i1l3582:
 11404  12C2  01D7               	clrf	___fldiv@aexp
 11405  12C3                     i1l3584:
 11406  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11407  12C4  2AC6               	goto	u591_21
 11408  12C5  2AC7               	goto	u591_20
 11409  12C6                     u591_21:
 11410  12C6  2AE3               	goto	i1l3592
 11411  12C7                     u591_20:
 11412  12C7                     i1l3586:
 11413  12C7  30FF               	movlw	255
 11414  12C8  0552               	andwf	___fldiv@grs,w
 11415  12C9  00C6               	movwf	??___fldiv
 11416  12CA  30FF               	movlw	255
 11417  12CB  0553               	andwf	___fldiv@grs+1,w
 11418  12CC  00C7               	movwf	??___fldiv+1
 11419  12CD  30FF               	movlw	255
 11420  12CE  0554               	andwf	___fldiv@grs+2,w
 11421  12CF  00C8               	movwf	??___fldiv+2
 11422  12D0  307F               	movlw	127
 11423  12D1  0555               	andwf	___fldiv@grs+3,w
 11424  12D2  00C9               	movwf	??___fldiv+3
 11425  12D3  0849               	movf	??___fldiv+3,w
 11426  12D4  0448               	iorwf	??___fldiv+2,w
 11427  12D5  0447               	iorwf	??___fldiv+1,w
 11428  12D6  0446               	iorwf	??___fldiv,w
 11429  12D7  1903               	skipnz
 11430  12D8  2ADA               	goto	u592_21
 11431  12D9  2ADB               	goto	u592_20
 11432  12DA                     u592_21:
 11433  12DA  2ADE               	goto	i1l722
 11434  12DB                     u592_20:
 11435  12DB                     i1l3588:
 11436  12DB  01D7               	clrf	___fldiv@aexp
 11437  12DC  0AD7               	incf	___fldiv@aexp,f
 11438  12DD  2AE3               	goto	i1l3592
 11439  12DE                     i1l722:
 11440  12DE  1C42               	btfss	___fldiv@b,0
 11441  12DF  2AE1               	goto	u593_21
 11442  12E0  2AE2               	goto	u593_20
 11443  12E1                     u593_21:
 11444  12E1  2AE3               	goto	i1l3592
 11445  12E2                     u593_20:
 11446  12E2  2ADB               	goto	i1l3588
 11447  12E3                     i1l3592:
 11448  12E3  0857               	movf	___fldiv@aexp,w
 11449  12E4  1903               	btfsc	3,2
 11450  12E5  2AE7               	goto	u594_21
 11451  12E6  2AE8               	goto	u594_20
 11452  12E7                     u594_21:
 11453  12E7  2B19               	goto	i1l3602
 11454  12E8                     u594_20:
 11455  12E8                     i1l3594:
 11456  12E8  3001               	movlw	1
 11457  12E9  07C2               	addwf	___fldiv@b,f
 11458  12EA  3000               	movlw	0
 11459  12EB  1803               	skipnc
 11460  12EC  3001               	movlw	1
 11461  12ED  07C3               	addwf	___fldiv@b+1,f
 11462  12EE  3000               	movlw	0
 11463  12EF  1803               	skipnc
 11464  12F0  3001               	movlw	1
 11465  12F1  07C4               	addwf	___fldiv@b+2,f
 11466  12F2  3000               	movlw	0
 11467  12F3  1803               	skipnc
 11468  12F4  3001               	movlw	1
 11469  12F5  07C5               	addwf	___fldiv@b+3,f
 11470  12F6                     i1l3596:
 11471  12F6  1C45               	btfss	___fldiv@b+3,0
 11472  12F7  2AF9               	goto	u595_21
 11473  12F8  2AFA               	goto	u595_20
 11474  12F9                     u595_21:
 11475  12F9  2B19               	goto	i1l3602
 11476  12FA                     u595_20:
 11477  12FA                     i1l3598:
 11478  12FA  0842               	movf	___fldiv@b,w
 11479  12FB  00C6               	movwf	??___fldiv
 11480  12FC  0843               	movf	___fldiv@b+1,w
 11481  12FD  00C7               	movwf	??___fldiv+1
 11482  12FE  0844               	movf	___fldiv@b+2,w
 11483  12FF  00C8               	movwf	??___fldiv+2
 11484  1300  0845               	movf	___fldiv@b+3,w
 11485  1301  00C9               	movwf	??___fldiv+3
 11486  1302  3001               	movlw	1
 11487  1303  00CA               	movwf	??___fldiv+4
 11488  1304                     u596_25:
 11489  1304  0D49               	rlf	??___fldiv+3,w
 11490  1305  0CC9               	rrf	??___fldiv+3,f
 11491  1306  0CC8               	rrf	??___fldiv+2,f
 11492  1307  0CC7               	rrf	??___fldiv+1,f
 11493  1308  0CC6               	rrf	??___fldiv,f
 11494  1309                     u596_20:
 11495  1309  0BCA               	decfsz	??___fldiv+4,f
 11496  130A  2B04               	goto	u596_25
 11497  130B  0849               	movf	??___fldiv+3,w
 11498  130C  00C5               	movwf	___fldiv@b+3
 11499  130D  0848               	movf	??___fldiv+2,w
 11500  130E  00C4               	movwf	___fldiv@b+2
 11501  130F  0847               	movf	??___fldiv+1,w
 11502  1310  00C3               	movwf	___fldiv@b+1
 11503  1311  0846               	movf	??___fldiv,w
 11504  1312  00C2               	movwf	___fldiv@b
 11505  1313                     i1l3600:
 11506  1313  3001               	movlw	1
 11507  1314  07D0               	addwf	___fldiv@new_exp,f
 11508  1315  1803               	skipnc
 11509  1316  0AD1               	incf	___fldiv@new_exp+1,f
 11510  1317  3000               	movlw	0
 11511  1318  07D1               	addwf	___fldiv@new_exp+1,f
 11512  1319                     i1l3602:
 11513  1319  0851               	movf	___fldiv@new_exp+1,w
 11514  131A  3A80               	xorlw	128
 11515  131B  00FF               	movwf	btemp+1
 11516  131C  3080               	movlw	128
 11517  131D  027F               	subwf	btemp+1,w
 11518  131E  1D03               	skipz
 11519  131F  2B22               	goto	u597_25
 11520  1320  30FF               	movlw	255
 11521  1321  0250               	subwf	___fldiv@new_exp,w
 11522  1322                     u597_25:
 11523  1322  1C03               	skipc
 11524  1323  2B25               	goto	u597_21
 11525  1324  2B26               	goto	u597_20
 11526  1325                     u597_21:
 11527  1325  2B34               	goto	i1l3606
 11528  1326                     u597_20:
 11529  1326                     i1l3604:
 11530  1326  30FF               	movlw	255
 11531  1327  1283               	bcf	3,5	;RP0=0, select bank0
 11532  1328  1303               	bcf	3,6	;RP1=0, select bank0
 11533  1329  00D0               	movwf	___fldiv@new_exp
 11534  132A  3000               	movlw	0
 11535  132B  00D1               	movwf	___fldiv@new_exp+1
 11536  132C  3000               	movlw	0
 11537  132D  00C5               	movwf	___fldiv@b+3
 11538  132E  3000               	movlw	0
 11539  132F  00C4               	movwf	___fldiv@b+2
 11540  1330  3000               	movlw	0
 11541  1331  00C3               	movwf	___fldiv@b+1
 11542  1332  3000               	movlw	0
 11543  1333  00C2               	movwf	___fldiv@b
 11544  1334                     i1l3606:
 11545  1334  1283               	bcf	3,5	;RP0=0, select bank0
 11546  1335  1303               	bcf	3,6	;RP1=0, select bank0
 11547  1336  0851               	movf	___fldiv@new_exp+1,w
 11548  1337  3A80               	xorlw	128
 11549  1338  00FF               	movwf	btemp+1
 11550  1339  3080               	movlw	128
 11551  133A  027F               	subwf	btemp+1,w
 11552  133B  1D03               	skipz
 11553  133C  2B3F               	goto	u598_25
 11554  133D  3001               	movlw	1
 11555  133E  0250               	subwf	___fldiv@new_exp,w
 11556  133F                     u598_25:
 11557  133F  1803               	skipnc
 11558  1340  2B42               	goto	u598_21
 11559  1341  2B43               	goto	u598_20
 11560  1342                     u598_21:
 11561  1342  2B50               	goto	i1l728
 11562  1343                     u598_20:
 11563  1343                     i1l3608:
 11564  1343  1283               	bcf	3,5	;RP0=0, select bank0
 11565  1344  1303               	bcf	3,6	;RP1=0, select bank0
 11566  1345  01D0               	clrf	___fldiv@new_exp
 11567  1346  01D1               	clrf	___fldiv@new_exp+1
 11568  1347                     i1l3610:
 11569  1347  3000               	movlw	0
 11570  1348  00C5               	movwf	___fldiv@b+3
 11571  1349  3000               	movlw	0
 11572  134A  00C4               	movwf	___fldiv@b+2
 11573  134B  3000               	movlw	0
 11574  134C  00C3               	movwf	___fldiv@b+1
 11575  134D  3000               	movlw	0
 11576  134E  00C2               	movwf	___fldiv@b
 11577  134F                     i1l3612:
 11578  134F  01CF               	clrf	___fldiv@sign
 11579  1350                     i1l728:
 11580  1350  1283               	bcf	3,5	;RP0=0, select bank0
 11581  1351  1303               	bcf	3,6	;RP1=0, select bank0
 11582  1352  0850               	movf	___fldiv@new_exp,w
 11583  1353  00C6               	movwf	??___fldiv
 11584  1354  0846               	movf	??___fldiv,w
 11585  1355  00D6               	movwf	___fldiv@bexp
 11586  1356                     i1l3614:
 11587  1356  1C56               	btfss	___fldiv@bexp,0
 11588  1357  2B59               	goto	u599_21
 11589  1358  2B5A               	goto	u599_20
 11590  1359                     u599_21:
 11591  1359  2B5C               	goto	i1l3618
 11592  135A                     u599_20:
 11593  135A                     i1l3616:
 11594  135A  17C4               	bsf	___fldiv@b+2,7
 11595  135B  2B60               	goto	i1l730
 11596  135C                     i1l3618:
 11597  135C  307F               	movlw	127
 11598  135D  00C6               	movwf	??___fldiv
 11599  135E  0846               	movf	??___fldiv,w
 11600  135F  05C4               	andwf	___fldiv@b+2,f
 11601  1360                     i1l730:
 11602  1360  0856               	movf	___fldiv@bexp,w
 11603  1361  00C6               	movwf	??___fldiv
 11604  1362  1003               	clrc
 11605  1363  0C46               	rrf	??___fldiv,w
 11606  1364  00C7               	movwf	??___fldiv+1
 11607  1365  0847               	movf	??___fldiv+1,w
 11608  1366  00C5               	movwf	___fldiv@b+3
 11609  1367  084F               	movf	___fldiv@sign,w
 11610  1368  00C6               	movwf	??___fldiv
 11611  1369  0846               	movf	??___fldiv,w
 11612  136A  04C5               	iorwf	___fldiv@b+3,f
 11613  136B  2A04               	goto	i1l3526
 11614  136C                     i1l708:
 11615  136C  0008               	return
 11616  136D                     __end_of___fldiv:
 11617  007E                     btemp	set	126	;btemp
 11618  007E                     wtemp0	set	126
 11619                           
 11620                           	psect	config
 11621                           
 11622                           ;Config register CONFIG1 @ 0x2007
 11623                           ;	Oscillator Selection bits
 11624                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11625                           ;	Watchdog Timer Enable bit
 11626                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11627                           ;	Power-up Timer Enable bit
 11628                           ;	PWRTE = OFF, PWRT disabled
 11629                           ;	RE3/MCLR pin function select bit
 11630                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11631                           ;	Code Protection bit
 11632                           ;	CP = OFF, Program memory code protection is disabled
 11633                           ;	Data Code Protection bit
 11634                           ;	CPD = OFF, Data memory code protection is disabled
 11635                           ;	Brown Out Reset Selection bits
 11636                           ;	BOREN = ON, BOR enabled
 11637                           ;	Internal External Switchover bit
 11638                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11639                           ;	Fail-Safe Clock Monitor Enabled bit
 11640                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11641                           ;	Low Voltage Programming Enable bit
 11642                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11643                           ;	In-Circuit Debugger Mode bit
 11644                           ;	DEBUG = 0x1, unprogrammed default
 11645  2007                     	org	8199
 11646  2007  23D4               	dw	9172
 11647                           
 11648                           ;Config register CONFIG2 @ 0x2008
 11649                           ;	Brown-out Reset Selection bit
 11650                           ;	BOR4V = 0x1, unprogrammed default
 11651                           ;	Flash Program Memory Self Write Enable bits
 11652                           ;	WRT = OFF, Write protection off
 11653  2008                     	org	8200
 11654  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    144
    Data        0
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     43      49
    BANK3            96     12      80
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 64
		 -> buffer(BANK3[64]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 64
		 -> buffer(BANK3[64]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___xxtofl
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_sprintf

Critical Paths under _main in BANK3

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1274
                                             10 BANK3      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _confADC
                            _conf_ch
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_ch                                              2     0      2     196
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (1) _confADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     462
                                              3 BANK3      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 BANK3      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     506
                                              4 BANK3      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0      66
                                              4 BANK3      3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK3      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  8     8      0   38683
                                             35 BANK1      8     8      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Write_String                                   7     5      2     186
                                              3 COMMON     7     5      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_Char                                     2     2      0      44
                                              1 COMMON     2     2      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Set_Cursor                                     4     3      1     230
                                              4 COMMON     4     3      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Cmd                                            3     3      0      44
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Port                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             42    37      5   31595
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _confADC
   _conf_ch
   _config

 _ISR (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      DD       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2B      31       7       61.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      C      50       9       83.3%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      DD      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 21:41:09 2021

               ___fldiv@aexp 0057                 ___fldiv@bexp 0056                            pc 0002  
               ___fldiv@sign 004F                           l78 1ABC                           l98 1A4F  
               ___awdiv@sign 0021                           fsr 0004          ___wmul@multiplicand 0072  
        __Umul8_16@word_mpld 0076                          l101 1A76                          l103 1A84  
                        l120 07FC                          l114 1A17                          l132 1AA0  
                        l117 1ADC                          l126 1B6F                          l129 1EB7  
                        l138 1D25                          _RE0 0048                          _RE1 0049  
                        _ISR 0686                          _pot 0192                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0076                 ___flmul@aexp 0036  
               ___flmul@bexp 0037                 ___flmul@sign 0031                 ___flmul@temp 003C  
               ___flmul@prod 0038                         ?_ISR 0070                 ___fltol@exp1 005B  
                       l3210 1AA1                         l3220 1AB1                         l3212 1AA3  
                       l3230 1A49                         l3222 1A3D                         l3214 1AA7  
                       l2344 1A13                         l3240 1E74                         l3232 1A4C  
                       l3224 1A41                         l3216 1AA8                         l3242 1E7F  
                       l3234 1E4E                         l3250 1B4D                         l3226 1A44  
                       l3218 1AB0                         l3244 1E8C                         l3236 1E5D  
                       l3260 1B69                         l3252 1B52                         l3228 1A48  
                       l3246 1E92                         l3238 1E63                         l3254 1B57  
                       l3262 1CD2                         l3270 1A6A                         l3248 07F0  
                       l3256 1B5E                         l3264 1CD7                         l3272 1A72  
                       l3258 1B64                         l3266 1CFB                         l3274 1A7E  
                       l2820 1AD9                         l2812 1AC0                         l3268 1D03  
                       l2814 1AC3                         l2830 1A9D                         l2822 1A88  
                       l2816 1ACB                         l2824 1A8B                         l2818 1ACE  
                       l2826 1A93                         l3650 1F68                         l2828 1A96  
                       l3660 1F93                         l3652 1F6D                         l3644 1F5A  
                       l3670 1FC1                         l3662 1F9E                         l3654 1F72  
                       l3646 1F5F                         l3680 1FE5                         l3672 1FC7  
                       l3664 1FAA                         l3656 1F7C                         l3648 1F64  
                       l3682 1FEE                         l3674 1FCF                         l3666 1FB5  
                       l3658 1F87                         l3684 1FF9                         l3676 1FDA  
                       l3668 1FBD                         l3678 1FDD                         STR_1 18A5  
                       STR_2 18A9                         STR_3 18AD                         STR_4 18A0  
                       STR_5 18A0                         u5300 1B64                         u5301 1B63  
                       u5310 1CE3                         u5320 1D0D                         u5330 1D25  
                       u6050 1FBD                         u5331 1D24                         u6051 1FBC  
                       u5340 1A72                         u6060 1FC7                         u5341 1A71  
                       u6117 1FD5                         u6061 1FC6                         u5350 1A7E  
                       u6070 1FE5                         u5351 1A7D                         u6127 1FF4  
                       u6071 1FE4                         u6137 1A9A                         u5290 1B52  
                       u6147 1E56                         u5291 1B51                         u6157 1E69  
                       u6167 1E7A                         u6177 1E89                         u6187 1E96  
                       u6197 1AD4                         i1l87 07B8            ?_Lcd_Write_String 01D7  
                       _main 1F5A                         btemp 007E                         start 0016  
         ??_Lcd_Write_String 01D9              ___fldiv@new_exp 0050                 _sprintf$1046 00AA  
            __end_of_Lcd_Cmd 1ADD                        ??_ISR 00C3                ___fltol@sign1 005A  
            __end_of___fladd 1800                        ?_main 0070              __end_of___fldiv 136D  
            __end_of___awdiv 1E4E              __end_of___flneg 1A2B              __end_of___awmod 1D7F  
            __end_of___flmul 1000              __end_of___flsub 1B01              __end_of___fltol 0882  
                      _ANSEL 0188              __end_of___lldiv 1DE5              ___awdiv@divisor 0077  
            __end_of___llmod 1CD2              __end_of___lwdiv 1C30                        i1l114 0805  
                      i1l132 1018                        i1l117 1A69                        i1l126 1B24  
                      i1l313 063E                        i1l305 04D7                        i1l138 1BEB  
                      i1l323 1B31                        i1l325 1B49                        i1l253 0C9E  
                      i1l510 1C68                        i1l246 1577                        i1l511 1C7D  
                      i1l319 0685                        i1l504 0932                        i1l272 009F  
            __end_of___lwmod 1BAA                        i1l514 1ED4                        i1l522 1A2A  
                      i1l540 118F                        i1l509 1C4C                        i1l517 1F40  
                      i1l533 086C                        i1l541 1101                        i1l518 1F59  
                      i1l526 0881                        i1l359 1DE4                        i1l551 1182  
                      i1l536 0881                        i1l544 1152                        i1l730 1360  
                      i1l722 12DE                        i1l706 11EC                        i1l650 15DB  
                      i1l810 1A3C                        i1l298 0493                        i1l803 109C  
                      i1l708 136C                        i1l804 10A8                        i1l476 1E4D  
                      i1l493 093F                        i1l629 1C2F                        i1l654 1682  
                      i1l494 08A4                        i1l671 174D                        i1l663 17FF  
                      i1l639 1BA9                        i1l728 1350                        i1l656 1659  
                      i1l752 0F6B                        i1l681 1793                        i1l497 0902  
                      i1l489 1D7E                        i1l746 0FFF                        i1l675 1771  
                      i1l579 1CD1                        i1l692 17F3                        i1l684 17D1  
                      i1l693 17FF                        i1l765 07DD                        i1l790 103B  
                      i1l758 0FF3            ?i1_Lcd_Set_Cursor 0074                        i1l767 07EF  
                      i1l696 1B00                        i1l792 10D2                        i1l796 1080  
            ___awdiv@counter 0020                        _PORTB 0006                        _PORTC 0007  
                      _PORTD 0008                        _PORTE 0009      __size_of_Lcd_Set_Cursor 0026  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                        _TRISE 0089                  ?i1_Lcd_Port 0070  
            __end_of_confADC 1A50           ??i1_Lcd_Set_Cursor 0075           __size_ofi1_Lcd_Cmd 001A  
            __end_of_conf_ch 1A85              __end_of_dpowers 18A0                        _scale 0940  
            __end_of_isdigit 1A3D                        pclath 000A  __size_ofi1_Lcd_Write_String 0042  
                      status 0003                        wtemp0 007E              __end_of_sprintf 0686  
           __end_of_Lcd_Init 1EB8             __end_of_Lcd_Port 1A18              __initialization 0019  
               __end_of_main 2000                       ??_main 01DE           __size_of_Lcd_Clear 000D  
       __size_of__tdiv_to_l_ 00BD                       _ADCON1 009F             ___llmod@dividend 0074  
                     ?_scale 003E                       _ADRESH 001E             ___awdiv@dividend 0079  
                     _ANSELH 0189                       i1l3000 0927                       i1l3010 1B2B  
                     i1l3002 0937                       i1l3100 0840                       i1l3020 1D7F  
                     i1l3012 1B38                       i1l3030 1DAC                       i1l3022 1D8F  
                     i1l3014 1B3F                       i1l3006 1B25                       i1l3032 1DBE  
                     i1l3024 1D92                       i1l3040 1DDC                       i1l3120 1C7E  
                     i1l3016 1B45                       i1l3008 1B27                       i1l2400 1D36  
                     i1l3200 1004                       i1l3050 1C7A                       i1l3114 0861  
                     i1l3106 0848                       i1l3034 1DCC                       i1l3026 1D9F  
                     i1l3130 1CAC                       i1l3122 1C86                       i1l2330 07CA  
                     i1l2410 1D4F                       i1l2402 1D3B                       i1l3202 1007  
                     i1l3052 1C7C                       i1l3044 1C30                       i1l3060 1EE8  
                     i1l2500 15B2                       i1l3140 1ADD                       i1l3116 0871  
                     i1l3108 085A                       i1l3036 1DCD                       i1l3028 1DA3  
                     i1l3132 1CBA                       i1l3124 1C89                       i1l2340 07EB  
                     i1l2332 07CC                       i1l2412 1D53                       i1l2404 1D41  
                     i1l2420 1D70                       i1l3300 008A                       i1l3204 100D  
                     i1l3046 1C44                       i1l3070 1F56                       i1l3062 1EF0  
                     i1l2510 15C3                       i1l2502 15B3                       i1l3142 1AE1  
                     i1l3118 0876                       i1l3038 1DD6                       i1l3134 1CC3  
                     i1l3126 1C96                       i1l3150 1023                       i1l2334 07D3  
                     i1l2430 1BEE                       i1l2350 1DEC                       i1l2422 1D75  
                     i1l2414 1D5D                       i1l2406 1D44                       i1l3310 00BD  
                     i1l3302 009B                       i1l3206 1010                       i1l3048 1C60  
                     i1l3072 1F58                       i1l3064 1EF4                       i1l3056 1EB8  
                     i1l3080 1A2A                       i1l2600 16E7                       i1l2520 15E1  
                     i1l2512 15C8                       i1l2504 15B9                       i1l3128 1C9A  
                     i1l3136 1CC9                       i1l3160 1051                       i1l3152 1033  
                     i1l2336 07D7                       i1l2440 1C06                       i1l2432 1BF4  
                     i1l2360 1E00                       i1l2352 1DF1                       i1l2424 1D7A  
                     i1l2416 1D63                       i1l2408 1D4B                       i1l3400 0421  
                     i1l3320 00E3                       i1l3312 00C9                       i1l3304 009D  
                     i1l3208 1015                       i1l3066 1F18                       i1l3058 1ECC  
                     i1l2610 1755                       i1l2602 1725                       i1l2530 15F5  
                     i1l2522 15E5                       i1l2514 15D0                       i1l2506 15BD  
                     i1l3090 081C                       i1l3170 1087                       i1l3162 105E  
                     i1l3154 1043                       i1l3146 101A                       i1l2338 07E6  
                     i1l2442 1C17                       i1l2434 1BF7                       i1l2450 1C2B  
                     i1l2370 1E16                       i1l2362 1E02                       i1l2354 1DF3  
                     i1l2346 1DE5                       i1l2418 1D6A                       i1l3410 049B  
                     i1l3402 0428                       i1l3330 0136                       i1l3322 00FC  
                     i1l3314 00CD                       i1l3500 11B7                       i1l3068 1F1C  
                     i1l3076 1A20                       i1l2620 1770                       i1l2612 175A  
                     i1l2604 172B                       i1l2540 1609                       i1l2532 15F9  
                     i1l2524 15E9                       i1l2516 15D1                       i1l2508 15BE  
                     i1l3092 0831                       i1l3084 0806                       i1l3180 10C0  
                     i1l3172 1092                       i1l3164 1065                       i1l3148 101F  
                     i1l2700 0CE7                       i1l2444 1C1D                       i1l2436 1BFE  
                     i1l2428 1BEC                       i1l2460 1B80                       i1l2380 1E39  
                     i1l2372 1E1A                       i1l2364 1E08                       i1l2356 1DF7  
                     i1l2348 1DE8                       i1l3420 04CA                       i1l3412 04A4  
                     i1l3404 042D                       i1l3340 0171                       i1l3332 0141  
                     i1l3324 0115                       i1l3316 00D1                       i1l3308 00A1  
                     i1l3510 11CF                       i1l3502 11BF                       i1l3078 1A28  
                     i1l2622 1775                       i1l2630 1781                       i1l2606 1730  
                     i1l2550 161D                       i1l2542 160D                       i1l2534 15FD  
                     i1l2526 15ED                       i1l2518 15D3                       i1l3094 0832  
                     i1l3086 0813                       i1l3182 10C5                       i1l3174 1096  
                     i1l3166 1069                       i1l3158 104C                       i1l2710 0D03  
                     i1l2702 0CEF                       i1l2446 1C1E                       i1l2438 1C02  
                     i1l2470 1B9F                       i1l2462 1B84                       i1l2454 1B70  
                     i1l2374 1E2B                       i1l2366 1E0B                       i1l2382 1E3F  
                     i1l2358 1DFC                       i1l2390 1D26                       i1l3430 04F0  
                     i1l3422 04D1                       i1l3414 04A8                       i1l3406 0468  
                     i1l3350 0203                       i1l3342 0177                       i1l3334 0147  
                     i1l3326 0119                       i1l3318 00DF                       i1l3190 1A51  
                     i1l3600 1313                       i1l3512 11D4                       i1l3520 11E4  
                     i1l3504 11C4                       i1l2624 1778                       i1l2616 1763  
                     i1l2608 173F                       i1l2632 1785                       i1l2560 165D  
                     i1l2552 1621                       i1l2544 1611                       i1l2536 1601  
                     i1l2528 15F1                       i1l2480 1585                       i1l3096 083A  
                     i1l3184 10C9                       i1l3176 10A0                       i1l3168 1077  
                     i1l2800 0FE7                       i1l2720 0D46                       i1l2704 0CF1  
                     i1l2448 1C25                       i1l2464 1B88                       i1l2456 1B76  
                     i1l2472 1BA5                       i1l2384 1E44                       i1l2376 1E31  
                     i1l2368 1E12                       i1l2392 1D27                       i1l3440 05CF  
                     i1l3432 050E                       i1l3424 04E0                       i1l3416 04AE  
                     i1l3408 0487                       i1l3360 028B                       i1l3352 021E  
                     i1l3344 0196                       i1l3336 015A                       i1l3328 011D  
                     i1l3280 003C                       i1l3192 1A54                       i1l3610 1347  
                     i1l3602 1319                       i1l3522 11F4                       i1l3530 120D  
                     i1l3514 11D9                       i1l3506 11CA                       i1l2650 17CD  
                     i1l2642 1798                       i1l2634 1786                       i1l2626 177A  
                     i1l2618 176C                       i1l2570 1676                       i1l2562 1666  
                     i1l2546 1615                       i1l2538 1605                       i1l2554 1625  
                     i1l2490 159C                       i1l2482 1589                       i1l3098 083C  
                     i1l3186 10CA                       i1l3178 10AA                       i1l2802 0FEB  
                     i1l2730 0DCF                       i1l2722 0D62                       i1l2714 0D0C  
                     i1l2706 0CF9                       i1l2466 1B92                       i1l2458 1B79  
                     i1l2386 1E49                       i1l2378 1E32                       i1l2394 1D2B  
                     i1l3450 0623                       i1l3434 0569                       i1l3442 060A  
                     i1l3426 04E5                       i1l3418 04BB                       i1l3370 0300  
                     i1l3362 02A6                       i1l3346 01E1                       i1l3338 016D  
                     i1l3354 0226                       i1l3290 0057                       i1l3282 0043  
                     i1l2810 0801                       i1l3194 1A5A                       i1l3612 134F  
                     i1l3604 1326                       i1l3540 1235                       i1l3532 1212  
                     i1l3524 1200                       i1l3516 11E1                       i1l3508 11CE  
                     i1l2660 17E9                       i1l2652 17D6                       i1l2644 179D  
                     i1l2636 178A                       i1l2628 177F                       i1l2580 1694  
                     i1l2564 1668                       i1l2572 167A                       i1l2556 1626  
                     i1l2548 1619                       i1l2492 159D                       i1l2484 158A  
                     i1l2476 1578                       i1l2804 0FEC                       i1l2740 0E42  
                     i1l2732 0DDF                       i1l2724 0D8E                       i1l2716 0D1C  
                     i1l2708 0CFE                       i1l2468 1B98                       i1l2396 1D30  
                     i1l3460 064A                       i1l3444 0612                       i1l3436 05A4  
                     i1l3428 04EC                       i1l3372 0308                       i1l3364 02CD  
                     i1l3380 034E                       i1l3356 0235                       i1l3348 01FA  
                     i1l3452 062A                       i1l3292 005B                       i1l3284 0048  
                     i1l3276 0031                       i1l3196 1A5D                       i1l3700 0709  
                     i1l3614 1356                       i1l3606 1334                       i1l3550 125E  
                     i1l3542 123D                       i1l3526 1204                       i1l3518 11E2  
                     i1l2662 17ED                       i1l2654 17DB                       i1l2646 17AB  
                     i1l2638 1790                       i1l2590 16BE                       i1l2582 16AB  
                     i1l2574 1686                       i1l2566 166C                       i1l2558 163D  
                     i1l2486 158F                       i1l2494 159F                       i1l2478 157F  
                     i1l2902 10D3                       i1l2806 0FF7                       i1l2750 0EEF  
                     i1l2742 0E5F                       i1l2734 0DFC                       i1l2726 0DAA  
                     i1l2718 0D29                       i1l2670 0C9F                       i1l2398 1D32  
                     i1l3462 0659                       i1l3454 0630                       i1l3446 0619  
                     i1l3438 05C3                       i1l3382 0383                       i1l3374 0326  
                     i1l3366 02DC                       i1l3358 027C                       i1l3294 005E  
                     i1l3286 004A                       i1l3278 0036                       i1l3470 066F  
                     i1l3198 1A66                       i1l3630 1B13                       i1l3710 0739  
                     i1l3702 071D                       i1l3616 135A                       i1l3608 1343  
                     i1l3560 127F                       i1l3552 1262                       i1l3544 1245  
                     i1l3536 121B                       i1l2664 17EF                       i1l2656 17E3  
                     i1l2648 17AF                       i1l2592 16C2                       i1l2584 16AF  
                     i1l2576 168B                       i1l2568 166D                       i1l2496 15A7  
                     i1l2488 1594                       i1l2920 1119                       i1l2904 10E6  
                     i1l2760 0F3B                       i1l2752 0F17                       i1l2744 0E8C  
                     i1l2736 0E0C                       i1l2728 0DC6                       i1l2680 0CB6  
                     i1l2672 0CA6                       i1l2840 1483                       i1l2832 1370  
                     i1l3464 0659                       i1l3456 0638                       i1l3448 061D  
                     i1l3392 03D4                       i1l3384 03D0                       i1l3368 02F7  
                     i1l3472 0681                       i1l3296 0073                       i1l3288 0056  
                     i1l3632 1B19                       i1l3624 1B02                       i1l3640 1BC9  
                     i1l3712 073B                       i1l3704 0727                       i1l3720 07B5  
                     i1l3618 135C                       i1l3570 12A1                       i1l3562 128D  
                     i1l3554 1263                       i1l3546 1247                       i1l3538 122D  
                     i1l3490 11A2                       i1l3482 1190                       i1l2666 17FA  
                     i1l2658 17E8                       i1l2594 16C3                       i1l2586 16B3  
                     i1l2498 15AC                       i1l2930 1144                       i1l2922 1122  
                     i1l2914 1102                       i1l2770 0F50                       i1l2762 0F3C  
                     i1l2754 0F20                       i1l2746 0E9C                       i1l2738 0E29  
                     i1l2690 0CD2                       i1l2682 0CBB                       i1l2674 0CAC  
                     i1l2842 1489                       i1l2834 1376                       i1l2850 0943  
                     i1l3466 0667                       i1l3458 0649                       i1l3386 03D2  
                     i1l3378 0345                       i1l3298 0086                       i1l3634 1B1E  
                     i1l3626 1B07                       i1l3642 1BCF                       i1l3714 0798  
                     i1l3706 072D                       i1l3572 12AA                       i1l3580 12BE  
                     i1l3548 124C                       i1l3556 126C                       i1l3564 1291  
                     i1l3492 11A7                       i1l3484 1197                       i1l2668 17FE  
                     i1l2596 16CC                       i1l2588 16BC                       i1l2940 115E  
                     i1l2932 114C                       i1l2924 112B                       i1l2916 1108  
                     i1l2908 10EF                       i1l2780 0F75                       i1l2772 0F54  
                     i1l2764 0F45                       i1l2756 0F2E                       i1l2748 0EC9  
                     i1l2692 0CD8                       i1l2684 0CC3                       i1l2676 0CB0  
                     i1l2852 0947                       i1l3396 040B                       i1l3628 1B0C  
                     i1l3636 1BAA                       i1l3716 07A0                       i1l3708 0735  
                     i1l3582 12C2                       i1l3574 12AE                       i1l3566 1297  
                     i1l3558 127E                       i1l3494 11AC                       i1l3486 119D  
                     i1l2598 16D1                       i1l2950 1187                       i1l2934 1156  
                     i1l2942 1170                       i1l2926 1139                       i1l2918 1117  
                     i1l2790 0FB3                       i1l2782 0F83                       i1l2774 0F68  
                     i1l2758 0F37                       i1l2766 0F4B                       i1l2694 0CDC  
                     i1l2686 0CC5                       i1l2678 0CB1                       i1l2846 1534  
                     i1l2862 0A38                       i1l2854 0949                       i1l3398 0415  
                     i1l3638 1BAD                       i1l3592 12E3                       i1l3584 12C3  
                     i1l3576 12AF                       i1l3568 129F                       i1l3496 11B4  
                     i1l3488 11A1                       i1l2960 0898                       i1l2928 1143  
                     i1l2792 0FBE                       i1l2784 0F87                       i1l2768 0F4F  
                     i1l2696 0CDD                       i1l2688 0CCD                       i1l2880 0BE3  
                     i1l2864 0A3F                       i1l2856 0950                       i1l2872 0AF4  
                     i1l3594 12E8                       i1l3586 12C7                       i1l3578 12B8  
                     i1l3498 11B5                       i1l2970 08BE                       i1l2954 0882  
                     i1l2794 0FCD                       i1l2786 0FA0                       i1l2778 0F70  
                     i1l2698 0CE2                       i1l2890 1A2C                       i1l2882 0BEA  
                     i1l2874 0AFB                       i1l3690 0694                       i1l3596 12F6  
                     i1l3588 12DB                       i1l2980 08F2                       i1l2972 08C0  
                     i1l2956 088F                       i1l2948 1177                       i1l2796 0FD7  
                     i1l2788 0FA6                       i1l2892 1A2D                       i1l2868 0AC7  
                     i1l3756 00B5                       i1l3692 069C                       i1l3598 12FA  
                     i1l2982 08F3                       i1l2974 08C9                       i1l2966 08A5  
                     i1l2798 0FD9                       i1l2894 1A33                       i1l2886 0C72  
                     i1l3694 06A0                       i1l3686 0686                       i1l2992 090E  
                     i1l2984 08FC                       i1l2976 08D2                       i1l2968 08AD  
                     i1l2896 1A39                       i1l3696 06A4                       i1l3688 068C  
                     i1l2986 0906                       i1l2994 0920                       i1l2978 08E4  
                     i1l2898 1A3B                       i1l3698 0701                       u310_20 1DF7  
                     u310_21 1DF6                       u311_20 1E08                       u311_21 1E07  
                     u320_20 1D36                       u400_21 0DEE                       u320_21 1D35  
                     u400_22 0DF5                       u400_23 0DFC                       u312_25 1E0C  
                     u313_20 1E1A                       u321_20 1D41                       u401_21 0E1B  
                     u313_21 1E19                       u321_21 1D40                       u401_22 0E22  
                     u401_23 0E29                       u306_20 07D7                       u330_20 1C06  
                     u306_21 07D6                       u330_21 1C05                       u410_25 0F19  
                     u402_25 0E2B                       u314_25 1E1B                       u322_25 1D45  
                     u315_20 1E2B                       u323_20 1D53                       u403_21 0E51  
                     u315_21 1E2A                       u323_21 1D52                       u403_22 0E58  
                     u403_23 0E5F                       u307_25 07DE                       u411_25 0F30  
                     u331_25 1C07                       u315_25 1E27                       u500_20 082A  
                     u308_20 07EB                       u420_20 0F96                       u412_20 0F3B  
                     u332_20 1C17                       u340_20 1BA5                       u324_20 1D5D  
                     u308_21 07EA                       u412_21 0F3A                       u404_21 0E7E  
                     u332_21 1C16                       u340_21 1BA4                       u324_21 1D5C  
                     u404_22 0E85                       u404_23 0E8C                       u500_25 0825  
                     u420_25 0F91                       u332_25 1C13                       u316_25 1E33  
                     u324_25 1D59                       u341_20 1589                       u501_20 0840  
                     u421_20 0FB3                       u317_20 1E3F                       u309_20 1DEC  
                     u341_21 1588                       u501_21 083F                       u421_21 0FB2  
                     u405_21 0EAB                       u317_21 1E3E                       u309_21 1DEB  
                     u405_22 0EB2                       u405_23 0EB9                       u421_25 0FAF  
                     u413_25 0F3E                       u333_25 1C1F                       u325_25 1D64  
                     u350_20 163D                       u342_20 158F                       u502_20 0847  
                     u422_20 0FCD                       u414_20 0F4F                       u406_20 0ED5  
                     u334_20 1C2B                       u318_20 1E44                       u326_20 1D70  
                     u350_21 163C                       u342_21 158E                       u502_21 0846  
                     u422_21 0FCC                       u414_21 0F4E                       u334_21 1C2A  
                     u318_21 1E43                       u326_21 1D6F                       u350_25 1639  
                     u510_25 1C8B                       u422_25 0FC9                       u406_25 0ED0  
                     u430_25 14F3                       u351_20 1648                       u343_20 1594  
                     u511_20 1C9A                       u423_20 0FEB                       u415_20 0F54  
                     u335_20 1B76                       u327_20 1D75                       u319_20 1D2B  
                     u351_21 1646                       u343_21 1593                       u511_21 1C99  
                     u423_21 0FEA                       u415_21 0F53                       u407_21 0EE1  
                     u335_21 1B75                       u327_21 1D74                       u319_21 1D2A  
                     u407_22 0EE8                       u407_23 0EEF                       u503_25 0849  
                     u431_25 153F                       u360_20 16AF                       u352_20 1649  
                     u344_20 15B2                       u504_20 0859                       u512_20 1CAC  
                     u416_20 0F68                       u408_20 0EFD                       u328_20 1BF4  
                     u424_20 1376                       u432_20 0947                       u600_20 1B07  
                     u360_21 16AE                       u344_21 15B1                       u504_21 0858  
                     u512_21 1CAB                       u416_21 0F67                       u328_21 1BF3  
                     u424_21 1375                       u432_21 0946                       u600_21 1B06  
                     u512_25 1CA8                       u520_25 1078                       u408_25 0EF8  
                     u336_25 1B7A                       u440_25 0ACA                       u361_20 16B3  
                     u353_20 165D                       u345_20 15BD                       u505_20 0860  
                     u521_20 1086                       u417_20 0F6F                       u337_20 1B88  
                     u441_20 0AFB                       u433_20 0950                       u601_20 1B19  
                     u361_21 16B2                       u353_21 165C                       u345_21 15BC  
                     u505_21 085F                       u521_21 1085                       u417_21 0F6E  
                     u409_21 0F09                       u337_21 1B87                       u441_21 0AFA  
                     u433_21 094F                       u601_21 1B18                       u409_22 0F10  
                     u409_23 0F17                       u513_25 1CBB                       u329_25 1BF8  
                     u425_25 1393                       u362_20 16C2                       u354_20 166C  
                     u346_20 15C3                       u514_20 1CC9                       u418_20 0F75  
                     u338_20 1B92                       u450_20 1A39                       u602_20 1BB7  
                     u610_20 072D                       u362_21 16C1                       u354_21 166B  
                     u346_21 15C2                       u514_21 1CC8                       u418_21 0F74  
                     u338_21 1B91                       u450_21 1A38                       u610_21 072C  
                     u370_25 1765                       u506_25 0863                       u522_25 108B  
                     u338_25 1B8E                       u426_25 13ED                       u442_25 0B1B  
                     u434_25 0970                       u371_20 1770                       u347_20 15C8  
                     u507_20 0871                       u523_20 1096                       u515_20 101F  
                     u451_20 10E6                       u419_20 0F87                       u603_20 1BD9  
                     u371_21 176F                       u347_21 15C7                       u507_21 0870  
                     u523_21 1095                       u515_21 101E                       u451_21 10E5  
                     u419_21 0F86                       u363_25 16C5                       u355_25 166F  
                     u339_25 1B99                       u427_25 1442                       u443_25 0B57  
                     u435_25 09AC                       u380_20 17BE                       u372_20 1775  
                     u364_20 16E7                       u356_20 1682                       u348_20 15E1  
                     u508_20 0876                       u524_20 109C                       u516_20 1023  
                     u460_20 116F                       u452_20 1100                       u428_20 1489  
                     u540_20 00CD                       u604_20 1BEB                       u372_21 1774  
                     u364_21 16E6                       u356_21 1681                       u348_21 15E0  
                     u508_21 0875                       u524_21 109B                       u516_21 1022  
                     u460_21 116E                       u452_21 10FF                       u428_21 1488  
                     u540_21 00CC                       u604_21 1BEA                       u364_23 16E3  
                     u380_25 17B9                       u444_25 0BA2                       u436_25 09F7  
                     u620_27 1012                       u381_20 17CD                       u373_20 177F  
                     u357_20 1686                       u349_20 15E5                       u509_20 1C86  
                     u525_20 10A0                       u517_20 1043                       u461_20 1176  
                     u445_20 0BEA                       u437_20 0A3F                       u541_20 00FC  
                     u381_21 17CC                       u373_21 177E                       u365_21 16FE  
                     u357_21 1685                       u349_21 15E4                       u509_21 1C85  
                     u525_21 109F                       u517_21 1042                       u461_21 1175  
                     u445_21 0BE9                       u437_21 0A3E                       u541_21 00FB  
                     u365_22 16FF                       u365_23 1704                       u365_24 1705  
                     u365_25 170A                       u453_25 1124                       u429_25 14A6  
                     u365_26 170B                       u621_27 1A61                       u382_20 17D6  
                     u374_20 1785                       u366_20 1712                       u358_20 168B  
                     u526_20 10B5                       u470_20 0906                       u454_20 1139  
                     u390_20 0CDC                       u550_20 02DC                       u542_20 0136  
                     u382_21 17D5                       u374_21 1784                       u366_21 1713  
                     u358_21 168A                       u470_21 0905                       u454_21 1138  
                     u390_21 0CDB                       u550_21 02DB                       u542_21 0135  
                     u366_22 1718                       u366_23 1719                       u526_25 10B0  
                     u518_25 1056                       u462_25 1179                       u454_25 1135  
                     u446_25 0BFD                       u438_25 0A52                       u550_25 02D8  
                     u383_20 17DB                       u375_20 178A                       u367_20 1730  
                     u527_20 10C5                       u519_20 1064                       u471_20 090D  
                     u463_20 1187                       u391_20 0CE2                       u551_20 02F7  
                     u543_20 0171                       u383_21 17DA                       u375_21 1789  
                     u367_21 172F                       u359_21 169D                       u527_21 10C4  
                     u519_21 1063                       u471_21 090C                       u463_21 1186  
                     u391_21 0CE1                       u551_21 02F6                       u543_21 0170  
                     u359_22 16A4                       u359_23 16AB                       u455_25 1145  
                     u447_25 0C39                       u439_25 0A8E                       u384_20 17E8  
                     u376_20 1790                       u368_20 1755                       u480_20 1B45  
                     u528_20 10C9                       u464_20 088F                       u456_20 1152  
                     u392_20 0CE7                       u560_20 04E5                       u544_20 01FA  
                     u536_20 003C                       u608_20 068C                       u384_21 17E7  
                     u376_21 178F                       u368_21 1754                       u480_21 1B44  
                     u528_21 10C8                       u464_21 088E                       u456_21 1151  
                     u392_21 0CE6                       u560_21 04E4                       u544_21 01F9  
                     u536_21 003B                       u608_21 068B                       u472_25 090F  
                     u448_25 0C75                       u552_25 03D7                       u385_20 17ED  
                     u377_20 1797                       u369_20 175A                       u481_20 1D8F  
                     u473_20 091F                       u465_20 08A3                       u457_20 1156  
                     u393_20 0CFE                       u449_20 1A33                       u553_20 040A  
                     u545_20 021E                       u537_20 0056                       u609_20 0694  
                     u385_21 17EC                       u377_21 1796                       u369_21 1759  
                     u481_21 1D8E                       u473_21 091E                       u465_21 08A2  
                     u457_21 1155                       u393_21 0CFD                       u449_21 1A32  
                     u553_21 0409                       u545_21 021D                       u537_21 0055  
                     u609_21 0693                       u561_25 056C                       u553_25 0406  
                     u490_20 1C7A                       u386_20 17FE                       u378_20 179D  
                     u474_20 0926                       u458_20 115D                       u394_20 0D03  
                     u570_20 0681                       u554_20 0415                       u546_20 0235  
                     u538_20 009A                       u490_21 1C79                       u386_21 17FD  
                     u378_21 179C                       u474_21 0925                       u458_21 115C  
                     u394_21 0D02                       u570_21 0680                       u554_21 0414  
                     u546_21 0234                       u538_21 0099                       u490_25 1C76  
                     u482_25 1D94                       u466_25 08CB                       u562_25 05D2  
                     u546_25 0231                       u571_20 11A1                       u491_20 1ECC  
                     u379_20 17AF                       u483_20 1DA3                       u467_20 08E4  
                     u387_20 0CB0                       u563_20 0611                       u555_20 0421  
                     u547_20 028B                       u539_20 00C9                       u571_21 11A0  
                     u491_21 1ECB                       u379_21 17AE                       u483_21 1DA2  
                     u467_21 08E3                       u395_21 0D54                       u387_21 0CAF  
                     u563_21 0610                       u555_21 0420                       u547_21 028A  
                     u539_21 00C8                       u395_22 0D5B                       u395_23 0D62  
                     u475_25 0929                       u467_25 08E0                       u459_25 115F  
                     u547_25 0287            ?i1_Lcd_Write_Char 0070                       u572_20 11A7  
                     u492_20 1EE8                       u476_20 0937                       u388_20 0CB6  
                     u564_20 0629                       u548_20 02A6                       u572_21 11A6  
                     u492_21 1EE7                       u476_21 0936                       u396_21 0D70  
                     u388_21 0CB5                       u564_21 0628                       u548_21 02A5  
                     u396_22 0D77                       u396_23 0D7E                       u580_25 124E  
                     u484_25 1DA5                       u468_25 08F5                       u556_25 0430  
                     u573_20 11AC                       u493_20 1EF4                       u485_20 1DBE  
                     u477_20 1B2B                       u469_20 0902                       u389_20 0CBB  
                     u565_20 0630                       u557_20 049A                       u549_20 02CD  
                     u573_21 11AB                       u493_21 1EF3                       u485_21 1DBD  
                     u477_21 1B2A                       u469_21 0901                       u397_21 0D9C  
                     u389_21 0CBA                       u565_21 062F                       u557_21 0499  
                     u549_21 02CC                       u397_22 0DA3                       u397_23 0DAA  
                     u581_25 1257                       u485_25 1DBA                       u590_20 12C2  
                     u582_20 1262                       u574_20 11CE                       u566_20 0638  
                     u558_20 04BB                       u590_21 12C1                       u582_21 1261  
                     u574_21 11CD                       u494_21 1F03                       u398_21 0DB8  
                     u566_21 0637                       u558_21 04BA                       u494_22 1F04  
                     u398_22 0DBF                       u494_23 1F09                       u398_23 0DC6  
                     u494_24 1F0A                       u494_25 1F0F                       u486_25 1DCE  
                     u478_25 1B32                       u558_25 04B7                       u494_26 1F10  
                     u591_20 12C7                       u575_20 11D4                       u495_20 1F1C  
                     u487_20 1DDC                       u567_20 0649                       u559_20 04CA  
                     u591_21 12C6                       u575_21 11D3                       u495_21 1F1B  
                     u487_21 1DDB                       u567_21 0648                       u559_21 04C9  
                     u583_25 1265                       u479_25 1B39                       u399_25 0DC8  
                     u567_25 0645                       u559_25 04C6                       u592_20 12DB  
                     u584_20 127E                       u576_20 11D9                       u488_20 1C44  
                     u568_20 0659                       u592_21 12DA                       u584_21 127D  
                     u576_21 11D8                       u488_21 1C43                       u496_21 1F2B  
                     u568_21 0658                       u496_22 1F2C                       u496_23 1F31  
                     u496_24 1F32                       u584_25 127A                       u496_25 1F37  
                     u568_25 0655                    ??_Lcd_Cmd 01D5                       u496_26 1F38  
                     u593_20 12E2                       u585_20 1297                       u577_20 11F4  
                     u489_20 1C60                       u497_20 1F56                       u569_20 0667  
                     u593_21 12E1                       u585_21 1296                       u577_21 11F3  
                     u489_21 1C5F                       u497_21 1F55                       u569_21 0666  
                     u497_25 1F52                       u594_20 12E8                       u586_20 129F  
                     u578_20 1212                       u498_20 1A28                       u594_21 12E7  
                     u586_21 129E                       u578_21 1211                       u498_21 1A27  
                     u595_20 12FA                       u579_20 124C                       u499_20 0813  
                     u595_21 12F9                       u579_21 124B                       u499_21 0812  
                     u587_25 12A3                       u596_20 1309                       u588_20 12AE  
                     u588_21 12AD                       u596_25 1304                       u597_20 1326  
                     u597_21 1325                       u597_25 1322                       u589_25 12B1  
                     u598_20 1343                       u598_21 1342                       u598_25 133F  
                     u599_20 135A                       u599_21 1359      __size_of_Lcd_Write_Char 001C  
           __end_of___xxtofl 10D3           ??i1_Lcd_Write_Char 0071             __end_of__powers_ 1844  
        __size_ofi1_Lcd_Port 0006            __end_ofi1_Lcd_Cmd 1A6A                       ___flge 1EB8  
                     ___fleq 1C30            i1Lcd_Write_Char@a 0072                    ??___fladd 005A  
                     ___wmul 1B25                    ??___fldiv 0046                    ??___awdiv 007B  
                  ??___flneg 0074                    ??___awmod 0074                    ??___flmul 002C  
                  ??___flsub 007E                    ??___fltol 0055                    ??___lldiv 0078  
                  ??___llmod 0078                    ??___lwdiv 007A                    ??___lwmod 0074  
                     _config 1AA1                       _buffer 0194                       _fround 136D  
           ___awdiv@quotient 0022              ___awmod@divisor 0070                    ??_confADC 01D4  
            ___awmod@counter 0075                    ??_conf_ch 01D6                    ??_isdigit 0070  
         __size_of__Umul8_16 0027                       saved_w 007E                    ??_sprintf 00A5  
            Lcd_Set_Cursor@a 01DA              Lcd_Set_Cursor@b 01D8                   ___flge@ff1 0070  
                 ___flge@ff2 0074                 ___xxtofl@arg 007A                 ___xxtofl@exp 0079  
               ___xxtofl@val 0070                   ___fleq@ff1 0070                   ___fleq@ff2 0074  
    __end_of__initialization 002A                   ___flneg@f1 0070            __end_of_Lcd_Clear 07FD  
                 ___fltol@f1 0051               __pcstackCOMMON 0070                __end_of_scale 0C9F  
             _Lcd_Set_Cursor 1B4A                   __div_to_l_ 0882                    ?_Lcd_Init 0070  
                  ?_Lcd_Port 0070              __div_to_l_@exp1 0025              __div_to_l_@cntr 0024  
                    ??_scale 0042              __div_to_l_@quot 0020                   __pbssBANK1 00CB  
                 __pbssBANK3 0190                __div_to_l_@f1 0070                __div_to_l_@f2 0074  
          __end_of__Umul8_16 07F0                   __pmaintext 1F5A                      ?___flge 0070  
                    ?___fleq 0070                      ?___wmul 0070                   __pintentry 0004  
                    ?_config 0070                      ?_fround 003E    __size_of_Lcd_Write_String 0054  
     __end_of_Lcd_Set_Cursor 1B70                    ?___xxtofl 0070                 ??i1_Lcd_Port 0070  
                 ??_Lcd_Init 01D8                   ??_Lcd_Port 01D4                   __stringtab 1800  
             _Lcd_Write_Char 1A85                      _Lcd_Cmd 1ABD    __size_ofi1_Lcd_Set_Cursor 0024  
          __end_of__npowers_ 1878                   _scale$1045 004C           __end_ofi1_Lcd_Port 0806  
            __size_of___flge 00A2              __size_of___fleq 004E                      ___fladd 1578  
                    ___fldiv 1190                      ___awdiv 1DE5                      ___flneg 1A20  
                    ___awmod 1D26                      ___flmul 0C9F                      ___flsub 1ADD  
                    ___fltol 0806                      ___lldiv 1D7F              __size_of___wmul 0025  
                    ___llmod 1C7E                      _adc_fin 0190                      ___lwdiv 1BEC  
                    ___lwmod 1B70              __size_of_config 001C                    _ANSELbits 0188  
            __size_of_fround 020B                      _confADC 1A3D              ?_Lcd_Set_Cursor 01D8  
                    __ptext1 1AA1                      __ptext2 1A6A                      __ptext3 1A3D  
                    __ptext4 1CD2                      __ptext5 1A85                      __ptext6 1B4A  
                    __ptext7 1E4E                      __ptext8 07F0                      __ptext9 1ABD  
                    _conf_ch 1A6A                 __size_of_ISR 0143                  ?__div_to_l_ 0070  
                    _dpowers 1878                      _isdigit 1A2B                   ??___xxtofl 0074  
           ___awmod@dividend 0072   __end_ofi1_Lcd_Write_String 1BEC                      _sprintf 002E  
                    clrloop0 1A19                      _voltaje 00CB       __end_of_Lcd_Write_Char 1AA1  
       end_of_initialization 002A              ___lldiv@divisor 0070              ___lldiv@counter 007D  
                  Lcd_Port@a 01D4               __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0074  
  __size_ofi1_Lcd_Write_Char 0016                    i1_Lcd_Cmd 1A50                ??__tdiv_to_l_ 0078  
                ___fladd@grs 0065                ___xxtofl@sign 0078                    _TRISAbits 0085  
                 conf_ch@sel 01D4                  ___fldiv@grs 0052                  ___fldiv@rem 004B  
            ?_Lcd_Write_Char 0070            Lcd_Write_String@a 01D7            Lcd_Write_String@i 01DC  
                ___flmul@grs 0032          __size_of__div_to_l_ 00BE                    _Lcd_Clear 07F0  
             __end_of___flge 1F5A               __end_of___fleq 1C7E               __end_of___wmul 1B4A  
                 ?i1_Lcd_Cmd 0070             _Lcd_Write_String 1CD2               __end_of_config 1ABD  
             __end_of_fround 1578          start_initialization 0019                  __end_of_ISR 07C9  
        __end_of__tdiv_to_l_ 1190            __size_of_Lcd_Init 006A            __size_of_Lcd_Port 0008  
           i1_Lcd_Set_Cursor 1B01              ___llmod@divisor 0070              ___llmod@counter 0079  
                 ?_Lcd_Clear 0070                     ??___flge 0078                     ??___fleq 0078  
                   ??___wmul 0074                    __Umul8_16 07C9                     ??_config 01D4  
            Lcd_Write_Char@a 01D6                     ??_fround 0042                sprintf@tmpval 00B7  
                  ___fladd@a 0056                    ___fladd@b 0052                   fround@prec 0051  
                  ___fldiv@a 003E                    ___fldiv@b 0042                    ___flmul@a 0028  
                  ___flmul@b 0024                    ___flsub@a 0066                    ___flsub@b 006A  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
              __pcstackBANK3 01D4            __size_of___xxtofl 00BA                     ?_Lcd_Cmd 0070  
                sprintf@flag 00AF                  sprintf@eexp 00B5                  sprintf@fval 00BE  
                sprintf@prec 00BC             ___lwdiv@dividend 0078             ??_Lcd_Set_Cursor 01D9  
                   ?___fladd 0052                     ?___fldiv 003E                     ?___awdiv 0077  
                   ?___flneg 0070                     ?___awmod 0070                     ?___flmul 0024  
                   ?___flsub 0066                     ?___fltol 0051                     ?___lldiv 0070  
                   ?___llmod 0070                    __npowers_ 1844                   ?__Umul8_16 0070  
                   ?___lwdiv 0076                     ?___lwmod 0070             i1_Lcd_Write_Char 1003  
                ??i1_Lcd_Cmd 0071         i1Lcd_Set_Cursor@temp 0077                     ?_confADC 0070  
                  __pstrings 1800                  __tdiv_to_l_ 10D3                     ?_conf_ch 01D4  
               ??__div_to_l_ 0078                     ?_isdigit 0070             ___lwdiv@quotient 007B  
                   ?_sprintf 00A0               __size_of_scale 035F            interrupt_function 0004  
             ___wmul@product 0074                    clear_ram0 1A18                     _PIE1bits 008C  
         i1_Lcd_Write_String 1BAA                     Lcd_Cmd@a 01D7                     _PIR1bits 000C  
         __end_of__div_to_l_ 0940                  ??_Lcd_Clear 01D8          ?i1_Lcd_Write_String 0073  
                 _ADCON0bits 001F                  __stringbase 180F            ___wmul@multiplier 0070  
           ??_Lcd_Write_Char 01D5                     _Lcd_Init 1E4E                     _Lcd_Port 1A10  
       ??i1_Lcd_Write_String 0075     __end_of_Lcd_Write_String 1D26             __size_of_Lcd_Cmd 0020  
                ??__Umul8_16 0072             __size_of___fladd 0288             __size_of___fldiv 01DD  
           __size_of___awdiv 0069             __size_of___flneg 000B             __size_of___awmod 0059  
           __size_of___flmul 0361             __size_of___flsub 0024             __size_of___fltol 007C  
           __size_of___lldiv 0066             __size_of___llmod 0054             __size_of___lwdiv 0044  
           __size_of___lwmod 003A                  _fround$1043 004D                  _fround$1044 0049  
         __end_of__stringtab 1810                  _isdigit$862 0070     __end_ofi1_Lcd_Set_Cursor 1B25  
           __size_of_confADC 0013             __size_of_conf_ch 001B                   sprintf@val 00B1  
                   ___xxtofl 1019             __size_of_isdigit 0012              ___lwdiv@divisor 0076  
          i1Lcd_Set_Cursor@a 0076            i1Lcd_Set_Cursor@b 0074              ___lwdiv@counter 007D  
                   __ptext10 1A10                     __ptext11 0686                     __ptext20 1DE5  
                   __ptext12 1BAA                     __ptext21 1A2B                     __ptext13 1003  
                   __ptext30 1B25                     __ptext22 136D                     __ptext14 1B01  
                   __ptext31 1C7E                     __ptext23 1B70                     __ptext15 1A50  
                   __ptext32 1D7F                     __ptext24 1BEC                     __ptext16 0800  
                   __ptext33 0806                     __ptext25 0C9F                     __ptext17 002E  
                   __ptext34 1ADD                     __ptext26 07C9                     __ptext18 0940  
                   __ptext35 1578                     __ptext27 10D3                     __ptext19 1D26  
                   __ptext36 1A20                     __ptext28 0882                     __ptext37 1EB8  
                   __ptext29 1019                     __ptext38 1C30                     __ptext39 1190  
                   __powers_ 1810             __size_of_sprintf 0658                __size_of_main 00A6  
                i1Lcd_Port@a 0070                     _val_pot1 00D0                     _val_pot2 00CF  
        i1Lcd_Write_String@a 0073          i1Lcd_Write_String@i 0078                   _INTCONbits 000B  
                   isdigit@c 0071                     scale@scl 0050                     intlevel1 0000  
                  sprintf@ap 00AE             __tdiv_to_l_@exp1 0025     __end_ofi1_Lcd_Write_Char 1019  
           __tdiv_to_l_@cntr 0024                    sprintf@sp 00BB             __tdiv_to_l_@quot 0020  
           ___lwmod@dividend 0072             ___lldiv@dividend 0074                   i1Lcd_Cmd@a 0073  
                  stringcode 180A           Lcd_Set_Cursor@temp 01DB                 ?__tdiv_to_l_ 0070  
     __Umul8_16@multiplicand 0070                     sprintf@c 00C2                     sprintf@f 00A0  
           ___lldiv@quotient 0079              ___lwmod@divisor 0070              ___lwmod@counter 0075  
                 i1_Lcd_Port 0800                     stringdir 180A                     stringtab 1800  
              ___fladd@signs 0062                 ___fladd@aexp 0063                 ___fladd@bexp 0064  
       __Umul8_16@multiplier 0078            __Umul8_16@product 0074  
